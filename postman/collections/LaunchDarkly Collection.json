{
	"info": {
		"_postman_id": "3f9f3b6b-d4ef-4483-af34-24df216f8c85",
		"name": "LaunchDarkly Collection",
		"description": "# Overview\n\n## Authentication\n\nAll REST API resources are authenticated with either [personal or service access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens), or session cookies. Other authentication mechanisms are not supported. You can manage personal access tokens on your [**Account settings**](https://app.launchdarkly.com/settings/tokens) page.\n\nLaunchDarkly also has SDK keys, mobile keys, and client-side IDs that are used by our server-side SDKs, mobile SDKs, and JavaScript-based SDKs, respectively. **These keys cannot be used to access our REST API**. These keys are environment-specific, and can only perform read-only operations such as fetching feature flag settings.\n\n| Auth mechanism                                                                                  | Allowed resources                                                                                     | Use cases                                          |\n| ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | -------------------------------------------------- |\n| [Personal or service access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens) | Can be customized on a per-token basis                                                                | Building scripts, custom integrations, data export. |\n| SDK keys                                                                                        | Can only access read-only resources specific to server-side SDKs. Restricted to a single environment. | Server-side SDKs                     |\n| Mobile keys                                                                                     | Can only access read-only resources specific to mobile SDKs, and only for flags marked available to mobile keys. Restricted to a single environment.           | Mobile SDKs                                        |\n| Client-side ID                                                                                  | Can only access read-only resources specific to JavaScript-based client-side SDKs, and only for flags marked available to client-side. Restricted to a single environment.           | Client-side JavaScript                             |\n\n> #### Keep your access tokens and SDK keys private\n>\n> Access tokens should _never_ be exposed in untrusted contexts. Never put an access token in client-side JavaScript, or embed it in a mobile application. LaunchDarkly has special mobile keys that you can embed in mobile apps. If you accidentally expose an access token or SDK key, you can reset it from your [**Account settings**](https://app.launchdarkly.com/settings/tokens) page.\n>\n> The client-side ID is safe to embed in untrusted contexts. It's designed for use in client-side JavaScript.\n\n### Authentication using request header\n\nThe preferred way to authenticate with the API is by adding an `Authorization` header containing your access token to your requests. The value of the `Authorization` header must be your access token.\n\nManage personal access tokens from the [**Account settings**](https://app.launchdarkly.com/settings/tokens) page.\n\n### Authentication using session cookie\n\nFor testing purposes, you can make API calls directly from your web browser. If you are logged in to the LaunchDarkly application, the API will use your existing session to authenticate calls.\n\nIf you have a [role](https://docs.launchdarkly.com/home/team/built-in-roles) other than Admin, or have a [custom role](https://docs.launchdarkly.com/home/team/custom-roles) defined, you may not have permission to perform some API calls. You will receive a `401` response code in that case.\n\n> ### Modifying the Origin header causes an error\n>\n> LaunchDarkly validates that the Origin header for any API request authenticated by a session cookie matches the expected Origin header. The expected Origin header is `https://app.launchdarkly.com`.\n>\n> If the Origin header does not match what's expected, LaunchDarkly returns an error. This error can prevent the LaunchDarkly app from working correctly.\n>\n> Any browser extension that intentionally changes the Origin header can cause this problem. For example, the `Allow-Control-Allow-Origin: *` Chrome extension changes the Origin header to `http://evil.com` and causes the app to fail.\n>\n> To prevent this error, do not modify your Origin header.\n>\n> LaunchDarkly does not require origin matching when authenticating with an access token, so this issue does not affect normal API usage.\n\n## Representations\n\nAll resources expect and return JSON response bodies. Error responses also send a JSON body. To learn more about the error format of the API, read [Errors](/#section/Overview/Errors).\n\nIn practice this means that you always get a response with a `Content-Type` header set to `application/json`.\n\nIn addition, request bodies for `PATCH`, `POST`, and `PUT` requests must be encoded as JSON with a `Content-Type` header set to `application/json`.\n\n### Summary and detailed representations\n\nWhen you fetch a list of resources, the response includes only the most important attributes of each resource. This is a _summary representation_ of the resource. When you fetch an individual resource, such as a single feature flag, you receive a _detailed representation_ of the resource.\n\nThe best way to find a detailed representation is to follow links. Every summary representation includes a link to its detailed representation.\n\n### Expanding responses\n\nSometimes the detailed representation of a resource does not include all of the attributes of the resource by default. If this is the case, the request method will clearly document this and describe which attributes you can include in an expanded response.\n\nTo include the additional attributes, append the `expand` request parameter to your request and add a comma-separated list of the attributes to include. For example, when you append `?expand=members,roles` to the [Get team](/tag/Teams#operation/getTeam) endpoint, the expanded response includes both of these attributes.\n\n### Links and addressability\n\nThe best way to navigate the API is by following links. These are attributes in representations that link to other resources. The API always uses the same format for links:\n\n- Links to other resources within the API are encapsulated in a `_links` object\n- If the resource has a corresponding link to HTML content on the site, it is stored in a special `_site` link\n\nEach link has two attributes:\n\n- An `href`, which contains the URL\n- A `type`, which describes the content type\n\nFor example, a feature resource might return the following:\n\n```json\n{\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/features\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/features/sort.order\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_site\": {\n    \"href\": \"/features/sort.order\",\n    \"type\": \"text/html\"\n  }\n}\n```\n\nFrom this, you can navigate to the parent collection of features by following the `parent` link, or navigate to the site page for the feature by following the `_site` link.\n\nCollections are always represented as a JSON object with an `items` attribute containing an array of representations. Like all other representations, collections have `_links` defined at the top level.\n\nPaginated collections include `first`, `last`, `next`, and `prev` links containing a URL with the respective set of elements in the collection.\n\n## Updates\n\nResources that accept partial updates use the `PATCH` verb. Most resources support the [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) format. Some resources also support the [JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) format, and some resources support the [semantic patch](/reference#updates-using-semantic-patch) format, which is a way to specify the modifications to perform as a set of executable instructions. Each resource supports optional [comments](/reference#updates-with-comments) that you can submit with updates. Comments appear in outgoing webhooks, the audit log, and other integrations.\n\nWhen a resource supports both JSON patch and semantic patch, we document both in the request method. However, the specific request body fields and descriptions included in our documentation only match one type of patch or the other.\n\n### Updates using JSON patch\n\n[JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) is a way to specify the modifications to perform on a resource. JSON patch uses paths and a limited set of operations to describe how to transform the current state of the resource into a new state. JSON patch documents are always arrays, where each element contains an operation, a path to the field to update, and the new value.\n\nFor example, in this feature flag representation:\n\n```json\n{\n    \"name\": \"New recommendations engine\",\n    \"key\": \"engine.enable\",\n    \"description\": \"This is the description\",\n    ...\n}\n```\nYou can change the feature flag's description with the following patch document:\n\n```json\n[{ \"op\": \"replace\", \"path\": \"/description\", \"value\": \"This is the new description\" }]\n```\n\nYou can specify multiple modifications to perform in a single request. You can also test that certain preconditions are met before applying the patch:\n\n```json\n[\n  { \"op\": \"test\", \"path\": \"/version\", \"value\": 10 },\n  { \"op\": \"replace\", \"path\": \"/description\", \"value\": \"The new description\" }\n]\n```\n\nThe above patch request tests whether the feature flag's `version` is `10`, and if so, changes the feature flag's description.\n\nAttributes that are not editable, such as a resource's `_links`, have names that start with an underscore.\n\n### Updates using JSON merge patch\n\n[JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) is another format for specifying the modifications to perform on a resource. JSON merge patch is less expressive than JSON patch. However, in many cases it is simpler to construct a merge patch document. For example, you can change a feature flag's description with the following merge patch document:\n\n```json\n{\n  \"description\": \"New flag description\"\n}\n```\n\n### Updates using semantic patch\n\nThe API also supports the semantic patch format. A semantic patch is a way to specify the modifications to perform on a resource as a set of executable instructions.\n\nSemantic patch allows you to be explicit about intent using precise, custom instructions. In many cases, you can define semantic patch instructions independently of the current state of the resource. This can be useful when defining a change that may be applied at a future date.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header.\n\nHere's how:\n\n```\nContent-Type: application/json; domain-model=launchdarkly.semanticpatch\n```\n\nIf you call a semantic patch resource without this header, you will receive a `400` response because your semantic patch will be interpreted as a JSON patch.\n\nThe body of a semantic patch request takes the following properties:\n\n* `comment` (string): (Optional) A description of the update.\n* `environmentKey` (string): (Required for some resources only) The environment key.\n* `instructions` (array): (Required) A list of actions the update should perform. Each action in the list must be an object with a `kind` property that indicates the instruction. If the instruction requires parameters, you must include those parameters as additional fields in the object. The documentation for each resource that supports semantic patch includes the available instructions and any additional parameters.\n\nFor example:\n\n```json\n{\n  \"comment\": \"optional comment\",\n  \"instructions\": [ {\"kind\": \"turnFlagOn\"} ]\n}\n```\n\nIf any instruction in the patch encounters an error, the endpoint returns an error and will not change the resource. In general, each instruction silently does nothing if the resource is already in the state you request.\n\n### Updates with comments\n\nYou can submit optional comments with `PATCH` changes.\n\nTo submit a comment along with a JSON patch document, use the following format:\n\n```json\n{\n  \"comment\": \"This is a comment string\",\n  \"patch\": [{ \"op\": \"replace\", \"path\": \"/description\", \"value\": \"The new description\" }]\n}\n```\n\nTo submit a comment along with a JSON merge patch document, use the following format:\n\n```json\n{\n  \"comment\": \"This is a comment string\",\n  \"merge\": { \"description\": \"New flag description\" }\n}\n```\n\nTo submit a comment along with a semantic patch, use the following format:\n\n```json\n{\n  \"comment\": \"This is a comment string\",\n  \"instructions\": [ {\"kind\": \"turnFlagOn\"} ]\n}\n```\n\n## Errors\n\nThe API always returns errors in a common format. Here's an example:\n\n```json\n{\n  \"code\": \"invalid_request\",\n  \"message\": \"A feature with that key already exists\",\n  \"id\": \"30ce6058-87da-11e4-b116-123b93f75cba\"\n}\n```\n\nThe `code` indicates the general class of error. The `message` is a human-readable explanation of what went wrong. The `id` is a unique identifier. Use it when you're working with LaunchDarkly Support to debug a problem with a specific API call.\n\n### HTTP status error response codes\n\n| Code | Definition        | Description                                                                                       | Possible Solution                                                |\n| ---- | ----------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------- |\n| 400  | Invalid request       | The request cannot be understood.                                    | Ensure JSON syntax in request body is correct.                   |\n| 401  | Invalid access token      | Requestor is unauthorized or does not have permission for this API call.                                                | Ensure your API access token is valid and has the appropriate permissions.                                     |\n| 403  | Forbidden         | Requestor does not have access to this resource.                                                | Ensure that the account member or access token has proper permissions set. |\n| 404  | Invalid resource identifier | The requested resource is not valid. | Ensure that the resource is correctly identified by ID or key. |\n| 405  | Method not allowed | The request method is not allowed on this resource. | Ensure that the HTTP verb is correct. |\n| 409  | Conflict          | The API request can not be completed because it conflicts with a concurrent API request. | Retry your request.                                              |\n| 422  | Unprocessable entity | The API request can not be completed because the update description can not be understood. | Ensure that the request body is correct for the type of patch you are using, either JSON patch or semantic patch.\n| 429  | Too many requests | Read [Rate limiting](/#section/Overview/Rate-limiting).                                               | Wait and try again later.                                        |\n\n## CORS\n\nThe LaunchDarkly API supports Cross Origin Resource Sharing (CORS) for AJAX requests from any origin. If an `Origin` header is given in a request, it will be echoed as an explicitly allowed origin. Otherwise the request returns a wildcard, `Access-Control-Allow-Origin: *`. For more information on CORS, read the [CORS W3C Recommendation](http://www.w3.org/TR/cors). Example CORS headers might look like:\n\n```http\nAccess-Control-Allow-Headers: Accept, Content-Type, Content-Length, Accept-Encoding, Authorization\nAccess-Control-Allow-Methods: OPTIONS, GET, DELETE, PATCH\nAccess-Control-Allow-Origin: *\nAccess-Control-Max-Age: 300\n```\n\nYou can make authenticated CORS calls just as you would make same-origin calls, using either [token or session-based authentication](/#section/Overview/Authentication). If you are using session authentication, you should set the `withCredentials` property for your `xhr` request to `true`. You should never expose your access tokens to untrusted entities.\n\n## Rate limiting\n\nWe use several rate limiting strategies to ensure the availability of our APIs. Rate-limited calls to our APIs return a `429` status code. Calls to our APIs include headers indicating the current rate limit status. The specific headers returned depend on the API route being called. The limits differ based on the route, authentication mechanism, and other factors. Routes that are not rate limited may not contain any of the headers described below.\n\n> ### Rate limiting and SDKs\n>\n> LaunchDarkly SDKs are never rate limited and do not use the API endpoints defined here. LaunchDarkly uses a different set of approaches, including streaming/server-sent events and a global CDN, to ensure availability to the routes used by LaunchDarkly SDKs.\n\n### Global rate limits\n\nAuthenticated requests are subject to a global limit. This is the maximum number of calls that your account can make to the API per ten seconds. All personal access tokens on the account share this limit, so exceeding the limit with one access token will impact other tokens. Calls that are subject to global rate limits return the headers below:\n\n| Header name                    | Description                                                                      |\n| ------------------------------ | -------------------------------------------------------------------------------- |\n| `X-Ratelimit-Global-Remaining` | The maximum number of requests the account is permitted to make per ten seconds. |\n| `X-Ratelimit-Reset`            | The time at which the current rate limit window resets in epoch milliseconds.    |\n\nWe do not publicly document the specific number of calls that can be made globally. This limit may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limit.\n\n### Route-level rate limits\n\nSome authenticated routes have custom rate limits. These also reset every ten seconds. Any access tokens hitting the same route share this limit, so exceeding the limit with one access token may impact other tokens. Calls that are subject to route-level rate limits return the headers below:\n\n| Header name                   | Description                                                                                           |\n| ----------------------------- | ----------------------------------------------------------------------------------------------------- |\n| `X-Ratelimit-Route-Remaining` | The maximum number of requests to the current route the account is permitted to make per ten seconds. |\n| `X-Ratelimit-Reset`           | The time at which the current rate limit window resets in epoch milliseconds.                         |\n\nA _route_ represents a specific URL pattern and verb. For example, the [Delete environment](/tag/Environments#operation/deleteEnvironment) endpoint is considered a single route, and each call to delete an environment counts against your route-level rate limit for that route.\n\nWe do not publicly document the specific number of calls that an account can make to each endpoint per ten seconds. These limits may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limits.\n\n### IP-based rate limiting\n\nWe also employ IP-based rate limiting on some API routes. If you hit an IP-based rate limit, your API response will include a `Retry-After` header indicating how long to wait before re-trying the call. Clients must wait at least `Retry-After` seconds before making additional calls to our API, and should employ jitter and backoff strategies to avoid triggering rate limits again.\n\n## OpenAPI (Swagger) and client libraries\n\nWe have a [complete OpenAPI (Swagger) specification](https://app.launchdarkly.com/api/v2/openapi.json) for our API.\n\nWe auto-generate multiple client libraries based on our OpenAPI specification. To learn more, visit the [collection of client libraries on GitHub](https://github.com/search?q=topic%3Alaunchdarkly-api+org%3Alaunchdarkly&type=Repositories). You can also use this specification to generate client libraries to interact with our REST API in your language of choice.\n\nOur OpenAPI specification is supported by several API-based tools such as Postman and Insomnia. In many cases, you can directly import our specification to explore our APIs.\n\n## Method overriding\n\nSome firewalls and HTTP clients restrict the use of verbs other than `GET` and `POST`. In those environments, our API endpoints that use `DELETE`, `PATCH`, and `PUT` verbs are inaccessible.\n\nTo avoid this issue, our API supports the `X-HTTP-Method-Override` header, allowing clients to \"tunnel\" `DELETE`, `PATCH`, and `PUT` requests using a `POST` request.\n\nFor example, to call a `PATCH` endpoint using a `POST` request, you can include `X-HTTP-Method-Override:PATCH` as a header.\n\n## Beta resources\n\nWe sometimes release new API resources in **beta** status before we release them with general availability.\n\nResources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\nWe try to promote resources into general availability as quickly as possible. This happens after sufficient testing and when we're satisfied that we no longer need to make backwards-incompatible changes.\n\nWe mark beta resources with a \"Beta\" callout in our documentation, pictured below:\n\n> ### This feature is in beta\n>\n> To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Overview/Beta-resources).\n>\n> Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.\n\n### Using beta resources\n\nTo use a beta resource, you must include a header in the request. If you call a beta resource without this header, you receive a `403` response.\n\nUse this header:\n\n```\nLD-API-Version: beta\n```\n\n## Versioning\n\nWe try hard to keep our REST API backwards compatible, but we occasionally have to make backwards-incompatible changes in the process of shipping new features. These breaking changes can cause unexpected behavior if you don't prepare for them accordingly.\n\nUpdates to our REST API include support for the latest features in LaunchDarkly. We also release a new version of our REST API every time we make a breaking change. We provide simultaneous support for multiple API versions so you can migrate from your current API version to a new version at your own pace.\n\n### Setting the API version per request\n\nYou can set the API version on a specific request by sending an `LD-API-Version` header, as shown in the example below:\n\n```\nLD-API-Version: 20220603\n```\n\nThe header value is the version number of the API version you would like to request. The number for each version corresponds to the date the version was released in `yyyymmdd` format. In the example above the version `20220603` corresponds to June 03, 2022.\n\n### Setting the API version per access token\n\nWhen you create an access token, you must specify a specific version of the API to use. This ensures that integrations using this token cannot be broken by version changes.\n\nTokens created before versioning was released have their version set to `20160426`, which is the version of the API that existed before the current versioning scheme, so that they continue working the same way they did before versioning.\n\nIf you would like to upgrade your integration to use a new API version, you can explicitly set the header described above.\n\n> ### Best practice: Set the header for every client or integration\n>\n> We recommend that you set the API version header explicitly in any client or integration you build.\n>\n> Only rely on the access token API version during manual testing.\n\n### API version changelog\n\n|<div style=\"width:75px\">Version</div> | Changes | End of life (EOL)\n|---|---|---|\n| `20220603` | <ul><li>Changed the [list projects](/tag/Projects#operation/getProjects) return value:<ul><li>Response is now paginated with a default limit of `20`.</li><li>Added support for filter and sort.</li><li>The project `environments` field is now expandable. This field is omitted by default.</li></ul></li><li>Changed the [get project](/tag/Projects#operation/getProject) return value:<ul><li>The `environments` field is now expandable. This field is omitted by default.</li></ul></li></ul> | Current |\n| `20210729` | <ul><li>Changed the [create approval request](/tag/Approvals#operation/postApprovalRequest) return value. It now returns HTTP Status Code `201` instead of `200`.</li><li> Changed the [get users](/tag/Users#operation/getUser) return value. It now returns a user record, not a user. </li><li>Added additional optional fields to environment, segments, flags, members, and segments, including the ability to create Big Segments. </li><li> Added default values for flag variations when new environments are created. </li><li>Added filtering and pagination for getting flags and members, including `limit`, `number`, `filter`, and `sort` query parameters. </li><li>Added endpoints for expiring user targets for flags and segments, scheduled changes, access tokens, Relay Proxy configuration, integrations and subscriptions, and approvals. </li></ul> | 2023-06-03 |\n| `20191212` | <ul><li>[List feature flags](/tag/Feature-flags#operation/getFeatureFlags) now defaults to sending summaries of feature flag configurations, equivalent to setting the query parameter `summary=true`. Summaries omit flag targeting rules and individual user targets from the payload. </li><li> Added endpoints for flags, flag status, projects, environments, audit logs, members, users, custom roles, segments, usage, streams, events, and data export. </li></ul> | 2022-07-29 |\n| `20160426` | <ul><li>Initial versioning of API. Tokens created before versioning have their version set to this.</li></ul> | 2020-12-12 |\n\n\nContact Support:\n Name: LaunchDarkly Technical Support Team\n Email: support@launchdarkly.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "25426789-3f9f3b6b-d4ef-4483-af34-24df216f8c85"
	},
	"item": [
		{
			"name": "api/v2",
			"item": [
				{
					"name": "account/relay-auto-configs",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Relay Proxy config",
									"id": "25e661ce-b3b5-4272-8fc2-2a37c17df329",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "incididunt aliquip nulla",
													"description": "(Required) The relay auto config id"
												}
											]
										},
										"description": "Get a single Relay Proxy auto config by ID."
									},
									"response": [
										{
											"id": "0925a7b5-eab0-4119-a3aa-ac5b94e652aa",
											"name": "Relay auto config response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Relay Proxy Demo Config\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fullKey\": \"conse\",\n  \"displayKey\": \"7f30\",\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creator\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "a092c121-e90b-423e-b0f5-5c049204711c",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "57c01364-2506-4e78-9346-35af94261dd6",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "f4d0a0c3-33e2-4271-b312-15672286602b",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "ed935a7b-19cb-4473-bbe2-bcc8a34e5482",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update a Relay Proxy config",
									"id": "c5ebdfcc-d30e-4a0c-a8cc-4da819995cd5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "incididunt aliquip nulla",
													"description": "(Required) The relay auto config id"
												}
											]
										},
										"description": "Update a Relay Proxy config using the JSON patch format."
									},
									"response": [
										{
											"id": "46346c27-1df0-452c-8331-adf45bc475f1",
											"name": "Relay auto config response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Relay Proxy Demo Config\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fullKey\": \"conse\",\n  \"displayKey\": \"7f30\",\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creator\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "3c5487d2-7809-417e-bbdb-1763db1eb10c",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "9fad21ea-57cf-4ab7-bed5-38a13a64d7c9",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "e0d6679f-0347-4190-9445-24a8922f03f8",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "1b2867ac-e300-407b-afac-cde850a26e73",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "8c6b292e-3a15-493a-b078-5c51cd05bddc",
											"name": "Invalid patch content",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"patch_failed\",\n  \"message\": \"Unprocessable entity. Could not apply patch.\"\n}"
										},
										{
											"id": "6226b289-d9e1-4179-aadb-94749126a230",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"*\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete Relay Proxy config by ID",
									"id": "5588554e-2570-4728-92ad-6a599a8c48ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "incididunt aliquip nulla",
													"description": "(Required) The relay auto config id"
												}
											]
										},
										"description": "Delete a Relay Proxy config."
									},
									"response": [
										{
											"id": "7b434cb6-ce69-47d1-90dc-1d271438c559",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "07250cb7-91f1-4bd1-b387-a966176a2a28",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "525f1d45-83e5-4fc2-a364-947c7f7e3b57",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "200f13b9-acd4-4cf9-b09e-4df11f4f0e55",
											"name": "Status conflict",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "8524b7bb-db88-4fc7-a15c-aaba4940ec6e",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "incididunt aliquip nulla",
															"description": "(Required) The relay auto config id"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Reset Relay Proxy configuration key",
									"id": "678e8f7b-c220-40bb-b039-c75bedf38e8e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id/reset?expiry=74001609",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs",
												":id",
												"reset"
											],
											"query": [
												{
													"key": "expiry",
													"value": "74001609",
													"description": "An expiration time for the old Relay Proxy configuration key, expressed as a Unix epoch time in milliseconds. By default, the Relay Proxy configuration will expire immediately."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "eu laborum nisi",
													"description": "(Required) The Relay Proxy configuration ID"
												}
											]
										},
										"description": "Reset a Relay Proxy configuration's secret key with an optional expiry time for the old key."
									},
									"response": [
										{
											"id": "76112b27-292d-4d83-b4f8-dcc5989e3de2",
											"name": "Relay auto config response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id/reset?expiry=74001609",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "74001609"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "eu laborum nisi",
															"description": "(Required) The Relay Proxy configuration ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Relay Proxy Demo Config\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fullKey\": \"conse\",\n  \"displayKey\": \"7f30\",\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creator\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "caa24511-12a1-47f9-84de-2ebbd729c5e9",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id/reset?expiry=74001609",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "74001609"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "eu laborum nisi",
															"description": "(Required) The Relay Proxy configuration ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "9901fd5a-158c-454f-85b5-ac89662c51d4",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id/reset?expiry=74001609",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "74001609"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "eu laborum nisi",
															"description": "(Required) The Relay Proxy configuration ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "1195cae7-428f-4d68-afb7-2e4173d56d2c",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id/reset?expiry=74001609",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "74001609"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "eu laborum nisi",
															"description": "(Required) The Relay Proxy configuration ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "b2687980-846e-4261-adba-df22d86d67a4",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs/:id/reset?expiry=74001609",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"relay-auto-configs",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "74001609"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "eu laborum nisi",
															"description": "(Required) The Relay Proxy configuration ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "c1956d75-98fa-4d41-82f2-72545f028074"
						},
						{
							"name": "List Relay Proxy configs",
							"id": "d876561d-d956-4bae-a8e0-5aaca8f305a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"relay-auto-configs"
									]
								},
								"description": "Get a list of Relay Proxy configurations in the account."
							},
							"response": [
								{
									"id": "1dd0e61c-e1fb-40a3-acd1-f6615e281420",
									"name": "Relay auto configs collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "eeb219f9-77fa-444c-a92a-723f69067e14",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "7a414495-8897-4a91-9417-7873decebe66",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "6f859063-f99a-4500-a3d3-216619f5059f",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create a new Relay Proxy config",
							"id": "3f6222f6-b4a4-4e94-ac5a-0c6c9fdefb8e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Sample Relay Proxy config for all proj and env\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"relay-auto-configs"
									]
								},
								"description": "Create a Relay Proxy config."
							},
							"response": [
								{
									"id": "1836f529-e23b-4b74-a25c-7389a5f8df5b",
									"name": "Relay auto config response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Sample Relay Proxy config for all proj and env\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Relay Proxy Demo Config\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"fullKey\": \"est incididunt nulla\",\n  \"displayKey\": \"7f30\",\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creator\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "6fe40078-6822-45a1-9a38-b24adbab97c8",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Sample Relay Proxy config for all proj and env\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "c26eadcb-3368-4368-b361-80ebe9b39dfa",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Sample Relay Proxy config for all proj and env\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "8474fa7c-dc7c-4baf-9cb0-601a53d43d44",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Sample Relay Proxy config for all proj and env\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/account/relay-auto-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"account",
												"relay-auto-configs"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "d1173f1e-3ad0-4e13-a7b2-866d3e23e312"
				},
				{
					"name": "approval-requests",
					"item": [
						{
							"name": "List approval requests",
							"id": "8d930edb-1434-4923-92b9-45c626066ac7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/approval-requests?filter=minim incididunt&expand=aute sed cillum incididunt&limit=69978724&offset=59072961",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"approval-requests"
									],
									"query": [
										{
											"key": "filter",
											"value": "minim incididunt",
											"description": "A comma-separated list of filters. Each filter is of the form `field operator value`. Supported fields are explained above."
										},
										{
											"key": "expand",
											"value": "aute sed cillum incididunt",
											"description": "A comma-separated list of fields to expand in the response. Supported fields are explained above."
										},
										{
											"key": "limit",
											"value": "69978724",
											"description": "The number of approvals to return. Defaults to -1, which returns all approvals."
										},
										{
											"key": "offset",
											"value": "59072961",
											"description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
										}
									]
								},
								"description": "Get all approval requests.\n\n### Filtering approvals\n\nLaunchDarkly supports the `filter` query param for filtering, with the following fields:\n\n- `notifyMemberIds` filters for only approvals that are assigned to a member in the specified list. For example: `filter=notifyMemberIds anyOf [\"memberId1\", \"memberId2\"]`.\n- `requestorId` filters for only approvals that correspond to the ID of the member who requested the approval. For example: `filter=requestorId equals 457034721476302714390214`.\n- `projectKey` filters for only approvals that correspond to the specified project key. For example: `filter=projectKey equals my-project`.\n- `reviewStatus` filters for only approvals which correspond to the review status in the specified list. The possible values are `approved`, `declined`, and `pending`. For example: `filter=reviewStatus anyOf [\"pending\", \"approved\"]`.\n- `status` filters for only approvals which correspond to the status in the specified list. The possible values are `pending`, `scheduled`, `failed`, and `completed`. For example: `filter=status anyOf [\"pending\", \"scheduled\"]`.\n\nYou can also apply multiple filters at once. For example, setting `filter=projectKey equals my-project, reviewStatus anyOf [\"pending\",\"approved\"]` matches approval requests which correspond to the `my-project` project key, and a review status of either `pending` or `approved`.\n\n### Expanding approval response\n\nLaunchDarkly supports the `expand` query param to include additional fields in the response, with the following fields:\n\n- `flag` includes the flag the approval request belongs to\n- `project` includes the project the approval request belongs to\n- `environment` includes the environment the approval request belongs to\n\nFor example, `expand=project,flag` includes the `project` and `flag` fields in the response.\n"
							},
							"response": [
								{
									"id": "e90c20c6-5d96-494b-a1bf-9420e9117cc5",
									"name": "Approval request collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests?filter=minim incididunt&expand=aute sed cillum incididunt&limit=69978724&offset=59072961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests"
											],
											"query": [
												{
													"key": "filter",
													"value": "minim incididunt"
												},
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												},
												{
													"key": "limit",
													"value": "69978724"
												},
												{
													"key": "offset",
													"value": "59072961"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalCount\": 1,\n  \"_links\": {\n    \"dolor_8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolore_a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fugiat_b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ut_8_9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "a73b4694-a6e3-426c-9dfb-4dc64107b3e7",
									"name": "Unsupported filter field. Filter field must be one of: requestorId, projectKey, notifyMemberIds, reviewStatus, or status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests?filter=minim incididunt&expand=aute sed cillum incididunt&limit=69978724&offset=59072961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests"
											],
											"query": [
												{
													"key": "filter",
													"value": "minim incididunt"
												},
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												},
												{
													"key": "limit",
													"value": "69978724"
												},
												{
													"key": "offset",
													"value": "59072961"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "dede7b7c-8fd7-447d-aeb1-abf1874af37c",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests?filter=minim incididunt&expand=aute sed cillum incididunt&limit=69978724&offset=59072961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests"
											],
											"query": [
												{
													"key": "filter",
													"value": "minim incididunt"
												},
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												},
												{
													"key": "limit",
													"value": "69978724"
												},
												{
													"key": "offset",
													"value": "59072961"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "373741f4-f122-4478-9f2d-ba9f5c8e5385",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests?filter=minim incididunt&expand=aute sed cillum incididunt&limit=69978724&offset=59072961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests"
											],
											"query": [
												{
													"key": "filter",
													"value": "minim incididunt"
												},
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												},
												{
													"key": "limit",
													"value": "69978724"
												},
												{
													"key": "offset",
													"value": "59072961"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "16726e83-2c16-49cf-886e-c1b80dc1df49",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests?filter=minim incididunt&expand=aute sed cillum incididunt&limit=69978724&offset=59072961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests"
											],
											"query": [
												{
													"key": "filter",
													"value": "minim incididunt"
												},
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												},
												{
													"key": "limit",
													"value": "69978724"
												},
												{
													"key": "offset",
													"value": "59072961"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Get approval request",
							"id": "55ce6f49-bb41-4df8-8829-7a5d7406da39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"approval-requests",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "aute sed cillum incididunt",
											"description": "A comma-separated list of fields to expand in the response. Supported fields are explained above."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "ut si",
											"description": "(Required) The approval request ID"
										}
									]
								},
								"description": "Get an approval request by approval request ID.\n\n### Expanding approval response\n\nLaunchDarkly supports the `expand` query param to include additional fields in the response, with the following fields:\n\n- `flag` includes the flag the approval request belongs to\n- `project` includes the project the approval request belongs to\n- `environment` includes the environment the approval request belongs to\n\nFor example, `expand=project,flag` includes the `project` and `flag` fields in the response.\n"
							},
							"response": [
								{
									"id": "06ef8094-c29b-476d-8682-9ffd2b7e5c0a",
									"name": "Approval request response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "ut si",
													"description": "(Required) The approval request ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serviceKind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reviewStatus\": \"pending\",\n  \"allReviews\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"status\": \"pending\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"non_f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"consequat8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requestorId\": \"12ab3c45de678910abc12345\",\n  \"description\": \"example: request approval from someone\",\n  \"appliedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"appliedByMemberId\": \"1234a56b7c89d012345e678f\",\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"12ab3c45de678910abc12345\",\n  \"integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customWorkflowMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"resourceId\": \"amet deserunt culpa nostrud anim\",\n  \"approvalSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"project\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"environment\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flag\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "2dbcf507-efcd-4f64-aaa7-f50215715e7c",
									"name": "Invalid Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "ut si",
													"description": "(Required) The approval request ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "9c3b9722-620c-44d1-be84-31ce81562d2f",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "ut si",
													"description": "(Required) The approval request ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "b989cfc8-ba27-43fc-8ac0-88718746c901",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "ut si",
													"description": "(Required) The approval request ID"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "e0f77297-b368-4dbb-8f90-8937a2190376",
									"name": "Unable to find approval request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "ut si",
													"description": "(Required) The approval request ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "5c7b99da-6212-4754-bd3a-c19815e31e36",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/approval-requests/:id?expand=aute sed cillum incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"approval-requests",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "aute sed cillum incididunt"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "ut si",
													"description": "(Required) The approval request ID"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "32a9ac52-bfdc-4d5b-acd7-eaa98ced4df9"
				},
				{
					"name": "auditlog",
					"item": [
						{
							"name": "List audit log entries",
							"id": "9fb920bc-ffa3-45a8-8d0b-9746b407663c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/auditlog?before=-32221958&after=60370911&q=amet labore fugiat ex&limit=8091&spec=irure exercitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"auditlog"
									],
									"query": [
										{
											"key": "before",
											"value": "-32221958",
											"description": "A timestamp filter, expressed as a Unix epoch time in milliseconds.  All entries this returns occurred before the timestamp."
										},
										{
											"key": "after",
											"value": "60370911",
											"description": "A timestamp filter, expressed as a Unix epoch time in milliseconds. All entries this returns occurred after the timestamp."
										},
										{
											"key": "q",
											"value": "amet labore fugiat ex",
											"description": "Text to search for. You can search for the full or partial name of the resource, or full or partial email address of the member who made a change."
										},
										{
											"key": "limit",
											"value": "8091",
											"description": "A limit on the number of audit log entries that return. Set between 1 and 20. The default is 10."
										},
										{
											"key": "spec",
											"value": "irure exercitation",
											"description": "A resource specifier that lets you filter audit log listings by resource"
										}
									]
								},
								"description": "Get a list of all audit log entries. The query parameters let you restrict the results that return by date ranges, resource specifiers, or a full-text search query.\n\nLaunchDarkly uses a resource specifier syntax to name resources or collections of resources. To learn more, read [Understanding the resource specifier syntax](https://docs.launchdarkly.com/home/members/role-resources#understanding-the-resource-specifier-syntax).\n"
							},
							"response": [
								{
									"id": "f0904fa0-7660-4f2a-a703-818337f5d011",
									"name": "Audit log entries response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog?before=-32221958&after=60370911&q=amet labore fugiat ex&limit=8091&spec=irure exercitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog"
											],
											"query": [
												{
													"key": "before",
													"value": "-32221958"
												},
												{
													"key": "after",
													"value": "60370911"
												},
												{
													"key": "q",
													"value": "amet labore fugiat ex"
												},
												{
													"key": "limit",
													"value": "8091"
												},
												{
													"key": "spec",
													"value": "irure exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"ullamco_1d0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"adipisicing_d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate7b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolor_72_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "2d207d2a-5d1c-4d94-bab1-ac2cf9d7a13c",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog?before=-32221958&after=60370911&q=amet labore fugiat ex&limit=8091&spec=irure exercitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog"
											],
											"query": [
												{
													"key": "before",
													"value": "-32221958"
												},
												{
													"key": "after",
													"value": "60370911"
												},
												{
													"key": "q",
													"value": "amet labore fugiat ex"
												},
												{
													"key": "limit",
													"value": "8091"
												},
												{
													"key": "spec",
													"value": "irure exercitation"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "1168152f-e5dc-4d0d-b67e-3af1f0de57c1",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog?before=-32221958&after=60370911&q=amet labore fugiat ex&limit=8091&spec=irure exercitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog"
											],
											"query": [
												{
													"key": "before",
													"value": "-32221958"
												},
												{
													"key": "after",
													"value": "60370911"
												},
												{
													"key": "q",
													"value": "amet labore fugiat ex"
												},
												{
													"key": "limit",
													"value": "8091"
												},
												{
													"key": "spec",
													"value": "irure exercitation"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "2f61dc5a-b094-4126-af53-8f7767f57868",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog?before=-32221958&after=60370911&q=amet labore fugiat ex&limit=8091&spec=irure exercitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog"
											],
											"query": [
												{
													"key": "before",
													"value": "-32221958"
												},
												{
													"key": "after",
													"value": "60370911"
												},
												{
													"key": "q",
													"value": "amet labore fugiat ex"
												},
												{
													"key": "limit",
													"value": "8091"
												},
												{
													"key": "spec",
													"value": "irure exercitation"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "fb54fc15-3dd2-4d44-abc2-9b7b26a70206",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog?before=-32221958&after=60370911&q=amet labore fugiat ex&limit=8091&spec=irure exercitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog"
											],
											"query": [
												{
													"key": "before",
													"value": "-32221958"
												},
												{
													"key": "after",
													"value": "60370911"
												},
												{
													"key": "q",
													"value": "amet labore fugiat ex"
												},
												{
													"key": "limit",
													"value": "8091"
												},
												{
													"key": "spec",
													"value": "irure exercitation"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Get audit log entry",
							"id": "0bc77991-aacb-4162-a034-cfc451ddbf02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/auditlog/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"auditlog",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "dolor",
											"description": "(Required) The ID of the audit log entry"
										}
									]
								},
								"description": "Fetch a detailed audit log entry representation. The detailed representation includes several fields that are not present in the summary representation, including:\n\n- `delta`: the JSON patch body that was used in the request to update the entity\n- `previousVersion`: a JSON representation of the previous version of the entity\n- `currentVersion`: a JSON representation of the current version of the entity\n"
							},
							"response": [
								{
									"id": "eab425d1-5f3c-4289-ac34-e8a2fd5d2493",
									"name": "Audit log entry response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dolor",
													"description": "(Required) The ID of the audit log entry"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"dolore_66c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"aliquip_b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"_accountId\": \"1234a56b7c89d012345e678f\",\n  \"date\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"accesses\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"kind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Example feature flag\",\n  \"description\": \"Example, turning on the flag for testing\",\n  \"shortDescription\": \"Example, turning on the flag\",\n  \"comment\": \"This is an automated test\",\n  \"subject\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"token\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"app\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"titleVerb\": \"turned on the flag\",\n  \"title\": \"dolor Lorem esse\",\n  \"target\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"parent\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"delta\": {},\n  \"triggerBody\": {},\n  \"merge\": {},\n  \"previousVersion\": {},\n  \"currentVersion\": {},\n  \"subentries\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "42c5de54-8b0c-4e3e-a31a-360c3f26ba12",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dolor",
													"description": "(Required) The ID of the audit log entry"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "e7e62298-d3a4-4438-83bd-c5e107d58769",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dolor",
													"description": "(Required) The ID of the audit log entry"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "5cd0d770-e867-4f5d-87b2-9a5180cd961a",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dolor",
													"description": "(Required) The ID of the audit log entry"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "790e6e6a-803b-454e-b9fe-f0962bcfda2d",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/auditlog/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"auditlog",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dolor",
													"description": "(Required) The ID of the audit log entry"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "6444a6b4-e1d8-4e79-9fa7-8ef69fa69fc5"
				},
				{
					"name": "code-refs",
					"item": [
						{
							"name": "repositories",
							"item": [
								{
									"name": "{repo}",
									"item": [
										{
											"name": "branches",
											"item": [
												{
													"name": "{branch}",
													"item": [
														{
															"name": "Get branch",
															"id": "065e7204-f03e-4926-8810-466fa3270e55",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches",
																		":branch"
																	],
																	"query": [
																		{
																			"key": "projKey",
																			"value": "ad mollit laboris est magna",
																			"description": "Filter results to a specific project"
																		},
																		{
																			"key": "flagKey",
																			"value": "mollit non occaecat",
																			"description": "Filter results to a specific flag key"
																		}
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		},
																		{
																			"key": "branch",
																			"value": "est quis sunt et",
																			"description": "(Required) The url-encoded branch name"
																		}
																	]
																},
																"description": "Get a specific branch in a repository."
															},
															"response": [
																{
																	"id": "e8f00f5f-e878-4821-ad50-cadfd189472b",
																	"name": "Branch response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "projKey",
																					"value": "ad mollit laboris est magna"
																				},
																				{
																					"key": "flagKey",
																					"value": "mollit non occaecat"
																				}
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "est quis sunt et",
																					"description": "(Required) The url-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"fugiatbd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"laborisca\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"proidentf1f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																},
																{
																	"id": "7eee316d-0e5c-46e0-ae6d-7d497c4e4fff",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "projKey",
																					"value": "ad mollit laboris est magna"
																				},
																				{
																					"key": "flagKey",
																					"value": "mollit non occaecat"
																				}
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "est quis sunt et",
																					"description": "(Required) The url-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "4b34be4d-c895-4632-aa8e-008812161a45",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "projKey",
																					"value": "ad mollit laboris est magna"
																				},
																				{
																					"key": "flagKey",
																					"value": "mollit non occaecat"
																				}
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "est quis sunt et",
																					"description": "(Required) The url-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "2c5d3806-24d1-4d66-a6f2-424bd0edb577",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "projKey",
																					"value": "ad mollit laboris est magna"
																				},
																				{
																					"key": "flagKey",
																					"value": "mollit non occaecat"
																				}
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "est quis sunt et",
																					"description": "(Required) The url-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "71f5ce8d-4748-44c2-8a02-e822d784d12c",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "projKey",
																					"value": "ad mollit laboris est magna"
																				},
																				{
																					"key": "flagKey",
																					"value": "mollit non occaecat"
																				}
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "est quis sunt et",
																					"description": "(Required) The url-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "59ed4044-a23c-4730-9d0e-cd51d39eb7a7",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch?projKey=ad mollit laboris est magna&flagKey=mollit non occaecat",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "projKey",
																					"value": "ad mollit laboris est magna"
																				},
																				{
																					"key": "flagKey",
																					"value": "mollit non occaecat"
																				}
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "est quis sunt et",
																					"description": "(Required) The url-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Upsert branch",
															"id": "72f4c5a1-4bb8-446d-a01b-16c75a58e0fd",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches",
																		":branch"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		},
																		{
																			"key": "branch",
																			"value": "sed",
																			"description": "(Required) The URL-encoded branch name"
																		}
																	]
																},
																"description": "Create a new branch if it doesn't exist, or update the branch if it already exists."
															},
															"response": [
																{
																	"id": "12a307d1-9a4e-45b7-a882-2cb627d35761",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "71d71e09-69da-4a4d-9fa9-a6338bafe078",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "e31b7871-709b-4029-8318-14e5b8f04131",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "66dcf54d-7c23-443f-a799-f5e4c926cf66",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "00908520-b98f-4db1-b396-a78e5dd10478",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "427c0b3c-0abe-4bc8-89cc-b68951856f59",
																	"name": "Status conflict",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
																},
																{
																	"id": "94b0604c-0620-4604-aa90-0ae9db6de031",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"main\",\n  \"head\": \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\",\n  \"syncTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"updateSequenceId\": 25,\n  \"references\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"commitTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Create extinction",
															"id": "8651cf69-ac86-4242-a74a-37abe44e677a",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches",
																		":branch",
																		"extinction-events"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		},
																		{
																			"key": "branch",
																			"value": "sed",
																			"description": "(Required) The URL-encoded branch name"
																		}
																	]
																},
																"description": "Create a new extinction."
															},
															"response": [
																{
																	"id": "846f042c-c8f0-4078-bc10-386f0c381c92",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch",
																				"extinction-events"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "3fe7196f-116d-44bb-9a00-893a5bb0a71f",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch",
																				"extinction-events"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "a39ce157-8376-49a7-994d-e75aaebe881b",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch",
																				"extinction-events"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "c3b76392-8b0e-4f5f-9a34-f5ec43b1e91b",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch",
																				"extinction-events"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "eab2a0f1-9cf5-4e93-8739-8b1b238bfcee",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch",
																				"extinction-events"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "e97d3d2a-644f-4fb1-9839-34149d58d264",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches/:branch/extinction-events",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"code-refs",
																				"repositories",
																				":repo",
																				"branches",
																				":branch",
																				"extinction-events"
																			],
																			"variable": [
																				{
																					"key": "repo",
																					"value": "commodo",
																					"description": "(Required) The repository name"
																				},
																				{
																					"key": "branch",
																					"value": "sed",
																					"description": "(Required) The URL-encoded branch name"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "e0b29af0-24b2-4041-a9ea-eb17d2ef5d8e"
												},
												{
													"name": "List branches",
													"id": "ed79a210-06c5-4e5a-8fd7-9e97347333b1",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branches"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														},
														"description": "Get a list of branches."
													},
													"response": [
														{
															"id": "8f45e144-561c-4482-bba7-1fd1cdf20848",
															"name": "Branch collection response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"elitf\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
														},
														{
															"id": "4f986706-f6b1-49ed-8da0-b798e2404e6f",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "ba23d225-6dce-4194-ac47-10cefaf63969",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "3b528457-649a-414c-8c10-22c29c15ddb5",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "48966024-1c5b-408f-b09d-357bc12e7b7d",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "ff592e0e-8abb-4227-81cd-de1b56c0dda8",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branches",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"code-refs",
																		"repositories",
																		":repo",
																		"branches"
																	],
																	"variable": [
																		{
																			"key": "repo",
																			"value": "commodo",
																			"description": "(Required) The repository name"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "af49779e-2f9b-449b-8a40-689c40b0237e"
										},
										{
											"name": "Get repository",
											"id": "71d9be89-950a-48d2-9bca-4686b2ddd8f4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories",
														":repo"
													],
													"variable": [
														{
															"key": "repo",
															"value": "commodo",
															"description": "(Required) The repository name"
														}
													]
												},
												"description": "Get a single repository by name."
											},
											"response": [
												{
													"id": "49fe2e55-4dcd-470e-80db-0f6656fbd402",
													"name": "Repository response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\",\n  \"enabled\": true,\n  \"version\": 3,\n  \"_links\": {\n    \"cupidatat33d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco59\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"branches\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "a3a2a0ae-eb35-49a7-b32b-c087f933b652",
													"name": "Invalid request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "0340b248-c28e-4fd0-a07e-19ec8ab969c9",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "e5bb1d4a-7a37-48b1-8a98-54a1a56cd27f",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "c5bb525e-c352-4c73-87c4-db25283fd15a",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "ae37aea5-8fe0-418c-a08b-db1c960bdbdf",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update repository",
											"id": "63705f02-30b6-439b-880f-ae2a63ab4410",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories",
														":repo"
													],
													"variable": [
														{
															"key": "repo",
															"value": "commodo",
															"description": "(Required) The repository name"
														}
													]
												},
												"description": "Update a repository's settings. The request must be a valid JSON Patch document describing the changes to be made to the repository."
											},
											"response": [
												{
													"id": "da142fee-65f7-48e6-aeda-03bf481d955e",
													"name": "Repository response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\",\n  \"enabled\": true,\n  \"version\": 3,\n  \"_links\": {\n    \"cupidatat33d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco59\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"branches\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "ef9ee15e-bdc9-4789-aaf6-fd34a24ceab7",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "283100ef-07c8-4749-81c8-5bbfbe7e4bec",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "0a56ba16-a985-4eef-827d-8457d6daf755",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "0f4e8486-496b-4355-913d-287ec759c6be",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "f8612620-47ef-4a1e-9a82-172110c18a92",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/defaultBranch\",\n    \"value\": \"main\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Delete repository",
											"id": "72ff2145-f9cc-499a-9961-6907c87246e1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories",
														":repo"
													],
													"variable": [
														{
															"key": "repo",
															"value": "commodo",
															"description": "(Required) The repository name"
														}
													]
												},
												"description": "Delete a repository with the specified name."
											},
											"response": [
												{
													"id": "61c3a8be-91d7-425f-a1a5-939189e5116e",
													"name": "Action succeeded",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "9d6b42f1-4054-4f92-8735-cc8099febe4c",
													"name": "Invalid request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "f22419a9-e1ee-4552-abbd-6efaa93ceaa5",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "16d75b0a-9e4b-45fc-aa58-b8e1227dcd25",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "b70b680f-d081-4e3b-9de7-c48188a89c5c",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "9e82823b-b41d-4f5a-a151-62002fd04fda",
													"name": "Rate limited",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "commodo",
																	"description": "(Required) The repository name"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Delete branches",
											"id": "c2378493-6dd4-47b1-8fde-dea9d1c32e85",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories",
														":repo",
														"branch-delete-tasks"
													],
													"variable": [
														{
															"key": "repo",
															"value": "pariatur consequat in cupidatat",
															"description": "(Required) The repository name to delete branches for."
														}
													]
												},
												"description": "Asynchronously delete a number of branches."
											},
											"response": [
												{
													"id": "aa533a58-d216-4660-bdab-98b2ccb6a56d",
													"name": "Action succeeded",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branch-delete-tasks"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "pariatur consequat in cupidatat",
																	"description": "(Required) The repository name to delete branches for."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "ac3ddfd9-1d67-4cfd-af25-574c4d8f6b38",
													"name": "Invalid request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branch-delete-tasks"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "pariatur consequat in cupidatat",
																	"description": "(Required) The repository name to delete branches for."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "329ecd16-4f8e-43bd-968b-d118e3d081e3",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branch-delete-tasks"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "pariatur consequat in cupidatat",
																	"description": "(Required) The repository name to delete branches for."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "f598224c-3041-4f9a-a7fe-049459cc48b7",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branch-delete-tasks"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "pariatur consequat in cupidatat",
																	"description": "(Required) The repository name to delete branches for."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "53415dca-ba84-4001-b4e0-d654ca7a76c5",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branch-delete-tasks"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "pariatur consequat in cupidatat",
																	"description": "(Required) The repository name to delete branches for."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "414b1ca2-42ff-412b-8740-66c6c5808c36",
													"name": "Rate limited",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  \"branch-to-be-deleted\",\n  \"another-branch-to-be-deleted\"\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/code-refs/repositories/:repo/branch-delete-tasks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"code-refs",
																"repositories",
																":repo",
																"branch-delete-tasks"
															],
															"variable": [
																{
																	"key": "repo",
																	"value": "pariatur consequat in cupidatat",
																	"description": "(Required) The repository name to delete branches for."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "d7dca385-dd8e-4b79-844b-0b78e968dbc4"
								},
								{
									"name": "List repositories",
									"id": "2fb8b0d2-31fe-41fc-a5cf-791e7fb4056e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/repositories?withBranches=quis&withReferencesForDefaultBranch=deserunt adipisicing occaecat reprehenderit enim&projKey=dolore veniam sed laboris&flagKey=deserunt adipisicing occaecat reprehenderit enim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"repositories"
											],
											"query": [
												{
													"key": "withBranches",
													"value": "quis",
													"description": "If set to any value, the endpoint returns repositories with associated branch data"
												},
												{
													"key": "withReferencesForDefaultBranch",
													"value": "deserunt adipisicing occaecat reprehenderit enim",
													"description": "If set to any value, the endpoint returns repositories with associated branch data, as well as code references for the default git branch"
												},
												{
													"key": "projKey",
													"value": "dolore veniam sed laboris",
													"description": "A LaunchDarkly project key. If provided, this filters code reference results to the specified project."
												},
												{
													"key": "flagKey",
													"value": "deserunt adipisicing occaecat reprehenderit enim",
													"description": "If set to any value, the endpoint returns repositories with associated branch data, as well as code references for the default git branch"
												}
											]
										},
										"description": "Get a list of connected repositories. Optionally, you can include branch metadata with the `withBranches` query parameter. Embed references for the default branch with `ReferencesForDefaultBranch`. You can also filter the list of code references by project key and flag key."
									},
									"response": [
										{
											"id": "362719f4-675d-4e70-ad09-08f7ca103314",
											"name": "Repository collection response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories?withBranches=quis&withReferencesForDefaultBranch=deserunt adipisicing occaecat reprehenderit enim&projKey=dolore veniam sed laboris&flagKey=deserunt adipisicing occaecat reprehenderit enim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													],
													"query": [
														{
															"key": "withBranches",
															"value": "quis"
														},
														{
															"key": "withReferencesForDefaultBranch",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														},
														{
															"key": "projKey",
															"value": "dolore veniam sed laboris"
														},
														{
															"key": "flagKey",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"magna8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "384b92b7-6980-40ea-b5d7-5a39aa71051a",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories?withBranches=quis&withReferencesForDefaultBranch=deserunt adipisicing occaecat reprehenderit enim&projKey=dolore veniam sed laboris&flagKey=deserunt adipisicing occaecat reprehenderit enim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													],
													"query": [
														{
															"key": "withBranches",
															"value": "quis"
														},
														{
															"key": "withReferencesForDefaultBranch",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														},
														{
															"key": "projKey",
															"value": "dolore veniam sed laboris"
														},
														{
															"key": "flagKey",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "a30f9a62-791b-4ccd-8495-35b5b80fa4c6",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories?withBranches=quis&withReferencesForDefaultBranch=deserunt adipisicing occaecat reprehenderit enim&projKey=dolore veniam sed laboris&flagKey=deserunt adipisicing occaecat reprehenderit enim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													],
													"query": [
														{
															"key": "withBranches",
															"value": "quis"
														},
														{
															"key": "withReferencesForDefaultBranch",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														},
														{
															"key": "projKey",
															"value": "dolore veniam sed laboris"
														},
														{
															"key": "flagKey",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "3f6202a3-7384-4b05-a62b-381ad1fba447",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories?withBranches=quis&withReferencesForDefaultBranch=deserunt adipisicing occaecat reprehenderit enim&projKey=dolore veniam sed laboris&flagKey=deserunt adipisicing occaecat reprehenderit enim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													],
													"query": [
														{
															"key": "withBranches",
															"value": "quis"
														},
														{
															"key": "withReferencesForDefaultBranch",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														},
														{
															"key": "projKey",
															"value": "dolore veniam sed laboris"
														},
														{
															"key": "flagKey",
															"value": "deserunt adipisicing occaecat reprehenderit enim"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Create repository",
									"id": "f7eefa27-5285-429c-8ec5-d7568080e143",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"repositories"
											]
										},
										"description": "Create a repository with the specified name."
									},
									"response": [
										{
											"id": "b207ccce-a2f1-4bb1-b27a-1efcfb221f8f",
											"name": "Repository response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\",\n  \"enabled\": true,\n  \"version\": 3,\n  \"_links\": {\n    \"ut_53a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magna7_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fugiat25\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"branches\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "8f85d3bf-89ed-449d-bd14-fefc02b5c7fe",
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "50ff8f71-8e19-4873-84e5-1d58e3e03709",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "b2dedc19-1fa5-4884-add6-197fcbd6bb80",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "be63cd51-04d3-4e53-be54-c67e80ab92df",
											"name": "Status conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "e0e30b3f-8b92-460f-99e1-9364a0a6f4e6",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"LaunchDarkly-Docs\",\n  \"sourceLink\": \"https://github.com/launchdarkly/LaunchDarkly-Docs\",\n  \"commitUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/commit/${sha}\",\n  \"hunkUrlTemplate\": \"https://github.com/launchdarkly/LaunchDarkly-Docs/blob/${sha}/${filePath}#L${lineNumber}\",\n  \"type\": \"github\",\n  \"defaultBranch\": \"main\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/repositories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"repositories"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "5fc6d5fd-9c4e-4525-911a-9e38b395e1c5"
						},
						{
							"name": "statistics",
							"item": [
								{
									"name": "Get links to code reference repositories for each project",
									"id": "97df5031-4f55-4c33-a70b-8b57d392e9f2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/statistics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"statistics"
											]
										},
										"description": "Get links for all projects that have code references."
									},
									"response": [
										{
											"id": "cca2de25-73a5-431e-b9b9-4e843debee44",
											"name": "Statistic root response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"projects\": [\n    {\n      \"href\": \"/api/v2/code-refs/statistics/example-project-with-code-refs\",\n      \"type\": \"application/json\"\n    }\n  ],\n  \"self\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "17148559-11a6-4621-a845-47eebf7081bb",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "71b4b64b-ba4a-4428-9903-b0f7d8aa0700",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "131c25a8-eb5a-4ec5-977b-9f1c8e3cde22",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "9509bde5-a5ba-4dbe-a7c9-e86895be88c2",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get code references statistics for flags",
									"id": "16046a23-5f90-4af0-a2eb-374165ff333e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/statistics/:projectKey?flagKey=mollit non occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"statistics",
												":projectKey"
											],
											"query": [
												{
													"key": "flagKey",
													"value": "mollit non occaecat",
													"description": "Filter results to a specific flag key"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										},
										"description": "Get statistics about all the code references across repositories for all flags in your project that have code references in the default branch, for example, `main`. Optionally, you can include the `flagKey` query parameter to limit your request to statistics about code references for a single flag. This endpoint returns the number of references to your flag keys in your repositories, as well as a link to each repository."
									},
									"response": [
										{
											"id": "aab0a330-8b30-45a5-95af-fe25d56cd916",
											"name": "Statistic collection response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics/:projectKey?flagKey=mollit non occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics",
														":projectKey"
													],
													"query": [
														{
															"key": "flagKey",
															"value": "mollit non occaecat"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"flags\": {\n    \"proident283\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"adipisicing_c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_links\": {\n    \"sed_8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"culpa_6c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"id": "6023f97e-54ea-4066-9e15-eef3920eb5e2",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics/:projectKey?flagKey=mollit non occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics",
														":projectKey"
													],
													"query": [
														{
															"key": "flagKey",
															"value": "mollit non occaecat"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "aee2da19-e85c-4ec2-8464-6ee0f4a371b7",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics/:projectKey?flagKey=mollit non occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics",
														":projectKey"
													],
													"query": [
														{
															"key": "flagKey",
															"value": "mollit non occaecat"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "430fcbf6-3d59-4467-a881-d9a11417e7c4",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics/:projectKey?flagKey=mollit non occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics",
														":projectKey"
													],
													"query": [
														{
															"key": "flagKey",
															"value": "mollit non occaecat"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "373a21be-e800-4bc4-85ef-71ef2b5958bc",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/code-refs/statistics/:projectKey?flagKey=mollit non occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"code-refs",
														"statistics",
														":projectKey"
													],
													"query": [
														{
															"key": "flagKey",
															"value": "mollit non occaecat"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "88ad86c9-6d4f-4944-b652-92f57f9a3918"
						},
						{
							"name": "List extinctions",
							"id": "371bb14d-48a1-40f1-aae6-0094b68ed1c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/code-refs/extinctions?repoName=occaecat eiusmod et in&branchName=Excepteur laboris Lorem&projKey=ad mollit laboris est magna&flagKey=mollit non occaecat&from=91464195&to=66120164",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"code-refs",
										"extinctions"
									],
									"query": [
										{
											"key": "repoName",
											"value": "occaecat eiusmod et in",
											"description": "Filter results to a specific repository"
										},
										{
											"key": "branchName",
											"value": "Excepteur laboris Lorem",
											"description": "Filter results to a specific branch. By default, only the default branch will be queried for extinctions."
										},
										{
											"key": "projKey",
											"value": "ad mollit laboris est magna",
											"description": "Filter results to a specific project"
										},
										{
											"key": "flagKey",
											"value": "mollit non occaecat",
											"description": "Filter results to a specific flag key"
										},
										{
											"key": "from",
											"value": "91464195",
											"description": "Filter results to a specific timeframe based on commit time, expressed as a Unix epoch time in milliseconds. Must be used with `to`."
										},
										{
											"key": "to",
											"value": "66120164",
											"description": "Filter results to a specific timeframe based on commit time, expressed as a Unix epoch time in milliseconds. Must be used with `from`."
										}
									]
								},
								"description": "Get a list of all extinctions. LaunchDarkly creates an extinction event after you remove all code references to a flag. To learn more, read [Understanding extinction events](https://docs.launchdarkly.com/home/code/code-references#understanding-extinction-events)."
							},
							"response": [
								{
									"id": "99a47185-7942-4eba-9677-82a13846664a",
									"name": "Extinction collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/extinctions?repoName=occaecat eiusmod et in&branchName=Excepteur laboris Lorem&projKey=ad mollit laboris est magna&flagKey=mollit non occaecat&from=91464195&to=66120164",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"extinctions"
											],
											"query": [
												{
													"key": "repoName",
													"value": "occaecat eiusmod et in"
												},
												{
													"key": "branchName",
													"value": "Excepteur laboris Lorem"
												},
												{
													"key": "projKey",
													"value": "ad mollit laboris est magna"
												},
												{
													"key": "flagKey",
													"value": "mollit non occaecat"
												},
												{
													"key": "from",
													"value": "91464195"
												},
												{
													"key": "to",
													"value": "66120164"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"minim_dd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sed_528\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"items\": {\n    \"tempor199\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "6bf4c06f-a906-4bf9-9520-c2691455c629",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/extinctions?repoName=occaecat eiusmod et in&branchName=Excepteur laboris Lorem&projKey=ad mollit laboris est magna&flagKey=mollit non occaecat&from=91464195&to=66120164",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"extinctions"
											],
											"query": [
												{
													"key": "repoName",
													"value": "occaecat eiusmod et in"
												},
												{
													"key": "branchName",
													"value": "Excepteur laboris Lorem"
												},
												{
													"key": "projKey",
													"value": "ad mollit laboris est magna"
												},
												{
													"key": "flagKey",
													"value": "mollit non occaecat"
												},
												{
													"key": "from",
													"value": "91464195"
												},
												{
													"key": "to",
													"value": "66120164"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "48405e49-3229-4fb2-b2f8-b298e21f41ec",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/extinctions?repoName=occaecat eiusmod et in&branchName=Excepteur laboris Lorem&projKey=ad mollit laboris est magna&flagKey=mollit non occaecat&from=91464195&to=66120164",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"extinctions"
											],
											"query": [
												{
													"key": "repoName",
													"value": "occaecat eiusmod et in"
												},
												{
													"key": "branchName",
													"value": "Excepteur laboris Lorem"
												},
												{
													"key": "projKey",
													"value": "ad mollit laboris est magna"
												},
												{
													"key": "flagKey",
													"value": "mollit non occaecat"
												},
												{
													"key": "from",
													"value": "91464195"
												},
												{
													"key": "to",
													"value": "66120164"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "0470221e-d454-403e-a8c6-9b6f8138b4dd",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/code-refs/extinctions?repoName=occaecat eiusmod et in&branchName=Excepteur laboris Lorem&projKey=ad mollit laboris est magna&flagKey=mollit non occaecat&from=91464195&to=66120164",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"code-refs",
												"extinctions"
											],
											"query": [
												{
													"key": "repoName",
													"value": "occaecat eiusmod et in"
												},
												{
													"key": "branchName",
													"value": "Excepteur laboris Lorem"
												},
												{
													"key": "projKey",
													"value": "ad mollit laboris est magna"
												},
												{
													"key": "flagKey",
													"value": "mollit non occaecat"
												},
												{
													"key": "from",
													"value": "91464195"
												},
												{
													"key": "to",
													"value": "66120164"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "2b0570b5-ae1e-4135-a636-2c6aaa10a101"
				},
				{
					"name": "destinations",
					"item": [
						{
							"name": "{projectKey}/{environmentKey}",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get destination",
											"id": "d046adcb-9dca-444a-9f36-989d3e5228a7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "id",
															"value": "incididunt dolore",
															"description": "(Required) The Data Export destination ID"
														}
													]
												},
												"description": "Get a single Data Export destination by ID."
											},
											"response": [
												{
													"id": "2d6370c0-c02e-4129-a630-d09ce2657b33",
													"name": "Destination response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_id\": \"610addeadbeefaa86ec9a7d4\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/destinations\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"example-destination\",\n  \"kind\": \"google-pubsub\",\n  \"version\": 1,\n  \"config\": {},\n  \"on\": true,\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "0c530e6f-527a-4fc0-b586-5373f9722fce",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "0373157d-9614-4fac-a49b-28666b2cef20",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "323e0ee6-6ae2-4922-b71e-d291402e1485",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "24b7579f-6652-4455-8e4b-fd9740c324ac",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update Data Export destination",
											"id": "120c26c1-4dc2-4819-941b-213b8e4106a9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "id",
															"value": "incididunt dolore",
															"description": "(Required) The Data Export destination ID"
														}
													]
												},
												"description": "Update a Data Export destination. This requires a JSON Patch representation of the modified destination."
											},
											"response": [
												{
													"id": "8b27452a-e9c5-4c44-85a5-f3c937d72ca1",
													"name": "Destination response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_id\": \"610addeadbeefaa86ec9a7d4\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/destinations\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"example-destination\",\n  \"kind\": \"google-pubsub\",\n  \"version\": 1,\n  \"config\": {},\n  \"on\": true,\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "a1c648c4-ddd4-4652-97aa-de988e2beea0",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "160535f4-6e14-47b3-926d-81bf0576f144",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "69d82b2d-676c-4e24-9e9d-e9627a1977d8",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "9a54d0fa-f8bd-4bc4-beff-7e285c66c729",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "4a61eb0d-98b4-4ea7-b140-e6ab3f507e5f",
													"name": "Status conflict",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "cea891b0-8b79-4347-8149-89f72f58d44e",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/config/topic\",\n    \"value\": \"ld-pubsub-test-192302\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Delete Data Export destination",
											"id": "f6fdf5f5-f3e0-40d0-821f-7a5ad3742c27",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "id",
															"value": "incididunt dolore",
															"description": "(Required) The Data Export destination ID"
														}
													]
												},
												"description": "Delete a Data Export destination by ID."
											},
											"response": [
												{
													"id": "46982fd4-5e9d-4a85-9a3a-a0a0d11fdd87",
													"name": "Destination response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "f6a2f187-d496-4bd1-a95f-76db5b9727e6",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "bd6ef948-9b63-45c8-afc2-a8eae79edd3f",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "9e35b15a-28d7-4751-bb9c-259f037b12e0",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "e8017ab6-0b01-4d89-ad2a-76f5054ddbf4",
													"name": "Rate limited",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"destinations",
																":projectKey",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "incididunt dolore",
																	"description": "(Required) The Data Export destination ID"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "ea3604d4-bd5d-452e-8e0b-3ea1d32a3b34"
								},
								{
									"name": "Create Data Export destination",
									"id": "f9a6f4b1-8129-47f3-8fa4-25c978d5a7c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"destinations",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "\nCreate a new Data Export destination.\n\nIn the `config` request body parameter, the fields required depend on the type of Data Export destination.\n\n<details>\n<summary>Click to expand <code>config</code> parameter details</summary>\n\n#### Azure Event Hubs\n\nTo create a Data Export destination with a `kind` of `azure-event-hubs`, the `config` object requires the following fields:\n\n* `namespace`: The Event Hub Namespace name\n* `name`: The Event Hub name\n* `policyName`: The shared access signature policy name. You can find your policy name in the settings of your Azure Event Hubs Namespace.\n* `policyKey`: The shared access signature key. You can find your policy key in the settings of your Azure Event Hubs Namespace.\n\n#### Google Cloud Pub/Sub\n\nTo create a Data Export destination with a `kind` of `google-pubsub`, the `config` object requires the following fields:\n\n* `project`: The Google PubSub project ID for the project to publish to\n* `topic`: The Google PubSub topic ID for the topic to publish to\n\n#### Amazon Kinesis\n\nTo create a Data Export destination with a `kind` of `kinesis`, the `config` object requires the following fields:\n\n* `region`: The Kinesis stream's AWS region key\n* `roleArn`: The Amazon Resource Name (ARN) of the AWS role that will be writing to Kinesis\n* `streamName`: The name of the Kinesis stream that LaunchDarkly is sending events to. This is not the ARN of the stream.\n\n#### mParticle\n\nTo create a Data Export destination with a `kind` of `mparticle`, the `config` object requires the following fields:\n\n* `apiKey`: The mParticle API key\n* `secret`: The mParticle API secret\n* `userIdentity`: The type of identifier you use to identify your end users in mParticle\n* `anonymousUserIdentity`: The type of identifier you use to identify your anonymous end users in mParticle\n\n#### Segment\n\nTo create a Data Export destination with a `kind` of `segment`, the `config` object requires the following fields:\n\n* `writeKey`: The Segment write key. This is used to authenticate LaunchDarkly's calls to Segment.\n\n</details>\n"
									},
									"response": [
										{
											"id": "b43d0a5d-c104-4054-bbf7-0d2338edb5c1",
											"name": "Destination response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": \"610addeadbeefaa86ec9a7d4\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/destinations\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"example-destination\",\n  \"kind\": \"google-pubsub\",\n  \"version\": 1,\n  \"config\": {},\n  \"on\": true,\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "9c0da9e7-2a80-4758-b354-5ae13449e809",
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "4c9585dc-a5c5-4644-8309-34b31c56ddf4",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "0a5110c7-bf59-46f9-a756-102b25e5770d",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "8efb44e9-4077-44e6-87f8-9358df53a195",
											"name": "Status conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "ea98600a-a578-45e9-bc1a-755d322ebe30",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"project\": \"test-prod\",\n    \"topic\": \"ld-pubsub-test-192301\"\n  },\n  \"kind\": \"google-pubsub\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/destinations/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"destinations",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "924c0a27-6b13-4d16-8414-71a71d848bff"
						},
						{
							"name": "List destinations",
							"id": "ee8921e4-1352-473d-ae9b-b68df23f16db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/destinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"destinations"
									]
								},
								"description": "Get a list of Data Export destinations configured across all projects and environments."
							},
							"response": [
								{
									"id": "b89a6703-6b2e-4d93-bc26-4b1af8728723",
									"name": "Destination collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/destinations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"destinations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/destinations\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "19c2328a-5f47-43b7-ab43-ab9b40a38e60",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/destinations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"destinations"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "2eb81806-475d-4ec3-ae13-7dccf44cba1b",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/destinations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"destinations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "209d23b9-a174-4a05-ab2e-93a4faad9cd6",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/destinations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"destinations"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "ed0ebae9-9b93-4146-b794-eb4e02c4ac9e"
				},
				{
					"name": "flag-links/projects/{projectKey}/flags/{featureFlagKey}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update flag link",
									"id": "e0928bcb-3f24-477e-be3c-652597acd00d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey",
												":id"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												},
												{
													"key": "id",
													"value": "proident ipsum laboris",
													"description": "(Required) The flag link ID"
												}
											]
										},
										"description": "Update a flag link. The request body must be a valid JSON patch document. To learn more, read [Updates](/#section/Overview/Updates)."
									},
									"response": [
										{
											"id": "346045d3-e918-44a1-8df1-16aee26a9b4e",
											"name": "Flag link response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"sed9f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reprehenderit4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"_deepLink\": \"https://example.com/archives/123123123\",\n  \"_timestamp\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_createdAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_key\": \"example-flag-link\",\n  \"_integrationKey\": \"tempor do minim sint fugiat\",\n  \"title\": \"Example link title\",\n  \"description\": \"Example link description\",\n  \"_metadata\": {\n    \"quis9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"enim_e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "b174f4ae-f513-4901-93af-0c1540eaa92c",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "d562637c-0ce7-4aa4-9144-246b99f9d6fb",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "c4e467b8-24f6-4c1d-82b7-39bf858cc23f",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "6f469628-cce8-4782-ad72-dcbfe26fd34a",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "a109b500-197b-4670-9fe5-1732d0b1194c",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "30248a6a-9a3a-4472-ba3c-284651267ac8",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/title\",\n    \"value\": \"Updated flag link title\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "proident ipsum laboris",
															"description": "(Required) The flag link ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete flag link",
									"id": "1c316e56-572a-439c-b805-4fbaca49a1e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey",
												":id"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												},
												{
													"key": "id",
													"value": "ea magna Excepteur velit",
													"description": "(Required) The flag link ID or Key"
												}
											]
										},
										"description": "Delete a flag link by ID or key."
									},
									"response": [
										{
											"id": "cc5b0cf4-2762-4ba7-8263-4beee18b3c69",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "ea magna Excepteur velit",
															"description": "(Required) The flag link ID or Key"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "2b097c0d-9235-44d7-827a-ffcc7a526209",
											"name": "Invalid request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "ea magna Excepteur velit",
															"description": "(Required) The flag link ID or Key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "42b1a98e-5d85-4194-94ad-7cc6d36d2033",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "ea magna Excepteur velit",
															"description": "(Required) The flag link ID or Key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "686e7540-177a-4802-9dfd-36b4e611e536",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "ea magna Excepteur velit",
															"description": "(Required) The flag link ID or Key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "fcd99195-86ef-4e0e-b22f-0a484042f094",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "ea magna Excepteur velit",
															"description": "(Required) The flag link ID or Key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "8aab2d97-7e09-4260-9f85-7e7bc6ce8b25",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flag-links",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														":id"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "id",
															"value": "ea magna Excepteur velit",
															"description": "(Required) The flag link ID or Key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "8402c639-6089-42cf-9d92-aaaf09726df3"
						},
						{
							"name": "List flag links",
							"id": "c1e07c2f-cc11-4fa1-9c89-864250779b12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-links",
										"projects",
										":projectKey",
										"flags",
										":featureFlagKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								},
								"description": "Get a list of all flag links."
							},
							"response": [
								{
									"id": "0b414a6a-337a-43ce-a130-595c5f09ba4c",
									"name": "Flag link collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"consequat1a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "6dc0dbfd-277d-4f4f-9669-378e6c7c4037",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "0c0330c6-a836-4cbb-8f0d-a747163a3696",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "eea557ee-1399-4761-a4a3-f16fefd5ca7a",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create flag link",
							"id": "fd0e0220-0428-4026-b2c8-5fe8812d6c4b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-links",
										"projects",
										":projectKey",
										"flags",
										":featureFlagKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								},
								"description": "Create a new flag link. Flag links let you reference external resources and associate them with your flags."
							},
							"response": [
								{
									"id": "f1109303-4552-4f94-8d25-185cbf3d436d",
									"name": "Flag link response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"sed9f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"reprehenderit4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"_deepLink\": \"https://example.com/archives/123123123\",\n  \"_timestamp\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_createdAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_key\": \"example-flag-link\",\n  \"_integrationKey\": \"tempor do minim sint fugiat\",\n  \"title\": \"Example link title\",\n  \"description\": \"Example link description\",\n  \"_metadata\": {\n    \"quis9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"enim_e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "e40021df-7e00-4ecd-b48b-4c6d1de8b857",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "6f7a3cf7-66cb-4054-a3ea-2a77172964dc",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "0a8512f8-47cf-4ef2-a466-697823b724fc",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "0795274e-2659-42ae-805d-b586da62e799",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "b6fefb5f-0bbc-4445-8512-7a8176d66dbe",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deepLink\": \"https://example.com/archives/123123123\",\n  \"description\": \"Example link description\",\n  \"key\": \"example-flag-link\",\n  \"title\": \"Example link title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-links/projects/:projectKey/flags/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-links",
												"projects",
												":projectKey",
												"flags",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "2332af5b-a75c-4125-8baf-75375427179a"
				},
				{
					"name": "flag-statuses/{projectKey}/{environmentKey}",
					"item": [
						{
							"name": "List feature flag statuses",
							"id": "de18b98f-1649-44c4-a610-c92810fd1cdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-statuses",
										":projectKey",
										":environmentKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								},
								"description": "Get a list of statuses for all feature flags. The status includes the last time the feature flag was requested, as well as a state, which is one of the following:\n\n- `new`: the feature flag was created within the last seven days, and has not been requested yet\n- `active`: the feature flag was requested within the last seven days\n- `inactive`: the feature flag was created more than seven days ago, and hasn't been requested within the past seven days\n- `launched`: one variation of the feature flag has been rolled out for at least seven days\n"
							},
							"response": [
								{
									"id": "00a92eb0-6e3c-401b-8349-ef7b1fc8228a",
									"name": "Flag Statuses collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/flag-statuses/my-project/my-environment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "6a3eaca4-fe1c-46aa-b2db-b3837ccdab1a",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "6c7c057e-bc2b-4420-ac0e-d38e14145187",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "06629697-2c53-40d1-a0ba-c10f1e6433b2",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "0700d4e0-4a91-4cb8-8186-896762eb40b2",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Get feature flag status",
							"id": "fbf66231-d7b8-4218-8d48-94a2292eaa01",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-statuses",
										":projectKey",
										":environmentKey",
										":featureFlagKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								},
								"description": "Get the status for a particular feature flag."
							},
							"response": [
								{
									"id": "353774e6-6c07-4f0c-afbc-9ef79987fa09",
									"name": "Flag status response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flags/my-project/my-flag\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flag-statuses/my-project/my-flag\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"inactive\",\n  \"lastRequested\": \"2020-02-05T18:17:01.514Z\",\n  \"default\": {}\n}"
								},
								{
									"id": "3f8aeb39-2081-4e32-9314-20a35d2bd42a",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "acc479ea-f2bc-4ee8-9411-1da788c45e83",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "b5a983c3-19f2-4280-bf9f-414adc829760",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "8266dfe8-753c-40f8-8005-a61a3d57f57a",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flag-statuses/:projectKey/:environmentKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flag-statuses",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "b956d4b6-e3c3-42cc-941a-3992d3dacae4"
				},
				{
					"name": "flags/{projectKey}",
					"item": [
						{
							"name": "{featureFlagKey}",
							"item": [
								{
									"name": "experiments/{environmentKey}/{metricKey}",
									"item": [
										{
											"name": "Get legacy experiment results (deprecated)",
											"id": "3cf5128a-c7fd-4dff-b679-401ee04a5345",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"experiments",
														":environmentKey",
														":metricKey"
													],
													"query": [
														{
															"key": "from",
															"value": "20327",
															"description": "A timestamp denoting the start of the data collection period, expressed as a Unix epoch time in milliseconds."
														},
														{
															"key": "to",
															"value": "-18309274",
															"description": "A timestamp denoting the end of the data collection period, expressed as a Unix epoch time in milliseconds."
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												},
												"description": "Get detailed experiment result data for legacy experiments."
											},
											"response": [
												{
													"id": "951d17ea-7977-4c2f-8f44-b08ade8118d8",
													"name": "Experiment results response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey"
															],
															"query": [
																{
																	"key": "from",
																	"value": "20327"
																},
																{
																	"key": "to",
																	"value": "-18309274"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "nostrud sunt cupidatat dolore qui",
																	"description": "(Required) The metric key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_links\": {\n    \"ut_d2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ex_d5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate_3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"amet_8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totals\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"stats\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"granularity\": \"velit incididunt Lorem voluptate\",\n  \"metricSeen\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "38850b4f-dc11-4e2b-b176-1cd11b1d9afe",
													"name": "Invalid request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey"
															],
															"query": [
																{
																	"key": "from",
																	"value": "20327"
																},
																{
																	"key": "to",
																	"value": "-18309274"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "nostrud sunt cupidatat dolore qui",
																	"description": "(Required) The metric key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "1aac2e62-d879-49f9-b0ec-5bede32bd8d2",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey"
															],
															"query": [
																{
																	"key": "from",
																	"value": "20327"
																},
																{
																	"key": "to",
																	"value": "-18309274"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "nostrud sunt cupidatat dolore qui",
																	"description": "(Required) The metric key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "a056a2fe-50dd-4c81-8c77-d0fc218793e8",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey"
															],
															"query": [
																{
																	"key": "from",
																	"value": "20327"
																},
																{
																	"key": "to",
																	"value": "-18309274"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "nostrud sunt cupidatat dolore qui",
																	"description": "(Required) The metric key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "eb9d5f31-1584-4096-9a24-775fb00f0f23",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey"
															],
															"query": [
																{
																	"key": "from",
																	"value": "20327"
																},
																{
																	"key": "to",
																	"value": "-18309274"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "nostrud sunt cupidatat dolore qui",
																	"description": "(Required) The metric key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "b3c3ba53-8b4f-42ad-9530-1a084edd2b07",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey?from=20327&to=-18309274",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey"
															],
															"query": [
																{
																	"key": "from",
																	"value": "20327"
																},
																{
																	"key": "to",
																	"value": "-18309274"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "nostrud sunt cupidatat dolore qui",
																	"description": "(Required) The metric key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Reset experiment results",
											"id": "d0c6231f-6f2e-4a7f-8d2e-7e8584134d96",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey/results",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"experiments",
														":environmentKey",
														":metricKey",
														"results"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "metricKey",
															"value": "et cillum sunt",
															"description": "(Required) The metric's key"
														}
													]
												},
												"description": "Reset all experiment results by deleting all existing data for an experiment."
											},
											"response": [
												{
													"id": "6399159e-f10a-4089-b99d-212e710c2716",
													"name": "Experiment results reset successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey/results",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey",
																"results"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "et cillum sunt",
																	"description": "(Required) The metric's key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "11a23d43-2866-495e-ba4c-318833fee47a",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey/results",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey",
																"results"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "et cillum sunt",
																	"description": "(Required) The metric's key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "447d567c-3906-449a-8663-ff5da1b99cc1",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey/results",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey",
																"results"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "et cillum sunt",
																	"description": "(Required) The metric's key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "5e08a01e-ad05-4d9e-8320-35fcb04da372",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey/results",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey",
																"results"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "et cillum sunt",
																	"description": "(Required) The metric's key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "8f48a51b-4bf7-4904-852a-44eac7ee472b",
													"name": "Rate limited",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/experiments/:environmentKey/:metricKey/results",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"experiments",
																":environmentKey",
																":metricKey",
																"results"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "metricKey",
																	"value": "et cillum sunt",
																	"description": "(Required) The metric's key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "94ff0e57-560b-4659-a013-068120d96461"
								},
								{
									"name": "expiring-targets/{environmentKey}",
									"item": [
										{
											"name": "Get expiring context targets for feature flag",
											"id": "51c0ca3d-4fd2-4f2e-99e4-27a9f1bdcc23",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"expiring-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												},
												"description": "Get a list of context targets on a feature flag that are scheduled for removal."
											},
											"response": [
												{
													"id": "70964d94-e41f-4820-94f1-ec5b8039792a",
													"name": "Expiring target response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Ut90\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_76\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"anim_121\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "b18a2b41-0002-451e-8f33-925686e9879e",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "3f00ea56-2ab5-46d3-ab18-569e80a922f5",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "47fda8c3-cdb2-4a93-bd96-6167812326d7",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "cffd3f65-735b-4fac-acf2-f690efdd93eb",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update expiring context targets on feature flag",
											"id": "fd68cdc0-4d21-47c4-a0a7-bf8ae9683783",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"expiring-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												},
												"description": "Schedule a context for removal from individual targeting on a feature flag. The flag must already individually target the context.\n\nYou can add, update, or remove a scheduled removal date. You can only schedule a context for removal on a single variation per flag.\n\nThis request only supports semantic patches. To make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\n#### addExpiringTarget\n\nAdds a date and time that LaunchDarkly will remove the context from the flag's individual targeting.\n\n##### Parameters\n\n* `value`: The time, in Unix milliseconds, when LaunchDarkly should remove the context from individual targeting for this flag\n* `variationId`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag\n* `contextKey`: The context key for the context to remove from individual targeting\n* `contextKind`: The kind of context represented by the `contextKey`\n\n#### updateExpiringTarget\n\nUpdates the date and time that LaunchDarkly will remove the context from the flag's individual targeting\n\n##### Parameters\n\n* `value`: The time, in Unix milliseconds, when LaunchDarkly should remove the context from individual targeting for this flag\n* `variationId`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag.\n* `contextKey`: The context key for the context to remove from individual targeting\n* `contextKind`: The kind of context represented by the `contextKey`\n\n#### removeExpiringTarget\n\nRemoves the scheduled removal of the context from the flag's individual targeting. The context will remain part of the flag's individual targeting until you explicitly remove them, or until you schedule another removal.\n\n##### Parameters\n\n* `variationId`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag.\n* `contextKey`: The context key for the context to remove from individual targeting\n* `contextKind`: The kind of context represented by the `contextKey`\n"
											},
											"response": [
												{
													"id": "9db5cf98-4755-44be-93b8-874a8f73fbba",
													"name": "Expiring target response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"voluptate1b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalInstructions\": -24827227,\n  \"successfulInstructions\": -91581760,\n  \"failedInstructions\": -55685894,\n  \"errors\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
												},
												{
													"id": "e1b6197d-4112-4b5e-9ece-aa180ca8c71e",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "420e25d3-5d59-41b1-bcf5-1e1570ba90d2",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "2a6d4992-1ef9-4e47-9505-0cece046a0bb",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "7ab17d47-b4b8-468b-b3bd-cb3422951dbc",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "2819ee85-e552-4ec3-87b0-26150c1f4d92",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "a49aaafb-84bf-4671-81ea-c17458fffb60"
								},
								{
									"name": "expiring-user-targets/{environmentKey}",
									"item": [
										{
											"name": "Get expiring user targets for feature flag",
											"id": "ed243c13-ed3e-493f-9cae-9ffb9105ed76",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												},
												"description": "\n> ### Contexts are now available\n>\n> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Get expiring context targets for feature flag](/tag/Feature-flags#operation/getExpiringContextTargets) instead of this endpoint. To learn more, read [Contexts](https://docs.launchdarkly.com/home/contexts).\n\nGet a list of user targets on a feature flag that are scheduled for removal.\n"
											},
											"response": [
												{
													"id": "a51b0ea3-4d8a-4e6d-815f-251dd00a0ae3",
													"name": "Expiring user target response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"voluptatec9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "ef815f52-d7ca-42b3-8c4d-ed7b7934a5c2",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "718cc7eb-185b-44ae-b127-5463b48a02a6",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "9e9ca75d-1b62-4644-9fc2-37a2ceb05780",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "72722bef-1870-40f0-a1f1-a8ab01b75e9c",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update expiring user targets on feature flag",
											"id": "65c2de6f-f791-4067-8a23-2d9255e00dd9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												},
												"description": "> ### Contexts are now available\n>\n> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Update expiring context targets on feature flag](/tag/Feature-flags#operation/patchExpiringTargets) instead of this endpoint. To learn more, read [Contexts](https://docs.launchdarkly.com/home/contexts).\n\nSchedule a target for removal from individual targeting on a feature flag. The flag must already serve a variation to specific targets based on their key.\n\nYou can add, update, or remove a scheduled removal date. You can only schedule a target for removal on a single variation per flag.\n\nThis request only supports semantic patches. To make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\n#### addExpireUserTargetDate\n\nAdds a date and time that LaunchDarkly will remove the user from the flag's individual targeting.\n\n##### Parameters\n\n* `value`: The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag\n* `variationId`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag.\n* `userKey`: The user key for the user to remove from individual targeting\n\n#### updateExpireUserTargetDate\n\nUpdates the date and time that LaunchDarkly will remove the user from the flag's individual targeting.\n\n##### Parameters\n\n* `value`: The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag\n* `variationId`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag.\n* `userKey`: The user key for the user to remove from individual targeting\n\n#### removeExpireUserTargetDate\n\nRemoves the scheduled removal of the user from the flag's individual targeting. The user will remain part of the flag's individual targeting until you explicitly remove them, or until you schedule another removal.\n\n##### Parameters\n\n* `variationId`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag.\n* `userKey`: The user key for the user to remove from individual targeting\n"
											},
											"response": [
												{
													"id": "cdf03c01-ea46-47f6-866c-5ac26c21abdc",
													"name": "Expiring user target response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"deseruntb2_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"pariatur_b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sitb2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalInstructions\": 1,\n  \"successfulInstructions\": 1,\n  \"failedInstructions\": 0,\n  \"errors\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
												},
												{
													"id": "02c7d0e1-5274-4ae9-82a1-af0e88d8e5f5",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "daaed947-53bb-4d34-8694-78ddd304531a",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "288dc018-6e01-46db-8512-3faa0a393a2e",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "c7eda4a1-ed1e-44ae-9ead-b5d7a15e383f",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "0ac847be-24d5-4a95-8c0a-63655680be01",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"kind\": \"addExpireUserTargetDate\",\n      \"userKey\": \"sandy\",\n      \"value\": 1686412800000,\n      \"variationId\": \"ce12d345-a1b2-4fb5-a123-ab123d4d5f5d\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "f8c5f965-de30-4e95-9972-0832ee081e53"
								},
								{
									"name": "triggers/{environmentKey}",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Get flag trigger by ID",
													"id": "aeaa64b8-6ad3-47d6-98fc-dc73ae83f975",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "id",
																	"value": "voluptate irure incididunt",
																	"description": "(Required) The flag trigger ID"
																}
															]
														},
														"description": "Get a flag trigger by ID."
													},
													"response": [
														{
															"id": "185654e0-6ba1-4b04-9b19-371397b446f2",
															"name": "Flag trigger response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_version\": 1,\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabled\": true,\n  \"_integrationKey\": \"generic-trigger\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_lastTriggeredAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_recentTriggerBodies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_triggerCount\": 3,\n  \"triggerURL\": \"in Excepteur in cillum\",\n  \"_links\": {\n    \"eu_08a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ut0d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"adipisicing74\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "20c4954a-3ff4-44e5-ad6f-416a0576994d",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "1af58e0f-828a-4050-8711-0b46920c6dbd",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "0cd83273-f2a9-4ab3-8b36-f8d5fdc86de6",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "68b3de98-556f-43db-9e3d-e5a3e41ee675",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Update flag trigger",
													"id": "dbddf347-061a-4216-b747-45f58f7a040f",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "id",
																	"value": "voluptate irure incididunt",
																	"description": "(Required) The flag trigger ID"
																}
															]
														},
														"description": "Update a flag trigger. Updating a flag trigger uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating flag triggers.\n\n#### replaceTriggerActionInstructions\n\nRemoves the existing trigger action and replaces it with the new instructions.\n\n##### Parameters\n\n- `value`: An array of the new `kind`s of actions to perform when triggering. Supported flag actions are `turnFlagOn` and `turnFlagOff`.\n\nFor example, to replace the trigger action instructions, use this request body:\n\n```json\n{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceTriggerActionInstructions\",\n      \"value\": [ {\"kind\": \"turnFlagOff\"} ]\n    }\n  ]\n}\n```\n\n#### cycleTriggerUrl\n\nGenerates a new URL for this trigger. You must update any clients using the trigger to use this new URL.\n\n#### disableTrigger\n\nDisables the trigger. This saves the trigger configuration, but the trigger stops running. To re-enable, use `enableTrigger`.\n\n#### enableTrigger\n\nEnables the trigger. If you previously disabled the trigger, it begins running again.\n"
													},
													"response": [
														{
															"id": "ca60c05c-ed3a-4233-927e-db831ea45744",
															"name": "Flag trigger response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_version\": 1,\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabled\": true,\n  \"_integrationKey\": \"generic-trigger\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_lastTriggeredAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_recentTriggerBodies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_triggerCount\": 3,\n  \"triggerURL\": \"in Excepteur in cillum\",\n  \"_links\": {\n    \"eu_08a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ut0d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"adipisicing74\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "4166b9d3-f62e-497b-a774-10b3a18b99e3",
															"name": "Invalid request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "38bbda86-a30c-45e6-a368-341d3cf03ed2",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "f2f7ba16-7fa8-418e-97c5-eb7cb7b8a822",
															"name": "Forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "a8343068-5a41-4e51-982b-ef80c6b62a6b",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "8482014d-d70e-40c2-92a3-fe9ca2a63e1e",
															"name": "Status conflict",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
														},
														{
															"id": "1550261e-948a-4f19-89e6-dca337f17d29",
															"name": "Rate limited",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"disableTrigger\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Delete flag trigger",
													"id": "e6c49103-7cb8-4c16-8283-00b2f07837c0",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "id",
																	"value": "voluptate irure incididunt",
																	"description": "(Required) The flag trigger ID"
																}
															]
														},
														"description": "Delete a flag trigger by ID."
													},
													"response": [
														{
															"id": "a61a4899-f7b9-4f21-ba3d-674119fd4bc9",
															"name": "Action succeeded",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "f01562f8-8f76-4c8b-be6c-23e5d5c8058f",
															"name": "Invalid request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "fea5082e-ea39-4a95-a6d2-1b79d499b037",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "e253e077-7491-4c64-b9ad-28dc94821a20",
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "e6ec0959-aab1-4e1f-8e2c-53a3e30a4253",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "d96ae3c1-c30e-4467-92e5-fcb6d95185a1",
															"name": "Rate limited",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"flags",
																		":projectKey",
																		":featureFlagKey",
																		"triggers",
																		":environmentKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "id",
																			"value": "voluptate irure incididunt",
																			"description": "(Required) The flag trigger ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "738a4d3f-c4e1-4dec-83cb-75f0804f434b"
										},
										{
											"name": "List flag triggers",
											"id": "5bf30361-d1e1-42c2-acf7-dd5ba4bf0077",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"triggers",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												},
												"description": "Get a list of all flag triggers."
											},
											"response": [
												{
													"id": "66e3f2d1-9006-4417-9383-714955aa3666",
													"name": "Flag trigger collection response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"aliquip6\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "d66b0137-194e-4ef9-92f2-9aae7f19138c",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "0c91ef53-37de-4fc2-be3e-e67a71f04ce5",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "9a13c1c5-2aa0-4ccb-8ebb-8a4d3612ef0b",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Create flag trigger",
											"id": "fdec3b8f-e8b9-49a8-8d1c-0dedad2953dd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"triggers",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												},
												"description": "Create a new flag trigger."
											},
											"response": [
												{
													"id": "d098a5f4-3d93-470b-8c8d-3b0e094db204",
													"name": "Flag trigger response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_version\": 1,\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enabled\": true,\n  \"_integrationKey\": \"generic-trigger\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_lastTriggeredAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_recentTriggerBodies\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_triggerCount\": 3,\n  \"triggerURL\": \"est Ut\",\n  \"_links\": {\n    \"adipisicingb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "d03823af-4dea-4c7d-b477-623fb82e8d0f",
													"name": "Invalid request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "d4643408-a47e-4950-a8a6-ae5696435029",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "6f288938-60e4-402a-b3f0-bf60b37687df",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "3bf71d4d-6ba3-4047-b8c4-294b35bd292f",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "89625373-33db-4130-be1a-7a1459632f97",
													"name": "Rate limited",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"generic-trigger\",\n  \"comment\": \"example comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/triggers/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"flags",
																":projectKey",
																":featureFlagKey",
																"triggers",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "4a50d13e-134e-4735-b59c-3d5ddcee4762"
								},
								{
									"name": "Get feature flag",
									"id": "f55a326b-90a3-4b60-8743-48279d93e589",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey?env=ipsum incididunt consectetur velit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit",
													"description": "Filter configurations by environment"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										},
										"description": "Get a single feature flag by key. By default, this returns the configurations for all environments. You can filter environments with the `env` query parameter. For example, setting `env=production` restricts the returned configurations to just the `production` environment."
									},
									"response": [
										{
											"id": "74c17ded-2a7e-45e6-a2ec-a89998218729",
											"name": "Global flag response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey?env=ipsum incididunt consectetur velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"query": [
														{
															"key": "env",
															"value": "ipsum incididunt consectetur velit"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"My Flag\",\n  \"kind\": \"boolean\",\n  \"key\": \"my-flag\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"variations\": [\n    {\n      \"_id\": \"e432f62b-55f6-49dd-a02f-eb24acf39d05\",\n      \"value\": true\n    },\n    {\n      \"_id\": \"a00bf58d-d252-476c-b915-15a74becacb4\",\n      \"value\": false\n    }\n  ],\n  \"temporary\": true,\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flags/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flags/my-project/my-flag\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customProperties\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archived\": false,\n  \"environments\": {\n    \"my-environment\": {\n      \"_environmentName\": \"My Environment\",\n      \"_site\": {\n        \"href\": \"/default/my-environment/features/client-side-flag\",\n        \"type\": \"text/html\"\n      },\n      \"_summary\": {\n        \"prerequisites\": 0,\n        \"variations\": {\n          \"0\": {\n            \"isFallthrough\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          },\n          \"1\": {\n            \"isOff\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          }\n        }\n      },\n      \"archived\": false,\n      \"fallthrough\": {\n        \"variation\": 0\n      },\n      \"lastModified\": 1627071171347,\n      \"offVariation\": 1,\n      \"on\": false,\n      \"prerequisites\": [],\n      \"rules\": [],\n      \"salt\": \"61eddeadbeef4da1facecafe3a60a397\",\n      \"sel\": \"810edeadbeef4844facecafe438f2999492\",\n      \"targets\": [],\n      \"trackEvents\": false,\n      \"trackEventsFallthrough\": false,\n      \"version\": 1\n    }\n  },\n  \"description\": \"This flag controls the example widgets\",\n  \"includeInSnippet\": true,\n  \"clientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569f183514f4432160000007\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerTeamKey\": \"team-1\",\n  \"_maintainerTeam\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "66abb74c-6c2b-4931-8686-68438caaedf2",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey?env=ipsum incididunt consectetur velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"query": [
														{
															"key": "env",
															"value": "ipsum incididunt consectetur velit"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "9a2881e1-7732-435c-bdba-d54ad6fea4dd",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey?env=ipsum incididunt consectetur velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"query": [
														{
															"key": "env",
															"value": "ipsum incididunt consectetur velit"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "fe46619d-1b1a-4601-90a3-400178b7e9bb",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey?env=ipsum incididunt consectetur velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"query": [
														{
															"key": "env",
															"value": "ipsum incididunt consectetur velit"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "80296547-b9a9-4e2f-a317-c7253200340b",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey?env=ipsum incididunt consectetur velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"query": [
														{
															"key": "env",
															"value": "ipsum incididunt consectetur velit"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update feature flag",
									"id": "4d3ebcb3-4f26-43cf-b915-57d47000dfa9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "sint in incididunt",
													"description": "(Required) The feature flag key. The key identifies the flag in your code."
												}
											]
										},
										"description": "Perform a partial update to a feature flag. The request body must be a valid semantic patch or JSON patch.\n\n### Using semantic patches on a feature flag\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\nThe body of a semantic patch request for updating feature flags requires an `environmentKey` in addition to `instructions` and an optional `comment`. The body of the request takes the following properties:\n\n* `comment` (string): (Optional) A description of the update.\n* `environmentKey` (string): (Required) The key of the LaunchDarkly environment.\n* `instructions` (array): (Required) A list of actions the update should perform. Each action in the list must be an object with a `kind` property that indicates the instruction. If the action requires parameters, you must include those parameters as additional fields in the object. The body of a single semantic patch can contain many different instructions.\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating feature flags.\n\n<details>\n<summary>Click to expand instructions for turning flags on and off</summary>\n\n#### turnFlagOff\n\nSets the flag's targeting state to **Off**.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"example-environment-key\",\n  \"instructions\": [ { \"kind\": \"turnFlagOff\" } ]\n}\n```\n\n#### turnFlagOn\n\nSets the flag's targeting state to **On**.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"example-environment-key\",\n  \"instructions\": [ { \"kind\": \"turnFlagOn\" } ]\n}\n```\n\n</details><br />\n\n<details>\n<summary>Click to expand instructions for working with targeting and variations</summary>\n\nSeveral of the instructions for working with targeting and variations require flag rule IDs, variation IDs, or clause IDs as parameters. Each of these are returned as part of the [Get feature flag](/tag/Feature-flags#operation/getFeatureFlag) response. The flag rule ID is the `_id` field of each element in the `rules` array within each environment listed in the `environments` object. The variation ID is the `_id` field in each element of the `variations` array. The clause ID is the `_id` field of each element of the `clauses` array within the `rules` array within each environment listed in the `environments` object.\n\n#### addClauses\n\nAdds the given clauses to the rule indicated by `ruleId`.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauses`: Array of clause objects, with `contextKind` (string), `attribute` (string), `op` (string), `negate` (boolean), and `values` (array of strings, numbers, or dates) properties.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addClauses\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauses\": [{\n\t\t\t\"contextKind\": \"user\",\n\t\t\t\"attribute\": \"country\",\n\t\t\t\"op\": \"in\",\n\t\t\t\"negate\": false,\n\t\t\t\"values\": [\"USA\", \"Canada\"]\n\t\t}]\n\t}]\n}\n```\n\n#### addPrerequisite\n\nAdds the flag indicated by `key` with variation `variationId` as a prerequisite to the flag in the path parameter.\n\n##### Parameters\n\n- `key`: Flag key of the prerequisite flag.\n- `variationId`: ID of a variation of the prerequisite flag.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addPrerequisite\",\n\t\t\"key\": \"example-prereq-flag-key\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### addRule\n\nAdds a new targeting rule to the flag. The rule may contain `clauses` and serve the variation that `variationId` indicates, or serve a percentage rollout that `rolloutWeights`, `rolloutBucketBy`, and `rolloutContextKind` indicate.\n\nIf you set `beforeRuleId`, this adds the new rule before the indicated rule. Otherwise, adds the new rule to the end of the list.\n\n##### Parameters\n\n- `clauses`: Array of clause objects, with `contextKind` (string), `attribute` (string), `op` (string), `negate` (boolean), and `values` (array of strings, numbers, or dates) properties.\n- `beforeRuleId`: (Optional) ID of a flag rule.\n- `variationId`: ID of a variation of the flag.\n- `rolloutWeights`: (Optional) Map of `variationId` to weight, in thousandths of a percent (0-100000).\n- `rolloutBucketBy`: (Optional) Context attribute available in the specified `rolloutContextKind`.\n- `rolloutContextKind`: (Optional) Context kind, defaults to `user`\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [{\n    \"kind\": \"addRule\",\n    \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n    \"clauses\": [{\n      \"contextKind\": \"organization\",\n      \"attribute\": \"located_in\",\n      \"op\": \"in\",\n      \"negate\": false,\n      \"values\": [\"Sweden\", \"Norway\"]\n    }]\n  }]\n}\n```\n\n#### addTargets\n\nAdds context keys to the individual context targets for the context kind that `contextKind` specifies and the variation that `variationId` specifies. Returns an error if this causes the flag to target the same context key in multiple variations.\n\n##### Parameters\n\n- `values`: List of context keys.\n- `contextKind`: (Optional) Context kind to target, defaults to `user`\n- `variationId`: ID of a variation on the flag.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addTargets\",\n\t\t\"values\": [\"context-key-123abc\", \"context-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### addUserTargets\n\nAdds user keys to the individual user targets for the variation that `variationId` specifies. Returns an error if this causes the flag to target the same user key in multiple variations.\n\n##### Parameters\n\n- `values`: List of user keys.\n- `variationId`: ID of a variation on the flag.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addUserTargets\",\n\t\t\"values\": [\"user-key-123abc\", \"user-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### addValuesToClause\n\nAdds `values` to the values of the clause that `ruleId` and `clauseId` indicate. Does not update the context kind, attribute, or operator.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseId`: ID of a clause in that rule.\n- `values`: Array of strings.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addValuesToClause\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauseId\": \"10a58772-3121-400f-846b-b8a04e8944ed\",\n\t\t\"values\": [\"beta_testers\"]\n\t}]\n}\n```\n\n#### clearTargets\n\nRemoves all individual targets from the variation that `variationId` specifies. This includes both user and non-user targets.\n\n##### Parameters\n\n- `variationId`: ID of a variation on the flag.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"clearTargets\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### clearUserTargets\n\nRemoves all individual user targets from the variation that `variationId` specifies.\n\n##### Parameters\n\n- `variationId`: ID of a variation on the flag.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"clearUserTargets\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### removeClauses\n\nRemoves the clauses specified by `clauseIds` from the rule indicated by `ruleId`.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseIds`: Array of IDs of clauses in the rule.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeClauses\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauseIds\": [\"10a58772-3121-400f-846b-b8a04e8944ed\", \"36a461dc-235e-4b08-97b9-73ce9365873e\"]\n\t}]\n}\n```\n\n#### removePrerequisite\n\nRemoves the prerequisite flag indicated by `key`. Does nothing if this prerequisite does not exist.\n\n##### Parameters\n\n- `key`: Flag key of an existing prerequisite flag.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"removePrerequisite\", \"key\": \"prereq-flag-key-123abc\" } ]\n}\n```\n\n#### removeRule\n\nRemoves the targeting rule specified by `ruleId`. Does nothing if the rule does not exist.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"removeRule\", \"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\" } ]\n}\n```\n\n#### removeTargets\n\nRemoves context keys from the individual context targets for the context kind that `contextKind` specifies and the variation that `variationId` specifies. Does nothing if the flag does not target the context keys.\n\n##### Parameters\n\n- `values`: List of context keys.\n- `contextKind`: (Optional) Context kind to target, defaults to `user`\n- `variationId`: ID of a flag variation.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeTargets\",\n\t\t\"values\": [\"context-key-123abc\", \"context-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### removeUserTargets\n\nRemoves user keys from the individual user targets for the variation that `variationId` specifies. Does nothing if the flag does not target the user keys.\n\n##### Parameters\n\n- `values`: List of user keys.\n- `variationId`: ID of a flag variation.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeUserTargets\",\n\t\t\"values\": [\"user-key-123abc\", \"user-key-456def\"],\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### removeValuesFromClause\n\nRemoves `values` from the values of the clause indicated by `ruleId` and `clauseId`. Does not update the context kind, attribute, or operator.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseId`: ID of a clause in that rule.\n- `values`: Array of strings.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"removeValuesFromClause\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"clauseId\": \"10a58772-3121-400f-846b-b8a04e8944ed\",\n\t\t\"values\": [\"beta_testers\"]\n\t}]\n}\n```\n\n#### reorderRules\n\nRearranges the rules to match the order given in `ruleIds`. Returns an error if `ruleIds` does not match the current set of rules on the flag.\n\n##### Parameters\n\n- `ruleIds`: Array of IDs of all rules in the flag.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"reorderRules\",\n\t\t\"ruleIds\": [\"a902ef4a-2faf-4eaf-88e1-ecc356708a29\", \"63c238d1-835d-435e-8f21-c8d5e40b2a3d\"]\n\t}]\n}\n```\n\n#### replacePrerequisites\n\nRemoves all existing prerequisites and replaces them with the list you provide.\n\n##### Parameters\n\n- `prerequisites`: A list of prerequisites. Each item in the list must include a flag `key` and `variationId`.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"example-environment-key\",\n  \"instructions\": [\n    {\n      \"kind\": \"replacePrerequisites\",\n      \"prerequisites\": [\n        {\n          \"key\": \"prereq-flag-key\",\n          \"variationId\": \"10a58772-3121-400f-846b-b8a04e8944ed\"\n        },\n        {\n          \"key\": \"another-prereq-flag-key\",\n          \"variationId\": \"e5830889-1ec5-4b0c-9cc9-c48790090c43\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### replaceRules\n\nRemoves all targeting rules for the flag and replaces them with the list you provide.\n\n##### Parameters\n\n- `rules`: A list of rules.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"example-environment-key\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceRules\",\n      \"rules\": [\n        {\n          \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n          \"description\": \"My new rule\",\n          \"clauses\": [\n            {\n              \"contextKind\": \"user\",\n              \"attribute\": \"segmentMatch\",\n              \"op\": \"segmentMatch\",\n              \"values\": [\"test\"]\n            }\n          ],\n          \"trackEvents\": true\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### replaceTargets\n\nRemoves all existing targeting and replaces it with the list of targets you provide.\n\n##### Parameters\n\n- `targets`: A list of context targeting. Each item in the list includes an optional `contextKind` that defaults to `user`, a required `variationId`, and a required list of `values`.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceTargets\",\n      \"targets\": [\n        {\n          \"contextKind\": \"user\",\n          \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n          \"values\": [\"user-key-123abc\"]\n        },\n        {\n          \"contextKind\": \"device\",\n          \"variationId\": \"e5830889-1ec5-4b0c-9cc9-c48790090c43\",\n          \"values\": [\"device-key-456def\"]\n        }\n      ]\n    }    \n  ]\n}\n```\n\n#### replaceUserTargets\n\nRemoves all existing user targeting and replaces it with the list of targets you provide. In the list of targets, you must include a target for each of the flag's variations.\n\n##### Parameters\n\n- `targets`: A list of user targeting. Each item in the list must include a `variationId` and a list of `values`.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"example-environment-key\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceUserTargets\",\n      \"targets\": [\n        {\n          \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\",\n          \"values\": [\"user-key-123abc\", \"user-key-456def\"]\n        },\n        {\n          \"variationId\": \"e5830889-1ec5-4b0c-9cc9-c48790090c43\",\n          \"values\": [\"user-key-789ghi\"]\n        }\n      ]\n    }\n  ]\n}\n```\n\n#### updateClause\n\nReplaces the clause indicated by `ruleId` and `clauseId` with `clause`.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `clauseId`: ID of a clause in that rule.\n- `clause`: New `clause` object, with `contextKind` (string), `attribute` (string), `op` (string), `negate` (boolean), and `values` (array of strings, numbers, or dates) properties.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [{\n    \"kind\": \"updateClause\",\n    \"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n    \"clauseId\": \"10c7462a-2062-45ba-a8bb-dfb3de0f8af5\",\n    \"clause\": {\n      \"contextKind\": \"user\",\n      \"attribute\": \"country\",\n      \"op\": \"in\",\n      \"negate\": false,\n      \"values\": [\"Mexico\", \"Canada\"]\n    }\n  }]\n}\n```\n\n#### updateFallthroughVariationOrRollout\n\nUpdates the default or \"fallthrough\" rule for the flag, which the flag serves when a context matches none of the targeting rules. The rule can serve either the variation that `variationId` indicates, or a percent rollout that `rolloutWeights` and `rolloutBucketBy` indicate.\n\n##### Parameters\n\n- `variationId`: ID of a variation of the flag.\nor\n- `rolloutWeights`: Map of `variationId` to weight, in thousandths of a percent (0-100000).\n- `rolloutBucketBy`: (Optional) Context attribute available in the specified `rolloutContextKind`.\n- `rolloutContextKind`: (Optional) Context kind, defaults to `user`\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateFallthroughVariationOrRollout\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### updateOffVariation\n\nUpdates the default off variation to `variationId`. The flag serves the default off variation when the flag's targeting is **Off**.\n\n##### Parameters\n\n- `variationId`: ID of a variation of the flag.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateOffVariation\", \"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\" } ]\n}\n```\n\n#### updatePrerequisite\n\nChanges the prerequisite flag that `key` indicates to use the variation that `variationId` indicates. Returns an error if this prerequisite does not exist.\n\n##### Parameters\n\n- `key`: Flag key of an existing prerequisite flag.\n- `variationId`: ID of a variation of the prerequisite flag.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updatePrerequisite\",\n\t\t\"key\": \"example-prereq-flag-key\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### updateRuleDescription\n\nUpdates the description of the feature flag rule.\n\n##### Parameters\n\n- `description`: The new human-readable description for this rule.\n- `ruleId`: The ID of the rule. You can retrieve this by making a GET request for the flag.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateRuleDescription\",\n\t\t\"description\": \"New rule description\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\"\n\t}]\n}\n```\n\n#### updateRuleTrackEvents\n\nUpdates whether or not LaunchDarkly tracks events for the feature flag associated with this rule.\n\n##### Parameters\n\n- `ruleId`: The ID of the rule. You can retrieve this by making a GET request for the flag.\n- `trackEvents`: Whether or not events are tracked.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateRuleTrackEvents\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"trackEvents\": true\n\t}]\n}\n```\n\n#### updateRuleVariationOrRollout\n\nUpdates what `ruleId` serves when its clauses evaluate to true. The rule can serve either the variation that `variationId` indicates, or a percent rollout that `rolloutWeights` and `rolloutBucketBy` indicate.\n\n##### Parameters\n\n- `ruleId`: ID of a rule in the flag.\n- `variationId`: ID of a variation of the flag.\n\n  or\n\n- `rolloutWeights`: Map of `variationId` to weight, in thousandths of a percent (0-100000).\n- `rolloutBucketBy`: (Optional) Context attribute available in the specified `rolloutContextKind`.\n- `rolloutContextKind`: (Optional) Context kind, defaults to `user`\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"updateRuleVariationOrRollout\",\n\t\t\"ruleId\": \"a902ef4a-2faf-4eaf-88e1-ecc356708a29\",\n\t\t\"variationId\": \"2f43f67c-3e4e-4945-a18a-26559378ca00\"\n\t}]\n}\n```\n\n#### updateTrackEvents\n\nUpdates whether or not LaunchDarkly tracks events for the feature flag, for all rules.\n\n##### Parameters\n\n- `trackEvents`: Whether or not events are tracked.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateTrackEvents\", \"trackEvents\": true } ]\n}\n```\n\n#### updateTrackEventsFallthrough\n\nUpdates whether or not LaunchDarkly tracks events for the feature flag, for the default rule.\n\n##### Parameters\n\n- `trackEvents`: Whether or not events are tracked.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateTrackEventsFallthrough\", \"trackEvents\": true } ]\n}\n```\n\n</details><br />\n\n<details>\n<summary>Click to expand instructions for updating flag settings</summary>\n\n#### addCustomProperties\n\nAdds a new custom property to the feature flag. Custom properties are used to associate feature flags with LaunchDarkly integrations. For example, if you create an integration with an issue tracking service, you may want to associate a flag with a list of issues related to a feature's development.\n\n##### Parameters\n\n - `key`: The custom property key.\n - `name`: The custom property name.\n - `values`: A list of the associated values for the custom property.\n\nUse this request body:\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"addCustomProperties\",\n\t\t\"key\": \"example-custom-property\",\n\t\t\"name\": \"Example custom property\",\n\t\t\"values\": [\"value1\", \"value2\"]\n\t}]\n}\n```\n\n#### addTags\n\nAdds tags to the feature flag.\n\n##### Parameters\n\n- `values`: A list of tags to add.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"addTags\", \"values\": [\"tag1\", \"tag2\"] } ]\n}\n```\n\n#### makeFlagPermanent\n\nMarks the feature flag as permanent. LaunchDarkly does not prompt you to remove permanent flags, even if one variation is rolled out to all your customers.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"makeFlagPermanent\" } ]\n}\n```\n\n#### makeFlagTemporary\n\nMarks the feature flag as temporary.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"makeFlagTemporary\" } ]\n}\n```\n\n#### removeCustomProperties\n\nRemoves the associated values from a custom property. If all the associated values are removed, this instruction also removes the custom property.\n\n##### Parameters\n\n - `key`: The custom property key.\n - `values`: A list of the associated values to remove from the custom property.\n\n```json\n{\n\t\"environmentKey\": \"environment-key-123abc\",\n\t\"instructions\": [{\n\t\t\"kind\": \"replaceCustomProperties\",\n\t\t\"key\": \"example-custom-property\",\n\t\t\"values\": [\"value1\", \"value2\"]\n\t}]\n}\n```\n\n#### removeMaintainer\n\nRemoves the flag's maintainer. To set a new maintainer, use the flag's **Settings** tab in the LaunchDarkly user interface.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"removeMaintainer\" } ]\n}\n```\n\n#### removeTags\n\nRemoves tags from the feature flag.\n\n##### Parameters\n\n- `values`: A list of tags to remove.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"removeTags\", \"values\": [\"tag1\", \"tag2\"] } ]\n}\n```\n\n#### replaceCustomProperties\n\nReplaces the existing associated values for a custom property with the new values.\n\n##### Parameters\n\n - `key`: The custom property key.\n - `name`: The custom property name.\n - `values`: A list of the new associated values for the custom property.\n\nUse this request body:\n\n```json\n{\n \"environmentKey\": \"environment-key-123abc\",\n \"instructions\": [{\n   \"kind\": \"replaceCustomProperties\",\n   \"key\": \"example-custom-property\",\n   \"name\": \"Example custom property\",\n   \"values\": [\"value1\", \"value2\"]\n }]\n}\n```\n\n#### turnOffClientSideAvailability\n\nTurns off client-side SDK availability for the flag. This is equivalent to unchecking the **SDKs using Mobile Key** and/or **SDKs using client-side ID** boxes for the flag. If you're using a client-side or mobile SDK, you must expose your feature flags in order for the client-side or mobile SDKs to evaluate them.\n\n##### Parameters\n\n- `value`: Use \"usingMobileKey\" to turn off availability for mobile SDKs. Use \"usingEnvironmentId\" to turn on availability for client-side SDKs.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"turnOffClientSideAvailability\", \"value\": \"usingMobileKey\" } ]\n}\n```\n\n#### turnOnClientSideAvailability\n\nTurns on client-side SDK availability for the flag. This is equivalent to unchecking the **SDKs using Mobile Key** and/or **SDKs using client-side ID** boxes for the flag. If you're using a client-side or mobile SDK, you must expose your feature flags in order for the client-side or mobile SDKs to evaluate them.\n\n##### Parameters\n\n- `value`: Use \"usingMobileKey\" to turn on availability for mobile SDKs. Use \"usingEnvironmentId\" to turn on availability for client-side SDKs.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"turnOnClientSideAvailability\", \"value\": \"usingMobileKey\" } ]\n}\n```\n\n#### updateDescription\n\nUpdates the feature flag description.\n\n##### Parameters\n\n- `value`: The new description.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateDescription\", \"value\": \"Updated flag description\" } ]\n}\n```\n#### updateMaintainerMember\n\nUpdates the maintainer of the flag to an existing member and removes the existing maintainer.\n\n##### Parameters\n\n- `value`: The ID of the member.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateMaintainerMember\", \"value\": \"61e9b714fd47591727db558a\" } ]\n}\n```\n\n#### updateMaintainerTeam\n\nUpdates the maintainer of the flag to an existing team and removes the existing maintainer.\n\n##### Parameters\n\n- `value`: The key of the team.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateMaintainerTeam\", \"value\": \"example-team-key\" } ]\n}\n```\n\n#### updateName\n\nUpdates the feature flag name.\n\n##### Parameters\n\n- `value`: The new name.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"updateName\", \"value\": \"Updated flag name\" } ]\n}\n```\n\n</details><br />\n\n<details>\n<summary>Click to expand instructions for updating the flag lifecycle</summary>\n\n#### archiveFlag\n\nArchives the feature flag. This retires it from LaunchDarkly without deleting it. You cannot archive a flag that is a prerequisite of other flags.\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"archiveFlag\" } ]\n}\n```\n\n#### deleteFlag\n\nDeletes the feature flag and its rules. You cannot restore a deleted flag. If this flag is requested again, the flag value defined in code will be returned for all contexts.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"deleteFlag\" } ]\n}\n```\n\n#### restoreFlag\n\nRestores the feature flag if it was previously archived.\n\nUse this request body:\n\n```json\n{\n  \"environmentKey\": \"environment-key-123abc\",\n  \"instructions\": [ { \"kind\": \"restoreFlag\" } ]\n}\n```\n\n</details>\n\n### Using JSON Patches on a feature flag\nIf you do not include the header described above, you can use [JSON patch](/reference#updates-using-json-patch).\n\nWhen using the update feature flag endpoint to add individual targets to a specific variation, there are two different patch documents, depending on whether there are already individual targets for the variation.\n\nIf a flag variation already has individual targets, the path for the JSON Patch operation is:\n\n```json\n{\n  \"op\": \"add\",\n  \"path\": \"/environments/devint/targets/0/values/-\",\n  \"value\": \"TestClient10\"\n}\n```\n\nIf a flag variation does not already have individual targets, the path for the JSON Patch operation is:\n\n```json\n[\n  {\n    \"op\": \"add\",\n    \"path\": \"/environments/devint/targets/-\",\n    \"value\": { \"variation\": 0, \"values\": [\"TestClient10\"] }\n  }\n]\n```\n\n\n### Required approvals\nIf a request attempts to alter a flag configuration in an environment where approvals are required for the flag, the request will fail with a 405. Changes to the flag configuration in that environment will require creating an [approval request](/tag/Approvals) or a [workflow](/tag/Workflows-(beta)).\n\n### Conflicts\nIf a flag configuration change made through this endpoint would cause a pending scheduled change or approval request to fail, this endpoint will return a 400. You can ignore this check by adding an `ignoreConflicts` query parameter set to `true`.\n"
									},
									"response": [
										{
											"id": "15870804-fbe6-4e2d-ab34-9b66fa65c8c0",
											"name": "Global flag response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"My Flag\",\n  \"kind\": \"boolean\",\n  \"key\": \"my-flag\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"variations\": [\n    {\n      \"_id\": \"e432f62b-55f6-49dd-a02f-eb24acf39d05\",\n      \"value\": true\n    },\n    {\n      \"_id\": \"a00bf58d-d252-476c-b915-15a74becacb4\",\n      \"value\": false\n    }\n  ],\n  \"temporary\": true,\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flags/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flags/my-project/my-flag\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customProperties\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archived\": false,\n  \"environments\": {\n    \"my-environment\": {\n      \"_environmentName\": \"My Environment\",\n      \"_site\": {\n        \"href\": \"/default/my-environment/features/client-side-flag\",\n        \"type\": \"text/html\"\n      },\n      \"_summary\": {\n        \"prerequisites\": 0,\n        \"variations\": {\n          \"0\": {\n            \"isFallthrough\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          },\n          \"1\": {\n            \"isOff\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          }\n        }\n      },\n      \"archived\": false,\n      \"fallthrough\": {\n        \"variation\": 0\n      },\n      \"lastModified\": 1627071171347,\n      \"offVariation\": 1,\n      \"on\": false,\n      \"prerequisites\": [],\n      \"rules\": [],\n      \"salt\": \"61eddeadbeef4da1facecafe3a60a397\",\n      \"sel\": \"810edeadbeef4844facecafe438f2999492\",\n      \"targets\": [],\n      \"trackEvents\": false,\n      \"trackEventsFallthrough\": false,\n      \"version\": 1\n    }\n  },\n  \"description\": \"This flag controls the example widgets\",\n  \"includeInSnippet\": true,\n  \"clientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569f183514f4432160000007\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerTeamKey\": \"team-1\",\n  \"_maintainerTeam\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "edebca88-babb-4380-9e4c-8f28c5d77c46",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "30ed9c8c-14f6-4c7f-b121-51033444dd2d",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "bb9246cb-6faa-47cc-8103-a7b66713848d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "5d0cbf2f-1703-4035-8725-3e19283ed322",
											"name": "Approval is required to make this request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "5d18271c-0f16-4645-9def-94d90881ccd0",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "674c5bb0-d761-4185-b139-b1d154fc7b98",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this flag\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete feature flag",
									"id": "e4853ac2-efee-41f8-9d3b-02ebc8acd52d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":featureFlagKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "sint in incididunt",
													"description": "(Required) The feature flag key. The key identifies the flag in your code."
												}
											]
										},
										"description": "Delete a feature flag in all environments. Use with caution: only delete feature flags your application no longer uses."
									},
									"response": [
										{
											"id": "cc06f0cd-9066-4789-840d-466ae280a237",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "8398e71a-9574-4c9f-94ac-32b83ace6bd9",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "58d738de-af5c-4f80-9437-818ec5f05c1d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "1a8193a5-d87a-407b-a9fc-2b37b94d1cb8",
											"name": "Status conflict",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "88d59ead-6522-49c5-acff-8e8dd78585dc",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Copy feature flag",
									"id": "66b7094b-095c-4a30-a2fd-1b6de6181169",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":featureFlagKey",
												"copy"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "sint in incididunt",
													"description": "(Required) The feature flag key. The key identifies the flag in your code."
												}
											]
										},
										"description": "\n> ### Copying flag settings is an Enterprise feature\n>\n> Copying flag settings is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nCopy flag settings from a source environment to a target environment.\n\nBy default, this operation copies the entire flag configuration. You can use the `includedActions` or `excludedActions` to specify that only part of the flag configuration is copied.\n\nIf you provide the optional `currentVersion` of a flag, this operation tests to ensure that the current flag version in the environment matches the version you've specified. The operation rejects attempts to copy flag settings if the environment's current version  of the flag does not match the version you've specified. You can use this to enforce optimistic locking on copy attempts.\n"
									},
									"response": [
										{
											"id": "45c243c0-1468-4cf8-bdaf-a3cfbb7f8a44",
											"name": "Global flag response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"My Flag\",\n  \"kind\": \"boolean\",\n  \"key\": \"my-flag\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"variations\": [\n    {\n      \"_id\": \"e432f62b-55f6-49dd-a02f-eb24acf39d05\",\n      \"value\": true\n    },\n    {\n      \"_id\": \"a00bf58d-d252-476c-b915-15a74becacb4\",\n      \"value\": false\n    }\n  ],\n  \"temporary\": true,\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flags/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flags/my-project/my-flag\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customProperties\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archived\": false,\n  \"environments\": {\n    \"my-environment\": {\n      \"_environmentName\": \"My Environment\",\n      \"_site\": {\n        \"href\": \"/default/my-environment/features/client-side-flag\",\n        \"type\": \"text/html\"\n      },\n      \"_summary\": {\n        \"prerequisites\": 0,\n        \"variations\": {\n          \"0\": {\n            \"isFallthrough\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          },\n          \"1\": {\n            \"isOff\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          }\n        }\n      },\n      \"archived\": false,\n      \"fallthrough\": {\n        \"variation\": 0\n      },\n      \"lastModified\": 1627071171347,\n      \"offVariation\": 1,\n      \"on\": false,\n      \"prerequisites\": [],\n      \"rules\": [],\n      \"salt\": \"61eddeadbeef4da1facecafe3a60a397\",\n      \"sel\": \"810edeadbeef4844facecafe438f2999492\",\n      \"targets\": [],\n      \"trackEvents\": false,\n      \"trackEventsFallthrough\": false,\n      \"version\": 1\n    }\n  },\n  \"description\": \"This flag controls the example widgets\",\n  \"includeInSnippet\": true,\n  \"clientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569f183514f4432160000007\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerTeamKey\": \"team-1\",\n  \"_maintainerTeam\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "a3975dba-8dab-4129-83e1-39a531cad601",
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "a7a6999f-3cb0-4165-8022-2f98a5963f07",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "5d6188e9-1af2-4170-aab2-ac17918f6bc6",
											"name": "Method not allowed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "d587f73c-a6c1-4acb-bd30-4aca6ac69d69",
											"name": "Status conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "eb39d850-c691-43c6-b80c-4234969035e5",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"optional comment\",\n  \"source\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-source-env\"\n  },\n  \"target\": {\n    \"currentVersion\": 1,\n    \"key\": \"example-target-env\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "sint in incididunt",
															"description": "(Required) The feature flag key. The key identifies the flag in your code."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "List dependent feature flags",
									"id": "9476f344-53a8-4f16-91ca-b3459e79e94e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":featureFlagKey",
												"dependent-flags"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										},
										"description": "> ### Flag prerequisites is an Enterprise feature\n>\n> Flag prerequisites is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nList dependent flags across all environments for the flag specified in the path parameters. A dependent flag is a flag that uses another flag as a prerequisite. To learn more, read [Flag prerequisites](https://docs.launchdarkly.com/home/flags/prerequisites).\n"
									},
									"response": [
										{
											"id": "ef92c0c7-f965-4dfd-a6d9-cbc8429bc58d",
											"name": "Multi environment dependent flags collection response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"dependent-flags"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"non7\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_site\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "81cdd609-c363-4943-bac7-b555d06f43ad",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"dependent-flags"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "47b749a8-9ce2-49ec-816f-40a0e5e7b94b",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"dependent-flags"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "e7c40a50-8afc-4482-92a3-fd4bbe8cc381",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"dependent-flags"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "09f3002d-68db-4759-9af0-d2e14008bbf9",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:featureFlagKey/dependent-flags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"flags",
														":projectKey",
														":featureFlagKey",
														"dependent-flags"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "66727cf4-1d71-4a8c-bfd9-d69b773f4cc6"
						},
						{
							"name": "List feature flags",
							"id": "27b4b224-a7fa-436e-9a54-3415b56bfb85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=false&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flags",
										":projectKey"
									],
									"query": [
										{
											"key": "env",
											"value": "ipsum incididunt consectetur velit",
											"description": "Filter configurations by environment"
										},
										{
											"key": "tag",
											"value": "ea et cillum",
											"description": "Filter feature flags by tag"
										},
										{
											"key": "limit",
											"value": "72458342",
											"description": "The number of feature flags to return. Defaults to -1, which returns all flags"
										},
										{
											"key": "offset",
											"value": "59072961",
											"description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
										},
										{
											"key": "archived",
											"value": "false",
											"description": "A boolean to filter the list to archived flags. When this is absent, only unarchived flags will be returned"
										},
										{
											"key": "summary",
											"value": "true",
											"description": "By default in API version >= 1, flags will _not_ include their list of prerequisites, targets or rules.  Set summary=0 to include these fields for each flag returned"
										},
										{
											"key": "filter",
											"value": "ea consequat",
											"description": "A comma-separated list of filters. Each filter is of the form field:value. Read the endpoint description for a full list of available filter fields."
										},
										{
											"key": "sort",
											"value": "cupidatat ex dolor",
											"description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order. Read the endpoint description for a full list of available sort fields."
										},
										{
											"key": "compare",
											"value": "true",
											"description": "A boolean to filter results by only flags that have differences between environments"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										}
									]
								},
								"description": "Get a list of all features in the given project. By default, each feature includes configurations for each environment. You can filter environments with the `env` query parameter. For example, setting `env=production` restricts the returned configurations to just your production environment. You can also filter feature flags by tag with the tag query parameter.\n\n### Filtering flags\n\nYou can filter on certain fields using the `filter` query parameter. For example, setting `filter=query:dark-mode,tags:beta+test` matches flags with the string `dark-mode` in their key or name, ignoring case, which also have the tags `beta` and `test`.\n\nThe `filter` query parameter supports the following arguments:\n\n- `query` is a string that matches against the flags' keys and names. It is not case sensitive.\n- `archived` is a boolean with values of `true` or `false` that filters the list to archived flags. Setting the value to `true` returns only archived flags. When this is absent, only unarchived flags are returned.\n- `type` is a string allowing filtering to `temporary` or `permanent` flags.\n- `status` is a string allowing filtering to `new`, `inactive`, `active`, or `launched` flags in the specified environment. This filter also requires a `filterEnv` field to be set to a valid environment. For example: `filter=status:active,filterEnv:production`.\n- `tags` is a `+` separated list of tags. It filters the list to members who have all of the tags in the list. For example: `filter=tags:beta+test`.\n- `hasExperiment` is a boolean with values of `true` or `false` that returns any flags that are used in an experiment.\n- `hasDataExport` is a boolean with values of `true` or `false` that returns any flags that are exporting data in the specified environment. This includes flags that are exporting data from Experimentation. This filter also requires that you set a `filterEnv` field to a valid environment key. For example: `filter=hasDataExport:true,filterEnv:production`\n- `evaluated` is an object that contains a key of `after` and a value in Unix time in milliseconds. This returns all flags that have been evaluated since the time you specify in the environment provided. This filter also requires you to set a `filterEnv` field to a valid environment. For example: `filter=evaluated:{\"after\": 1590768455282},filterEnv:production`.\n- `filterEnv` is a string with the key of a valid environment. You can use the `filterEnv` field for filters that are environment-specific. If there are multiple environment-specific filters, you should only declare this parameter once. For example: `filter=evaluated:{\"after\": 1590768455282},filterEnv:production,status:active`.\n\nBy default, this returns all flags. You can page through the list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the returned `_links` field. These links will not be present if the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page.\n\n### Sorting flags\n\nYou can sort flags based on the following fields:\n\n- `creationDate` sorts by the creation date of the flag.\n- `key` sorts by the key of the flag.\n- `maintainerId` sorts by the flag maintainer.\n- `name` sorts by flag name.\n- `tags` sorts by tags.\n- `targetingModifiedDate` sorts by the date that the flag's targeting rules were last modified in a given environment. It must be used with `env` parameter and it can not be combined with any other sort. If multiple `env` values are provided, it will perform sort using the first one. For example, `sort=-targetingModifiedDate&env=production&env=staging` returns results sorted by `targetingModifiedDate` for the `production` environment.\n- `type` sorts by flag type\n\nAll fields are sorted in ascending order by default. To sort in descending order, prefix the field with a dash ( - ). For example, `sort=-name` sorts the response by flag name in descending order.\n"
							},
							"response": [
								{
									"id": "33498a6a-77e3-4e8e-8ed2-0105a0f816ca",
									"name": "Global flags collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=true&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit"
												},
												{
													"key": "tag",
													"value": "ea et cillum"
												},
												{
													"key": "limit",
													"value": "72458342"
												},
												{
													"key": "offset",
													"value": "59072961"
												},
												{
													"key": "archived",
													"value": "true"
												},
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "ea consequat"
												},
												{
													"key": "sort",
													"value": "cupidatat ex dolor"
												},
												{
													"key": "compare",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/flags/default\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 1,\n  \"totalCountWithDifferences\": 0\n}"
								},
								{
									"id": "76a64253-2bb0-446b-8a69-a5a177383073",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=true&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit"
												},
												{
													"key": "tag",
													"value": "ea et cillum"
												},
												{
													"key": "limit",
													"value": "72458342"
												},
												{
													"key": "offset",
													"value": "59072961"
												},
												{
													"key": "archived",
													"value": "true"
												},
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "ea consequat"
												},
												{
													"key": "sort",
													"value": "cupidatat ex dolor"
												},
												{
													"key": "compare",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "9db7fda9-b9d4-4455-b6c6-2b89da62518f",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=true&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit"
												},
												{
													"key": "tag",
													"value": "ea et cillum"
												},
												{
													"key": "limit",
													"value": "72458342"
												},
												{
													"key": "offset",
													"value": "59072961"
												},
												{
													"key": "archived",
													"value": "true"
												},
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "ea consequat"
												},
												{
													"key": "sort",
													"value": "cupidatat ex dolor"
												},
												{
													"key": "compare",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "c38e3d94-9f88-44bb-aca7-011fa2e2459f",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=true&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit"
												},
												{
													"key": "tag",
													"value": "ea et cillum"
												},
												{
													"key": "limit",
													"value": "72458342"
												},
												{
													"key": "offset",
													"value": "59072961"
												},
												{
													"key": "archived",
													"value": "true"
												},
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "ea consequat"
												},
												{
													"key": "sort",
													"value": "cupidatat ex dolor"
												},
												{
													"key": "compare",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "3949793a-5c82-4f9e-8077-a600afc31b55",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=true&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit"
												},
												{
													"key": "tag",
													"value": "ea et cillum"
												},
												{
													"key": "limit",
													"value": "72458342"
												},
												{
													"key": "offset",
													"value": "59072961"
												},
												{
													"key": "archived",
													"value": "true"
												},
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "ea consequat"
												},
												{
													"key": "sort",
													"value": "cupidatat ex dolor"
												},
												{
													"key": "compare",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "a822f199-52ac-4482-8cb3-9bf6672d6036",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?env=ipsum incididunt consectetur velit&tag=ea et cillum&limit=72458342&offset=59072961&archived=true&summary=true&filter=ea consequat&sort=cupidatat ex dolor&compare=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "env",
													"value": "ipsum incididunt consectetur velit"
												},
												{
													"key": "tag",
													"value": "ea et cillum"
												},
												{
													"key": "limit",
													"value": "72458342"
												},
												{
													"key": "offset",
													"value": "59072961"
												},
												{
													"key": "archived",
													"value": "true"
												},
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "filter",
													"value": "ea consequat"
												},
												{
													"key": "sort",
													"value": "cupidatat ex dolor"
												},
												{
													"key": "compare",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create a feature flag",
							"id": "932ca2d5-e28f-46bd-bd75-e95bde39ca30",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientSideAvailability\": {\n    \"usingEnvironmentId\": true,\n    \"usingMobileKey\": true\n  },\n  \"key\": \"my-flag\",\n  \"name\": \"My Flag\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/flags/:projectKey?clone=sit reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flags",
										":projectKey"
									],
									"query": [
										{
											"key": "clone",
											"value": "sit reprehenderit",
											"description": "The key of the feature flag to be cloned. The key identifies the flag in your code. For example, setting `clone=flagKey` copies the full targeting configuration for all environments, including `on/off` state, from the original flag to the new flag."
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										}
									]
								},
								"description": "Create a feature flag with the given name, key, and variations."
							},
							"response": [
								{
									"id": "4cbf0ad5-f849-4b2b-afac-7f1a9838f087",
									"name": "Global flag response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientSideAvailability\": {\n    \"usingEnvironmentId\": true,\n    \"usingMobileKey\": true\n  },\n  \"key\": \"my-flag\",\n  \"name\": \"My Flag\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?clone=sit reprehenderit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "clone",
													"value": "sit reprehenderit"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"My Flag\",\n  \"kind\": \"boolean\",\n  \"key\": \"my-flag\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"variations\": [\n    {\n      \"_id\": \"e432f62b-55f6-49dd-a02f-eb24acf39d05\",\n      \"value\": true\n    },\n    {\n      \"_id\": \"a00bf58d-d252-476c-b915-15a74becacb4\",\n      \"value\": false\n    }\n  ],\n  \"temporary\": true,\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flags/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flags/my-project/my-flag\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customProperties\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archived\": false,\n  \"environments\": {\n    \"my-environment\": {\n      \"_environmentName\": \"My Environment\",\n      \"_site\": {\n        \"href\": \"/default/my-environment/features/client-side-flag\",\n        \"type\": \"text/html\"\n      },\n      \"_summary\": {\n        \"prerequisites\": 0,\n        \"variations\": {\n          \"0\": {\n            \"isFallthrough\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          },\n          \"1\": {\n            \"isOff\": true,\n            \"nullRules\": 0,\n            \"rules\": 0,\n            \"targets\": 0\n          }\n        }\n      },\n      \"archived\": false,\n      \"fallthrough\": {\n        \"variation\": 0\n      },\n      \"lastModified\": 1627071171347,\n      \"offVariation\": 1,\n      \"on\": false,\n      \"prerequisites\": [],\n      \"rules\": [],\n      \"salt\": \"61eddeadbeef4da1facecafe3a60a397\",\n      \"sel\": \"810edeadbeef4844facecafe438f2999492\",\n      \"targets\": [],\n      \"trackEvents\": false,\n      \"trackEventsFallthrough\": false,\n      \"version\": 1\n    }\n  },\n  \"description\": \"This flag controls the example widgets\",\n  \"includeInSnippet\": true,\n  \"clientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569f183514f4432160000007\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerTeamKey\": \"team-1\",\n  \"_maintainerTeam\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"defaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "b1a395b0-de64-4ef5-8879-f5ba421939dc",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientSideAvailability\": {\n    \"usingEnvironmentId\": true,\n    \"usingMobileKey\": true\n  },\n  \"key\": \"my-flag\",\n  \"name\": \"My Flag\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?clone=sit reprehenderit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "clone",
													"value": "sit reprehenderit"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "581d717d-a625-4a06-824f-20b1a2cc1061",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientSideAvailability\": {\n    \"usingEnvironmentId\": true,\n    \"usingMobileKey\": true\n  },\n  \"key\": \"my-flag\",\n  \"name\": \"My Flag\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?clone=sit reprehenderit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "clone",
													"value": "sit reprehenderit"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "1f486f4c-f680-4aff-8762-b56f8516ea78",
									"name": "Status conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientSideAvailability\": {\n    \"usingEnvironmentId\": true,\n    \"usingMobileKey\": true\n  },\n  \"key\": \"my-flag\",\n  \"name\": \"My Flag\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?clone=sit reprehenderit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "clone",
													"value": "sit reprehenderit"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "4a937cb3-a622-4258-ba6a-44b91455187b",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientSideAvailability\": {\n    \"usingEnvironmentId\": true,\n    \"usingMobileKey\": true\n  },\n  \"key\": \"my-flag\",\n  \"name\": \"My Flag\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey?clone=sit reprehenderit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey"
											],
											"query": [
												{
													"key": "clone",
													"value": "sit reprehenderit"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "List dependent feature flags by environment",
							"id": "c24f5ebf-10eb-4799-a14a-35e860b842c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flags",
										":projectKey",
										":environmentKey",
										":featureFlagKey",
										"dependent-flags"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								},
								"description": "> ### Flag prerequisites is an Enterprise feature\n>\n> Flag prerequisites is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nList dependent flags across all environments for the flag specified in the path parameters. A dependent flag is a flag that uses another flag as a prerequisite. To learn more, read [Flag prerequisites](https://docs.launchdarkly.com/home/flags/prerequisites).\n"
							},
							"response": [
								{
									"id": "67c1a3cc-2a28-42e5-9db1-b50bff1a8cee",
									"name": "Dependent flags collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":environmentKey",
												":featureFlagKey",
												"dependent-flags"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"nulla_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ut4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"elit_a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_site\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "016af804-78a9-443a-88c3-81e6fc04c112",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":environmentKey",
												":featureFlagKey",
												"dependent-flags"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "ed402563-6541-4ce4-ab70-7b334db8b68c",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":environmentKey",
												":featureFlagKey",
												"dependent-flags"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "a699be5b-81d8-404c-83f0-e5176458b5f6",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":environmentKey",
												":featureFlagKey",
												"dependent-flags"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "c10b22a1-4b19-48db-a0ff-67377080a36c",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/flags/:projectKey/:environmentKey/:featureFlagKey/dependent-flags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"flags",
												":projectKey",
												":environmentKey",
												":featureFlagKey",
												"dependent-flags"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "b1248576-efdf-4d07-9de7-946b0e9f1c4c"
				},
				{
					"name": "integration-capabilities/featureStore",
					"item": [
						{
							"name": "{projectKey}/{environmentKey}",
							"item": [
								{
									"name": "{integrationKey}",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Get delivery configuration by ID",
													"id": "a973d1ac-eadf-4903-946c-39ac61f6363d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																},
																{
																	"key": "id",
																	"value": "Duis ut qui reprehenderit irure",
																	"description": "(Required) The configuration ID"
																}
															]
														},
														"description": "Get delivery configuration by ID."
													},
													"response": [
														{
															"id": "48f98c6a-bcc7-4e1d-b51c-95a2260672a5",
															"name": "Integration delivery configuration response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_id\": \"12ab3c4d5ef1a2345bcde67f\",\n  \"integrationKey\": \"example-integration-key\",\n  \"projectKey\": \"default\",\n  \"environmentKey\": \"development\",\n  \"config\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"on\": true,\n  \"tags\": [],\n  \"name\": \"Development environment configuration\",\n  \"version\": 1,\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "4a2ec7e5-0538-4400-a524-16b7344c54bc",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "d7778c10-16c2-4c1a-8bff-ec39a2b8ed95",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Update delivery configuration",
													"id": "2da4285f-5727-442f-bc4f-0b5ce7402f3e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																},
																{
																	"key": "id",
																	"value": "Duis ut qui reprehenderit irure",
																	"description": "(Required) The configuration ID"
																}
															]
														},
														"description": "Update an integration delivery configuration."
													},
													"response": [
														{
															"id": "9ac32f73-853c-4faf-8c5f-90f69eacb5ca",
															"name": "Integration delivery configuration response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_id\": \"12ab3c4d5ef1a2345bcde67f\",\n  \"integrationKey\": \"example-integration-key\",\n  \"projectKey\": \"default\",\n  \"environmentKey\": \"development\",\n  \"config\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"on\": true,\n  \"tags\": [],\n  \"name\": \"Development environment configuration\",\n  \"version\": 1,\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "2869d50a-c3cc-443e-98de-5266e4345904",
															"name": "Invalid request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "14a28341-c8c3-4509-ac27-4728597d952c",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "877267da-3495-49f8-81a9-765fedb4c2df",
															"name": "Forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "17014d1b-f686-4b37-8a4e-485ea7331d3c",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "1b2720a4-0f22-48ae-b61c-76794ba860ee",
															"name": "Invalid patch content",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"patch_failed\",\n  \"message\": \"Unprocessable entity. Could not apply patch.\"\n}"
														},
														{
															"id": "50ff5fba-06d3-4d1d-9868-16f6e3997b7f",
															"name": "Rate limited",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Delete delivery configuration",
													"id": "2e663d83-2c2f-4a77-817b-cbbc99228ab8",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey",
																":id"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																},
																{
																	"key": "id",
																	"value": "Duis ut qui reprehenderit irure",
																	"description": "(Required) The configuration ID"
																}
															]
														},
														"description": "Delete a delivery configuration."
													},
													"response": [
														{
															"id": "17e901ec-3ffe-4a8e-bbd2-8deb23b7e0d5",
															"name": "Action succeeded",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "57e67360-4699-4d80-a53f-ff7eeaa9e1be",
															"name": "Invalid request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "9cb0ed7d-38f5-4bf5-b201-142d6e46a3bd",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "6d42e10c-7fdd-47e4-baae-ac5bb6623877",
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "e87e44bc-47f4-459f-a421-8d88bea02e78",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "9dd4e986-5af3-4806-9855-f239927a9a11",
															"name": "Rate limited",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Validate delivery configuration",
													"id": "fdaa6839-db94-49b3-abb1-af8bd9bb4295",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey",
																":id",
																"validate"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																},
																{
																	"key": "id",
																	"value": "Duis ut qui reprehenderit irure",
																	"description": "(Required) The configuration ID"
																}
															]
														},
														"description": "Validate the saved delivery configuration, using the `validationRequest` in the integration's `manifest.json` file."
													},
													"response": [
														{
															"id": "47df65e2-8b5f-434e-b89b-ddbd87b3f469",
															"name": "Integration delivery configuration validation response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"statusCode\": 200,\n  \"error\": \"ad labore\",\n  \"timestamp\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"responseBody\": \"eu in commodo magna\"\n}"
														},
														{
															"id": "ee9f0c9e-c912-4388-9c34-e61d5b837b5c",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "f440f5fa-0d84-4e12-b22b-ff10f97f97bb",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "ae5495c5-1f81-445a-9424-2390acfa5565",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "90bd94d4-4a64-42e0-a38d-c87d642e45f8",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "00ad44df-678c-48d0-b24a-d1a67f0c69c1",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey/:id/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"integration-capabilities",
																		"featureStore",
																		":projectKey",
																		":environmentKey",
																		":integrationKey",
																		":id",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "integrationKey",
																			"value": "dolor Excepteur",
																			"description": "(Required) The integration key"
																		},
																		{
																			"key": "id",
																			"value": "Duis ut qui reprehenderit irure",
																			"description": "(Required) The configuration ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "9521adee-9e74-4d44-9727-b573944fae14"
										},
										{
											"name": "Create delivery configuration",
											"id": "6457d02e-c188-4791-95d7-082af32ff733",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integration-capabilities",
														"featureStore",
														":projectKey",
														":environmentKey",
														":integrationKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														}
													]
												},
												"description": "Create a delivery configuration."
											},
											"response": [
												{
													"id": "67c9232f-ac07-4bba-804c-2770f96835b6",
													"name": "Integration delivery configuration response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_links\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_id\": \"12ab3c4d5ef1a2345bcde67f\",\n  \"integrationKey\": \"example-integration-key\",\n  \"projectKey\": \"default\",\n  \"environmentKey\": \"development\",\n  \"config\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"on\": true,\n  \"tags\": [],\n  \"name\": \"Development environment configuration\",\n  \"version\": 1,\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "ba047379-83ae-4e70-b720-b6550994ca3c",
													"name": "Invalid request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "7f95b8fa-8897-4067-818a-d2d8477d6cb4",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "7be808b9-f6f5-4360-bd55-16a12106c264",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "d9497a30-56f0-4b22-a81c-d14b0c9207db",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "29c5c851-9560-4a5f-b049-7392db421543",
													"name": "Rate limited",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"config\": {\n    \"optional\": \"example value for optional formVariables property for sample-integration\",\n    \"required\": \"example value for required formVariables property for sample-integration\"\n  },\n  \"name\": \"Sample integration\",\n  \"on\": false,\n  \"tags\": [\n    \"example-tag\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey/:integrationKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"integration-capabilities",
																"featureStore",
																":projectKey",
																":environmentKey",
																":integrationKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "integrationKey",
																	"value": "dolor Excepteur",
																	"description": "(Required) The integration key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "2704d9e7-afe7-4ea2-9c06-d6f5f41298ee"
								},
								{
									"name": "Get delivery configurations by environment",
									"id": "f9842003-b9e5-42e4-856c-495e56acf372",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integration-capabilities",
												"featureStore",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "Get delivery configurations by environment."
									},
									"response": [
										{
											"id": "1072b03a-821c-44f9-be06-5d6279e7377a",
											"name": "Integration delivery configuration collection response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integration-capabilities",
														"featureStore",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "93a1861a-260b-4818-826d-ac928a2c57ae",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integration-capabilities",
														"featureStore",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "53e808b9-ed92-4003-b1d4-fd1a2f7fcae8",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integration-capabilities",
														"featureStore",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "83122ee8-6e51-4e8f-af7e-525b664573b0",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integration-capabilities",
														"featureStore",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "c4de6681-814b-498d-b816-d11c7391a03b",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integration-capabilities",
														"featureStore",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "c6056615-655f-4d2d-a8c8-494e6b58bf33"
						},
						{
							"name": "List all delivery configurations",
							"id": "686f3c5a-e505-41a7-88b8-602755512d1a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integration-capabilities",
										"featureStore"
									]
								},
								"description": "List all delivery configurations."
							},
							"response": [
								{
									"id": "15c1c0dd-794b-48b3-afd5-2d0489adead2",
									"name": "Integration delivery configuration collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integration-capabilities",
												"featureStore"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "752074db-0b90-4645-9cd9-67069b90f90c",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integration-capabilities",
												"featureStore"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "be2aafac-78cb-47e4-b77c-5f5d80cf698b",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integration-capabilities",
												"featureStore"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "752289d6-4a4a-4abc-b890-e2a1428969ba",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integration-capabilities",
												"featureStore"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "2f0ed863-69f7-4c27-a953-57322383a19b",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integration-capabilities/featureStore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integration-capabilities",
												"featureStore"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "251b1e72-496e-4696-aa07-1e5a670e8218"
				},
				{
					"name": "integrations/{integrationKey}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get audit log subscription by ID",
									"id": "79eb3474-6c2e-4a38-a377-e551cad6e8a2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey",
												":id"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												},
												{
													"key": "id",
													"value": "id adipisicing laboris consequat nisi",
													"description": "(Required) The subscription ID"
												}
											]
										},
										"description": "Get an audit log subscription by ID."
									},
									"response": [
										{
											"id": "ed299e5f-42c1-4d3a-8216-21c3b6c538fe",
											"name": "Integration response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"cupidatat_a_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"kind\": \"datadog\",\n  \"name\": \"Example Datadog integration\",\n  \"config\": {\n    \"magna_83\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exercitation_5e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"statements\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"on\": true,\n  \"tags\": [\n    \"testing\"\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"url\": \"ut\",\n  \"apiKey\": \"eiusmod id do ut\"\n}"
										},
										{
											"id": "c1cb1390-3122-4bc4-8814-5b06e49489e7",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "f813c746-c6ce-449e-ae4b-e866482366b1",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "f7938e85-61f0-469a-8b64-0ab28daa71ec",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "1b89d5d4-c953-4a31-bbfc-146b791b3709",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update audit log subscription",
									"id": "a032038a-c0d7-4dc6-892f-bd63730f1ae8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey",
												":id"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												},
												{
													"key": "id",
													"value": "voluptate Lorem",
													"description": "(Required) The ID of the audit log subscription"
												}
											]
										},
										"description": "Update an audit log subscription configuration. Requires a [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes to the audit log subscription."
									},
									"response": [
										{
											"id": "c8290125-a933-4de2-908d-8e8bb1edd26e",
											"name": "Integration response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "voluptate Lorem",
															"description": "(Required) The ID of the audit log subscription"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"cupidatat_a_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"kind\": \"datadog\",\n  \"name\": \"Example Datadog integration\",\n  \"config\": {\n    \"magna_83\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"exercitation_5e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"statements\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"on\": true,\n  \"tags\": [\n    \"testing\"\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"url\": \"ut\",\n  \"apiKey\": \"eiusmod id do ut\"\n}"
										},
										{
											"id": "9179a0b1-23df-43ed-b5bf-31cfbede897b",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "voluptate Lorem",
															"description": "(Required) The ID of the audit log subscription"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "e567d31c-0176-4ad8-8dc8-ca7799ecff99",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "voluptate Lorem",
															"description": "(Required) The ID of the audit log subscription"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "7be18064-c762-4572-af21-e0d7687e8544",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "voluptate Lorem",
															"description": "(Required) The ID of the audit log subscription"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "39875e66-dfe5-491f-b011-4ec45b12428e",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "voluptate Lorem",
															"description": "(Required) The ID of the audit log subscription"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "710d1999-8f6e-4834-8f99-8c96660f1ca3",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "voluptate Lorem",
															"description": "(Required) The ID of the audit log subscription"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete audit log subscription",
									"id": "fd55ffcc-2f9b-4183-a5c4-3f9d08523ab4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey",
												":id"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												},
												{
													"key": "id",
													"value": "id adipisicing laboris consequat nisi",
													"description": "(Required) The subscription ID"
												}
											]
										},
										"description": "Delete an audit log subscription."
									},
									"response": [
										{
											"id": "ba93c601-1a3f-4289-a8de-323075892627",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "753e6adf-be43-4408-b305-44a113af939c",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "075ff54e-6ba9-4bdc-ae34-1960e1c855e4",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "ba8b05e3-6b93-449a-945f-118a92727eed",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "b7fb50a9-0aff-42d3-879e-1881b4c683b2",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"integrations",
														":integrationKey",
														":id"
													],
													"variable": [
														{
															"key": "integrationKey",
															"value": "dolor Excepteur",
															"description": "(Required) The integration key"
														},
														{
															"key": "id",
															"value": "id adipisicing laboris consequat nisi",
															"description": "(Required) The subscription ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "0c54c32d-a783-461c-885a-b9fc551253d9"
						},
						{
							"name": "Get audit log subscriptions by integration",
							"id": "92674cf3-5052-49fd-b89a-25f1d8c0c3af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										":integrationKey"
									],
									"variable": [
										{
											"key": "integrationKey",
											"value": "dolor Excepteur",
											"description": "(Required) The integration key"
										}
									]
								},
								"description": "Get all audit log subscriptions associated with a given integration."
							},
							"response": [
								{
									"id": "18cfaba5-d5c3-4a06-850a-e2ee95724b26",
									"name": "Integrations collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"laborum_15\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mollit_19\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"key\": \"cupidatat incididunt\"\n}"
								},
								{
									"id": "3984b2c3-c7d5-487b-acc8-c036c406e4ed",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "287d3699-6610-4e47-811f-de03af9a1a84",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "8b539447-e176-4d2c-b663-a1e25a6a7d26",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "43d5be77-984c-4605-9120-5dbea125d298",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create audit log subscription",
							"id": "c43ce224-adb9-4549-b0f2-cc2408839ccc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"integrations",
										":integrationKey"
									],
									"variable": [
										{
											"key": "integrationKey",
											"value": "dolor Excepteur",
											"description": "(Required) The integration key"
										}
									]
								},
								"description": "Create an audit log subscription.<br /><br />For each subscription, you must specify the set of resources you wish to subscribe to audit log notifications for. You can describe these resources using a custom role policy. To learn more, read [Custom role concepts](https://docs.launchdarkly.com/home/members/role-concepts)."
							},
							"response": [
								{
									"id": "43549c66-6ae5-45e2-942a-59a4394d0d85",
									"name": "Integration response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"et00a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"kind\": \"datadog\",\n  \"name\": \"Example Datadog integration\",\n  \"config\": {\n    \"cillum39\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"statements\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"on\": true,\n  \"tags\": [\n    \"testing\"\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_status\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"url\": \"occaecat\",\n  \"apiKey\": \"nostrud qui aute\"\n}"
								},
								{
									"id": "40ba6429-802e-4885-82d6-b86a7685449e",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "8466a4ee-0235-4ce1-bae3-095eb3dd4f63",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "2b0f7f90-4c29-4a8e-8d19-92a276de8bd7",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "a66e7f6d-7ebf-4e0d-b27e-2c75fb02b16c",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "2fbeb56a-4cb6-46cb-8fbd-887219677672",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"optional\": \"an optional property\",\n    \"required\": \"the required property\",\n    \"url\": \"https://example.com\"\n  },\n  \"name\": \"Example audit log subscription.\",\n  \"on\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/*:flag/*;testing-tag\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"testing-tag\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/integrations/:integrationKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"integrations",
												":integrationKey"
											],
											"variable": [
												{
													"key": "integrationKey",
													"value": "dolor Excepteur",
													"description": "(Required) The integration key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "a6d82c16-6fb8-4f05-af8b-6b3f91b621d8"
				},
				{
					"name": "members",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get account member",
									"id": "17b2a40e-4b11-4db0-8c34-80a499c93982",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in fugiat",
													"description": "(Required) The member ID"
												}
											]
										},
										"description": "Get a single account member by member ID.\n\n`me` is a reserved value for the `id` parameter that returns the caller's member information.\n"
									},
									"response": [
										{
											"id": "7463dd35-43dc-4b39-8ef1-7b47341bec87",
											"name": "Member response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"et_60\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"inb1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"507f1f77bcf86cd799439011\",\n  \"role\": \"reader\",\n  \"email\": \"bob@loblaw.com\",\n  \"_pendingInvite\": false,\n  \"_verified\": true,\n  \"customRoles\": [\n    \"devOps\",\n    \"backend-devs\"\n  ],\n  \"mfa\": \"sint nulla ullamco esse\",\n  \"_lastSeen\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Loblaw\",\n  \"_pendingEmail\": \"aliquip exerc\",\n  \"excludedDashboards\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_lastSeenMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"teams\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"permissionGrants\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"oauthProviders\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "cd625771-3834-46c1-b72f-77b87681440c",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "931bda46-06c1-4151-a741-aed8942a98ae",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "e9b51fb8-e4c8-41c0-a989-531ee6fdbfac",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "fff381b6-9c2b-4612-8d92-6fc37284b10c",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Modify an account member",
									"id": "6e1d4b5a-faf8-43d9-874d-7416d7887b8f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in fugiat",
													"description": "(Required) The member ID"
												}
											]
										},
										"description": "\nUpdate a single account member. The request should be a valid JSON Patch document describing the changes to be made to the member.\n\nTo update fields in the account member object that are arrays, set the `path` to the name of the field and then append `/<array index>`. Using `/0` appends to the beginning of the array. For example, to add a new custom role to a member, use the following request body:\n\n```\n  [\n    {\n      \"op\": \"add\",\n      \"path\": \"/customRoles/0\",\n      \"value\": \"some-role-id\"\n    }\n  ]\n```\n\nWhen SAML SSO or SCIM is enabled for the account, account members are managed in the Identity Provider (IdP). Requests to update account members will succeed, but the IdP will override the update shortly afterwards.\n"
									},
									"response": [
										{
											"id": "e2543d28-23b7-4725-b5d5-4ea85fa41b93",
											"name": "Member response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"sint7\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolor4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"507f1f77bcf86cd799439011\",\n  \"role\": \"reader\",\n  \"email\": \"bob@loblaw.com\",\n  \"_pendingInvite\": false,\n  \"_verified\": true,\n  \"customRoles\": [\n    \"devOps\",\n    \"backend-devs\"\n  ],\n  \"mfa\": \"pariatur sit ut in\",\n  \"_lastSeen\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Loblaw\",\n  \"_pendingEmail\": \"labore exercitation \",\n  \"excludedDashboards\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_lastSeenMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"teams\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"permissionGrants\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"oauthProviders\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "4f24e4e0-65b1-494b-ac25-d114b74bab12",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "22fcfe86-54e0-452f-9965-c7b52e763056",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "43bb4931-3114-4294-b761-da78486d1b8f",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "0c17be8d-46e9-4b3c-9ab5-f5ca360994df",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "6e916bd7-894d-4b37-803a-ff51a134b5a6",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "e553d7cb-5e63-4018-a535-600fd6d73880",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete account member",
									"id": "ae2ae994-b05f-465a-9275-aa30678c67ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in fugiat",
													"description": "(Required) The member ID"
												}
											]
										},
										"description": "Delete a single account member by ID. Requests to delete account members will not work if SCIM is enabled for the account."
									},
									"response": [
										{
											"id": "743726bc-f8aa-4f96-aa7f-eade59944e13",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "a7160e9d-160d-405a-8a6d-ab7ab77d27fb",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "3fd962f4-e143-4c71-99e5-a12ef4f4d765",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "293758c4-22ef-414a-aedb-64d3a9ebf557",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "5f1ba6ff-a1f2-4251-91a2-3a1b4acca7b9",
											"name": "Status conflict",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "9f3f797e-f819-406a-b2cd-578e691b3d9f",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Add a member to teams",
									"id": "e38f5e79-7637-4964-8e87-c1ed9f761f8d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members/:id/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members",
												":id",
												"teams"
											],
											"variable": [
												{
													"key": "id",
													"value": "in fugiat",
													"description": "(Required) The member ID"
												}
											]
										},
										"description": "Add one member to one or more teams."
									},
									"response": [
										{
											"id": "46e87027-b10a-402b-81df-a734e80aba3d",
											"name": "Member response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id",
														"teams"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"sint7\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"non_0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolor4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"507f1f77bcf86cd799439011\",\n  \"role\": \"reader\",\n  \"email\": \"bob@loblaw.com\",\n  \"_pendingInvite\": false,\n  \"_verified\": true,\n  \"customRoles\": [\n    \"devOps\",\n    \"backend-devs\"\n  ],\n  \"mfa\": \"pariatur sit ut in\",\n  \"_lastSeen\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Loblaw\",\n  \"_pendingEmail\": \"labore exercitation \",\n  \"excludedDashboards\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_lastSeenMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"teams\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"permissionGrants\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"oauthProviders\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "5d21ff78-794a-4b0f-979d-d44f823e6542",
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id",
														"teams"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "3713d638-eb10-4c1e-a769-730418df4ddf",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id",
														"teams"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "253c8cae-ef4c-48b2-bca5-f3edffa58945",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id",
														"teams"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "c7e58246-0749-41f5-8835-3c837328b6d5",
											"name": "Status conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id",
														"teams"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "7fb642e3-baec-4a8e-b53a-52779e5d0957",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"teamKeys\": [\n    \"team1\",\n    \"team2\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/members/:id/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"members",
														":id",
														"teams"
													],
													"variable": [
														{
															"key": "id",
															"value": "in fugiat",
															"description": "(Required) The member ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "3e1c1771-25cc-4269-b275-39a768986804"
						},
						{
							"name": "List account members",
							"id": "c06f1c7d-7e35-4c9f-a1ef-28ebaa80153c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/members?limit=10247426&offset=56195558&filter=laboris veniam&sort=cupidatat Duis commodo officia",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"members"
									],
									"query": [
										{
											"key": "limit",
											"value": "10247426",
											"description": "The number of members to return in the response. Defaults to 20."
										},
										{
											"key": "offset",
											"value": "56195558",
											"description": "Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
										},
										{
											"key": "filter",
											"value": "laboris veniam",
											"description": "A comma-separated list of filters. Each filter is of the form `field:value`. Supported fields are explained above."
										},
										{
											"key": "sort",
											"value": "cupidatat Duis commodo officia",
											"description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order."
										}
									]
								},
								"description": "Return a list of account members.\n\nBy default, this returns the first 20 members. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the returned `_links` field. These links are not present if the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page.\n\n### Filtering members\n\nLaunchDarkly supports the following fields for filters:\n\n- `query` is a string that matches against the members' emails and names. It is not case sensitive.\n- `role` is a `|` separated list of roles and custom roles. It filters the list to members who have any of the roles in the list. For the purposes of this filtering, `Owner` counts as `Admin`.\n- `team` is a string that matches against the key of the teams the members belong to. It is not case sensitive.\n- `noteam` is a boolean that filters the list of members who are not on a team if true and members on a team if false.\n- `lastSeen` is a JSON object in one of the following formats:\n  - `{\"never\": true}` - Members that have never been active, such as those who have not accepted their invitation to LaunchDarkly, or have not logged in after being provisioned via SCIM.\n  - `{\"noData\": true}` - Members that have not been active since LaunchDarkly began recording last seen timestamps.\n  - `{\"before\": 1608672063611}` - Members that have not been active since the provided value, which should be a timestamp in Unix epoch milliseconds.\n- `accessCheck` is a string that represents a specific action on a specific resource and is in the format `<ActionSpecifier>:<ResourceSpecifier>`. It filters the list to members who have the ability to perform that action on that resource. \n  - For example, the filter `accessCheck:createApprovalRequest:proj/default:env/test:flag/alternate-page` matches members with the ability to create an approval request for the `alternate-page` flag in the `test` environment of the `default` project.\n  - Wildcard and tag filters are not supported when filtering for access.\n\nFor example, the filter `query:abc,role:admin|customrole` matches members with the string `abc` in their email or name, ignoring case, who also are either an `Owner` or `Admin` or have the custom role `customrole`.\n\n### Sorting members\n\nLaunchDarkly supports two fields for sorting: `displayName` and `lastSeen`:\n\n- `displayName` sorts by first + last name, using the member's email if no name is set.\n- `lastSeen` sorts by the `_lastSeen` property. LaunchDarkly considers members that have never been seen or have no data the oldest.\n"
							},
							"response": [
								{
									"id": "4370588d-fd20-41d6-a106-6b874778f1f1",
									"name": "Members collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members?limit=10247426&offset=56195558&filter=laboris veniam&sort=cupidatat Duis commodo officia",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											],
											"query": [
												{
													"key": "limit",
													"value": "10247426"
												},
												{
													"key": "offset",
													"value": "56195558"
												},
												{
													"key": "filter",
													"value": "laboris veniam"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"dolored_0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolore0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalCount\": 42957396\n}"
								},
								{
									"id": "5b0247b3-6236-4cf1-aa5c-9453a12ccf8f",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members?limit=10247426&offset=56195558&filter=laboris veniam&sort=cupidatat Duis commodo officia",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											],
											"query": [
												{
													"key": "limit",
													"value": "10247426"
												},
												{
													"key": "offset",
													"value": "56195558"
												},
												{
													"key": "filter",
													"value": "laboris veniam"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "748b3a9b-9248-45a4-97a6-4a7ddff45d11",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members?limit=10247426&offset=56195558&filter=laboris veniam&sort=cupidatat Duis commodo officia",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											],
											"query": [
												{
													"key": "limit",
													"value": "10247426"
												},
												{
													"key": "offset",
													"value": "56195558"
												},
												{
													"key": "filter",
													"value": "laboris veniam"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "5a33ff6f-2c02-4b57-bb19-a59c56cfb5cc",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members?limit=10247426&offset=56195558&filter=laboris veniam&sort=cupidatat Duis commodo officia",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											],
											"query": [
												{
													"key": "limit",
													"value": "10247426"
												},
												{
													"key": "offset",
													"value": "56195558"
												},
												{
													"key": "filter",
													"value": "laboris veniam"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "9537a2be-12e4-4fd2-82ad-5572b6991af6",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/members?limit=10247426&offset=56195558&filter=laboris veniam&sort=cupidatat Duis commodo officia",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											],
											"query": [
												{
													"key": "limit",
													"value": "10247426"
												},
												{
													"key": "offset",
													"value": "56195558"
												},
												{
													"key": "filter",
													"value": "laboris veniam"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Invite new members",
							"id": "2e63860c-ad96-443f-98d6-573604aee34c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"members"
									]
								},
								"description": "> ### Full use of this API resource is an Enterprise feature\n>\n> The ability to bulk invite members is available to customers on an Enterprise plan. If you are on a Pro plan, you can invite members individually. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nInvite one or more new members to join an account. Each member is sent an invitation. Members with \"admin\" or \"owner\" roles may create new members, as well as anyone with a \"createMember\" permission for \"member/\\*\". If a member cannot be invited, the entire request is rejected and no members are invited from that request.\n\nEach member _must_ have an `email` field and either a `role` or a `customRoles` field. If any of the fields are not populated correctly, the request is rejected with the reason specified in the \"message\" field of the response.\n\nRequests to create account members will not work if SCIM is enabled for the account.\n\n_No more than 50 members may be created per request._\n\nA request may also fail because of conflicts with existing members. These conflicts are reported using the additional `code` and `invalid_emails` response fields with the following possible values for `code`:\n\n- **email_already_exists_in_account**: A member with this email address already exists in this account.\n- **email_taken_in_different_account**: A member with this email address exists in another account.\n- **duplicate_email**s: This request contains two or more members with the same email address.\n\nA request that fails for one of the above reasons returns an HTTP response code of 400 (Bad Request).\n"
							},
							"response": [
								{
									"id": "74a32aaa-13ff-4d54-9960-13e4df69287a",
									"name": "Member collection response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"quisa3\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"in97f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalCount\": -32324770\n}"
								},
								{
									"id": "3c061660-e1b7-4d5a-a570-5798c8902201",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "c29a77bc-fe8e-410d-b601-1c13cc8c0c81",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "0aeba95a-afe0-4ed5-a7c9-0117ecc95b0e",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "3e94caf0-0e7c-41fe-82cd-42c522994ed5",
									"name": "Status conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "da9f10ae-4946-4f64-a821-16ed663a492c",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Modify account members",
							"id": "d229bc9b-3414-4e04-9927-bc52e700ebed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/members",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"members"
									]
								},
								"description": "Perform a partial update to multiple members. Updating members uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating members.\n\n#### replaceMembersRoles\n\nReplaces the roles of the specified members. This also removes all custom roles assigned to the specified members.\n\n##### Parameters\n\n- `value`: The new role. Must be a valid built-in role. To learn more about built-in roles, read [LaunchDarkly's built-in roles](https://docs.launchdarkly.com/home/members/built-in-roles).\n- `memberIDs`: List of member IDs.\n\n#### replaceAllMembersRoles\n\nReplaces the roles of all members. This also removes all custom roles assigned to the specified members.\n\nMembers that match any of the filters are excluded from the update.\n\n##### Parameters\n\n- `value`: The new role. Must be a valid built-in role. To learn more about built-in roles, read [LaunchDarkly's built-in roles](https://docs.launchdarkly.com/home/members/built-in-roles).\n- `filterLastSeen`: (Optional) A JSON object with one of the following formats:\n  - `{\"never\": true}` - Members that have never been active, such as those who have not accepted their invitation to LaunchDarkly, or have not logged in after being provisioned via SCIM.\n  - `{\"noData\": true}` - Members that have not been active since LaunchDarkly began recording last seen timestamps.\n  - `{\"before\": 1608672063611}` - Members that have not been active since the provided value, which should be a timestamp in Unix epoch milliseconds.\n- `filterQuery`: (Optional) A string that matches against the members' emails and names. It is not case sensitive.\n- `filterRoles`: (Optional) A `|` separated list of roles and custom roles. For the purposes of this filtering, `Owner` counts as `Admin`.\n- `filterTeamKey`: (Optional) A string that matches against the key of the team the members belong to. It is not case sensitive.\n- `ignoredMemberIDs`: (Optional) A list of member IDs.\n\n#### replaceMembersCustomRoles\n\nReplaces the custom roles of the specified members.\n\n##### Parameters\n\n- `values`: List of new custom roles. Must be a valid custom role key or ID.\n- `memberIDs`: List of member IDs.\n\n#### replaceAllMembersCustomRoles\n\nReplaces the custom roles of all members. Members that match any of the filters are excluded from the update.\n\n##### Parameters\n\n- `values`: List of new roles. Must be a valid custom role key or ID.\n- `filterLastSeen`: (Optional) A JSON object with one of the following formats:\n  - `{\"never\": true}` - Members that have never been active, such as those who have not accepted their invitation to LaunchDarkly, or have not logged in after being provisioned via SCIM.\n  - `{\"noData\": true}` - Members that have not been active since LaunchDarkly began recording last seen timestamps.\n  - `{\"before\": 1608672063611}` - Members that have not been active since the provided value, which should be a timestamp in Unix epoch milliseconds.\n- `filterQuery`: (Optional) A string that matches against the members' emails and names. It is not case sensitive.\n- `filterRoles`: (Optional) A `|` separated list of roles and custom roles. For the purposes of this filtering, `Owner` counts as `Admin`.\n- `filterTeamKey`: (Optional) A string that matches against the key of the team the members belong to. It is not case sensitive.\n- `ignoredMemberIDs`: (Optional) A list of member IDs.\n"
							},
							"response": [
								{
									"id": "2d0bcc5b-7cad-4833-98b5-9ddfa3b115a8",
									"name": "Members response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"members\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"errors\": [\n    {\n      \"507f1f77bcf86cd799439011\": \"you cannot modify your own role\"\n    }\n  ]\n}"
								},
								{
									"id": "dc6e8e80-c4f7-4a60-8819-b779f3b7e08c",
									"name": "Invalid request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "b0e742bc-522d-4353-9927-251a28618305",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "d451626f-8520-4484-a589-d5155a5fbeac",
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "cae4f5f9-915a-4fa5-ba51-3eb8c29c507d",
									"name": "Status conflict",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "2dfcbd76-d521-452b-82a4-286abe9b2391",
									"name": "Rate limited",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceMembersRoles\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\",\n        \"507f1f77bcf86cd799439011\"\n      ],\n      \"value\": \"reader\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"members"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "be961df0-ef4b-4808-8d63-2bf76df045e6"
				},
				{
					"name": "metrics/{projectKey}",
					"item": [
						{
							"name": "{metricKey}",
							"item": [
								{
									"name": "Get metric",
									"id": "501c1455-b471-4071-a712-368157cf0beb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey?expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey",
												":metricKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore",
													"description": "A comma-separated list of properties that can reveal additional information in the response."
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "metricKey",
													"value": "nostrud sunt cupidatat dolore qui",
													"description": "(Required) The metric key"
												}
											]
										},
										"description": "Get information for a single metric from the specific project.\n\n### Expanding the metric response\nLaunchDarkly supports two fields for expanding the \"Get metric\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n- `experiments` includes all experiments from the specific project that use the metric\n- `experimentCount` includes the number of experiments from the specific project that use the metric\n\nFor example, `expand=experiments` includes the `experiments` field in the response.\n"
									},
									"response": [
										{
											"id": "258ea6eb-8661-4547-9434-70e11a9f7fc9",
											"name": "Metric response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": \"5902deadbeef667524a01290\",\n  \"key\": \"my-metric\",\n  \"name\": \"my-metric\",\n  \"kind\": \"custom\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/metrics/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/metrics/my-project/my-metric\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"tags\": [],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"experimentCount\": 0,\n  \"_attachedFlagCount\": 0,\n  \"_site\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569fdeadbeef1644facecafe\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"occaecat quis\",\n  \"isNumeric\": true,\n  \"successCriteria\": \"HigherThanBaseline\",\n  \"unit\": \"oc\",\n  \"eventKey\": \"esse\",\n  \"randomizationUnits\": [\n    \"user\"\n  ],\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isActive\": true,\n  \"_attachedFeatures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_version\": 1,\n  \"selector\": \"fugiat culpa deserunt ipsum do\",\n  \"urls\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "5cd3d14e-aed4-4878-9a1f-53d9929d779b",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "f009d91b-eaf5-438d-bbf7-c537c50ec470",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "02decba0-d435-4172-95bf-e43a881ae44a",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "98d37fb3-9689-4ac4-a668-509d0a680d5a",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update metric",
									"id": "6c45189f-c651-479a-b15b-7cf498162481",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey",
												":metricKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "metricKey",
													"value": "nostrud sunt cupidatat dolore qui",
													"description": "(Required) The metric key"
												}
											]
										},
										"description": "Patch a metric by key."
									},
									"response": [
										{
											"id": "c66e628a-76fc-40d6-b71a-1fb1bc163bb9",
											"name": "Metric response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": \"5902deadbeef667524a01290\",\n  \"key\": \"my-metric\",\n  \"name\": \"my-metric\",\n  \"kind\": \"custom\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/metrics/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/metrics/my-project/my-metric\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"tags\": [],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"experimentCount\": 0,\n  \"_attachedFlagCount\": 0,\n  \"_site\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569fdeadbeef1644facecafe\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"occaecat quis\",\n  \"isNumeric\": true,\n  \"successCriteria\": \"HigherThanBaseline\",\n  \"unit\": \"oc\",\n  \"eventKey\": \"esse\",\n  \"randomizationUnits\": [\n    \"user\"\n  ],\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isActive\": true,\n  \"_attachedFeatures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_version\": 1,\n  \"selector\": \"fugiat culpa deserunt ipsum do\",\n  \"urls\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "15c7b809-c878-464a-b2aa-fb5e086956cb",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "b1b77481-7f66-45c9-aa29-22edb981e20d",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "08f6c308-e4dd-4afe-bb01-a54de0077403",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "36f19e6c-602f-490c-b645-b19bd3a6e95b",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "8e604f89-c0ad-43e1-be31-8a9dfdb486d7",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"my-updated-metric\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete metric",
									"id": "eb84d681-c506-4884-90f6-1027d577a8da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey",
												":metricKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "metricKey",
													"value": "nostrud sunt cupidatat dolore qui",
													"description": "(Required) The metric key"
												}
											]
										},
										"description": "Delete a metric by key."
									},
									"response": [
										{
											"id": "ffe92e67-ef6a-48dc-977f-dfc5e7ff0f5d",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "c04cc557-c987-4146-ac55-71be800438b5",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "f14d8ff3-5b32-43a8-8274-9481c115cc57",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "8ea13745-3e92-4d6b-ba7f-25f9b42f270d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "8a129471-d711-48c4-a8be-71d237286e91",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/metrics/:projectKey/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"metrics",
														":projectKey",
														":metricKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "metricKey",
															"value": "nostrud sunt cupidatat dolore qui",
															"description": "(Required) The metric key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "cecb74b4-fcf4-4b44-8040-fc853494dfc4"
						},
						{
							"name": "List metrics",
							"id": "2a19b48a-bbd1-4b0a-84a7-9fef48935f0c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:projectKey?expand=aliqua Duis adipisicing dolore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":projectKey"
									],
									"query": [
										{
											"key": "expand",
											"value": "aliqua Duis adipisicing dolore",
											"description": "A comma-separated list of properties that can reveal additional information in the response."
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										}
									]
								},
								"description": "Get a list of all metrics for the specified project.\n\n### Expanding the metric list response\nLaunchDarkly supports expanding the \"List metrics\" response. By default, the expandable field is **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add the following supported field:\n\n- `experimentCount` includes the number of experiments from the specific project that use the metric\n\nFor example, `expand=experimentCount` includes the `experimentCount` field for each metric in the response.\n"
							},
							"response": [
								{
									"id": "25daa0a9-5068-4864-9e92-1b382f066045",
									"name": "Metrics collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey?expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/metrics/my-project?limit=20\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
								},
								{
									"id": "0b107ee4-9d8b-4257-bf47-06a993e55f76",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey?expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "449d9bd7-f714-4cfc-8afd-a0401d3cece5",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey?expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								}
							]
						},
						{
							"name": "Create metric",
							"id": "4df71104-cd3d-44dd-bf9e-754511226155",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":projectKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										}
									]
								},
								"description": "Create a new metric in the specified project. The expected `POST` body differs depending on the specified `kind` property."
							},
							"response": [
								{
									"id": "6eb18b16-0e94-4c5d-af53-2a42c9c2c6ad",
									"name": "Metric response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": \"5902deadbeef667524a01290\",\n  \"key\": \"my-metric\",\n  \"name\": \"my-metric\",\n  \"kind\": \"custom\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/metrics/my-project\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/metrics/my-project/my-metric\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"tags\": [],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"experimentCount\": 0,\n  \"_attachedFlagCount\": 0,\n  \"_site\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainerId\": \"569fdeadbeef1644facecafe\",\n  \"_maintainer\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"aute culpa\",\n  \"isNumeric\": true,\n  \"successCriteria\": \"LowerThanBaseline\",\n  \"unit\": \"laborum occaecat\",\n  \"eventKey\": \"reprehenderit\",\n  \"randomizationUnits\": [\n    \"user\"\n  ],\n  \"experiments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isActive\": true,\n  \"_attachedFeatures\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_version\": 1,\n  \"selector\": \"mollit\",\n  \"urls\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "2e11110f-cfb0-490d-9081-c35b9c5f76d0",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "8a1c9018-5256-4fb2-8610-7dc098a768ef",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "2f9c43b5-ed46-4a6a-b102-38c174a53223",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "64f3471e-70ee-4dac-ad7c-c5e15ba6914e",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "a3215a00-f4f5-47da-be7e-382810383bfb",
									"name": "Status conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "46827aa8-b469-4710-b84c-ef8657a43953",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventKey\": \"trackedClick\",\n  \"isActive\": true,\n  \"isNumeric\": false,\n  \"key\": \"my-metric\",\n  \"kind\": \"custom\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/metrics/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"metrics",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "566c75ff-9ec2-4858-8f95-1eb5a0329533"
				},
				{
					"name": "oauth/clients",
					"item": [
						{
							"name": "{clientId}",
							"item": [
								{
									"name": "Get client by ID",
									"id": "9698204c-d407-48a8-bc82-12d868ced912",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "velit incididunt nostr",
													"description": "(Required) The client ID"
												}
											]
										},
										"description": "Get a registered OAuth 2.0 client by unique client ID."
									},
									"response": [
										{
											"id": "5dc5678d-b338-4518-8fbb-4a61f678077f",
											"name": "OAuth 2.0 client response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/oauth/clients\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/oauth/clients/50666563-9144-4125-b822-33f308227e45\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"ex ullamco aliquip\",\n  \"_accountId\": \"id eu dolore ea\",\n  \"_clientId\": \"nulla\",\n  \"redirectUri\": \"est labore in in ipsum\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"pariatur ut nostrud consectetur\",\n  \"_clientSecret\": \"in amet aliquip et\"\n}"
										},
										{
											"id": "281e3b1c-f773-497f-a1d2-da7d447a4bfd",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "541c26b9-ee12-4487-acc9-a324a97b7f27",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "539718ab-c6d0-4529-944c-bb5ff5dba9e9",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "3eaa1f9b-1b43-425e-b09e-14006c3cf1d1",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										}
									]
								},
								{
									"name": "Patch client by ID",
									"id": "c045cf57-5cb0-46ac-ab60-b3bccfac598e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"Example Client V2\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "velit incididunt nostr",
													"description": "(Required) The client ID"
												}
											]
										},
										"description": "Patch an existing OAuth 2.0 client by client ID. Requires a [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes to the client. Only `name`, `description`, and `redirectUri` may be patched."
									},
									"response": [
										{
											"id": "2a1a4c65-acf7-438d-ab86-a15bc1247bd9",
											"name": "OAuth 2.0 client response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"Example Client V2\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/oauth/clients\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/oauth/clients/50666563-9144-4125-b822-33f308227e45\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"ex ullamco aliquip\",\n  \"_accountId\": \"id eu dolore ea\",\n  \"_clientId\": \"nulla\",\n  \"redirectUri\": \"est labore in in ipsum\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"pariatur ut nostrud consectetur\",\n  \"_clientSecret\": \"in amet aliquip et\"\n}"
										},
										{
											"id": "97477b13-e959-4964-ac2b-9bd0730909fb",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"Example Client V2\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "b636da4f-1e17-41f7-9e56-8ac46ce609f4",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"Example Client V2\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "d63e991a-d8e1-4f5a-8466-486332c1734e",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"Example Client V2\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "5b197cc4-dccf-4dd9-a829-23edd980bb6b",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/name\",\n    \"value\": \"Example Client V2\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										}
									]
								},
								{
									"name": "Delete OAuth 2.0 client",
									"id": "7ce4939d-379b-4c28-8032-5506ec43d586",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "clientId",
													"value": "velit incididunt nostr",
													"description": "(Required) The client ID"
												}
											]
										},
										"description": "Delete an existing OAuth 2.0 client by unique client ID."
									},
									"response": [
										{
											"id": "dfc33955-f52c-4ce4-b0b3-3abb90a2b4d8",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "51d943f4-4f97-4471-add1-55b3939c178d",
											"name": "Invalid request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "6d33b244-e723-485c-924c-2d0546ab619a",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "017dfdcf-fe3a-4e40-8e58-563ce2d11504",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "3f6a0431-2e83-4107-8b61-907fbf7aee7d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/oauth/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"oauth",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "clientId",
															"value": "velit incididunt nostr",
															"description": "(Required) The client ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										}
									]
								}
							],
							"id": "31f47e5d-0152-4e27-a503-a017fb308ab2"
						},
						{
							"name": "Get clients",
							"id": "deba105d-0cea-499a-bae3-ad441a74c8f2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/oauth/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"oauth",
										"clients"
									]
								},
								"description": "Get all OAuth 2.0 clients registered by your account."
							},
							"response": [
								{
									"id": "eeba54f0-458e-4c4b-b64e-0d2e56bb6bab",
									"name": "OAuth 2.0 client collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/oauth/clients\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "8e586b15-9ffa-411a-b59b-396c7f4c79bc",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "7aed846d-9736-468e-a8e4-2089d193b253",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "d1a1341b-82e9-4be8-ad1e-b93377d0e93b",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								}
							]
						},
						{
							"name": "Create a LaunchDarkly OAuth 2.0 client",
							"id": "d7bff2d4-eec8-4ab0-8e3f-4aca21d16ac3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"reprehenderit ex\",\n  \"redirectUri\": \"Ut ad sed in sit\",\n  \"description\": \"elit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/oauth/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"oauth",
										"clients"
									]
								},
								"description": "Create (register) a LaunchDarkly OAuth2 client. OAuth2 clients allow you to build custom integrations using LaunchDarkly as your identity provider."
							},
							"response": [
								{
									"id": "7bd6a1b3-75b3-49f3-afaa-af4a13da0e28",
									"name": "OAuth 2.0 client response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"reprehenderit ex\",\n  \"redirectUri\": \"Ut ad sed in sit\",\n  \"description\": \"elit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/oauth/clients\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/oauth/clients/50666563-9144-4125-b822-33f308227e45\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"name\": \"ex ullamco aliquip\",\n  \"_accountId\": \"id eu dolore ea\",\n  \"_clientId\": \"nulla\",\n  \"redirectUri\": \"est labore in in ipsum\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"pariatur ut nostrud consectetur\",\n  \"_clientSecret\": \"in amet aliquip et\"\n}"
								},
								{
									"id": "e18c72c0-1961-4ae4-9599-4e617bed8661",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"reprehenderit ex\",\n  \"redirectUri\": \"Ut ad sed in sit\",\n  \"description\": \"elit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "8158c038-0ddf-4875-b694-130a95f10a5a",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"reprehenderit ex\",\n  \"redirectUri\": \"Ut ad sed in sit\",\n  \"description\": \"elit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "0e455c0d-1d16-40bc-a3ec-7bf87005acb7",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"reprehenderit ex\",\n  \"redirectUri\": \"Ut ad sed in sit\",\n  \"description\": \"elit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/oauth/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"oauth",
												"clients"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								}
							]
						}
					],
					"id": "e074856e-5211-44c2-99f7-4fabd3bfc7b5"
				},
				{
					"name": "projects",
					"item": [
						{
							"name": "{projectKey}",
							"item": [
								{
									"name": "context-kinds",
									"item": [
										{
											"name": "Get context kinds",
											"id": "be15bc08-de8a-4c81-aa52-a09150dd5d86",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"context-kinds"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Get all context kinds for a given project."
											},
											"response": [
												{
													"id": "a2ec40a2-552c-4a00-8aa1-f0cd0424cae8",
													"name": "Context kinds collection response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Lorem9b1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "6378df1e-6684-4941-b92d-63d2ba83046e",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "71fb0eeb-7c39-4fa1-9db1-db328946b596",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "a9b310f1-4911-4fac-a33f-57daeb66026d",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												}
											]
										},
										{
											"name": "Create or update context kind",
											"id": "f63884af-9db9-47ec-8a0d-4f6470606259",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"organization\",\n  \"description\": \"An example context kind for organizations\",\n  \"hideInTargeting\": false,\n  \"version\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"context-kinds",
														":key"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "key",
															"value": "do tempor voluptate esse cupidatat",
															"description": "(Required) The context kind key"
														}
													]
												},
												"description": "Create or update a context kind by key. Only the included fields will be updated."
											},
											"response": [
												{
													"id": "2397c1c5-06d8-49a3-8c1c-b4aeba49369c",
													"name": "Context kind upsert response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"organization\",\n  \"description\": \"An example context kind for organizations\",\n  \"hideInTargeting\": false,\n  \"version\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds",
																":key"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "key",
																	"value": "do tempor voluptate esse cupidatat",
																	"description": "(Required) The context kind key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"success\",\n  \"_links\": {\n    \"est_2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"consectetur571\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "09326c2c-0d40-48c3-8cf0-31d9412c8666",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"organization\",\n  \"description\": \"An example context kind for organizations\",\n  \"hideInTargeting\": false,\n  \"version\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds",
																":key"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "key",
																	"value": "do tempor voluptate esse cupidatat",
																	"description": "(Required) The context kind key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "b02caf35-a1e5-4718-847c-686a9bc298a4",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"organization\",\n  \"description\": \"An example context kind for organizations\",\n  \"hideInTargeting\": false,\n  \"version\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds",
																":key"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "key",
																	"value": "do tempor voluptate esse cupidatat",
																	"description": "(Required) The context kind key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "6b617ff5-f27f-4ff1-962b-186646dedb29",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"organization\",\n  \"description\": \"An example context kind for organizations\",\n  \"hideInTargeting\": false,\n  \"version\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds",
																":key"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "key",
																	"value": "do tempor voluptate esse cupidatat",
																	"description": "(Required) The context kind key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "4338501a-b7ef-4176-af8f-1fefd3bcdde8",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"organization\",\n  \"description\": \"An example context kind for organizations\",\n  \"hideInTargeting\": false,\n  \"version\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/context-kinds/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"context-kinds",
																":key"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "key",
																	"value": "do tempor voluptate esse cupidatat",
																	"description": "(Required) The context kind key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												}
											]
										}
									],
									"id": "79541499-d72f-49b4-92e8-8dff282671a1"
								},
								{
									"name": "environments",
									"item": [
										{
											"name": "{environmentKey}",
											"item": [
												{
													"name": "context-attributes",
													"item": [
														{
															"name": "Get context attribute names",
															"id": "3763592c-9926-4104-bab6-9c4de886d900",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes?filter=adipisicing ipsum ullamco",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"context-attributes"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "adipisicing ipsum ullamco",
																			"description": "A comma-separated list of context filters. This endpoint only accepts `kind` filters, with the `equals` operator, and `name` filters, with the `startsWith` operator. To learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances)."
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																},
																"description": "Get context attribute names."
															},
															"response": [
																{
																	"id": "e6f7868a-55fb-43b1-afbf-8db6dfb5d831",
																	"name": "Context attribute names collection response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes?filter=adipisicing ipsum ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "adipisicing ipsum ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																},
																{
																	"id": "0dbb7de1-d526-4fda-b806-77e45f9f2270",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes?filter=adipisicing ipsum ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "adipisicing ipsum ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "9ff9f974-7c33-447e-984b-36019fe74796",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes?filter=adipisicing ipsum ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "adipisicing ipsum ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "c070134f-3ef6-4261-92a2-07320b4eba32",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes?filter=adipisicing ipsum ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "adipisicing ipsum ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "50c08bdc-da8d-470e-bc58-96f45def4041",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes?filter=adipisicing ipsum ullamco",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "adipisicing ipsum ullamco"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Get context attribute values",
															"id": "b2f43b86-9d58-4b8a-b26a-21dfc3095d05",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes/:attributeName?filter=et tempor ut",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"context-attributes",
																		":attributeName"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "et tempor ut",
																			"description": "A comma-separated list of context filters. This endpoint only accepts `kind` filters, with the `equals` operator, and `value` filters, with the `startsWith` operator. To learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances)."
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "attributeName",
																			"value": "sint ipsum ad irure",
																			"description": "(Required) The attribute name"
																		}
																	]
																},
																"description": "Get context attribute values."
															},
															"response": [
																{
																	"id": "03c1aa04-2fc8-4678-b94a-1258003a8fa9",
																	"name": "Context attribute values collection response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes/:attributeName?filter=et tempor ut",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes",
																				":attributeName"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "et tempor ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "attributeName",
																					"value": "sint ipsum ad irure",
																					"description": "(Required) The attribute name"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																},
																{
																	"id": "f16ecb34-958a-4aab-b144-af4bbd398b07",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes/:attributeName?filter=et tempor ut",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes",
																				":attributeName"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "et tempor ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "attributeName",
																					"value": "sint ipsum ad irure",
																					"description": "(Required) The attribute name"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "9e554c09-879c-49ac-9115-7668047fb490",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes/:attributeName?filter=et tempor ut",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes",
																				":attributeName"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "et tempor ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "attributeName",
																					"value": "sint ipsum ad irure",
																					"description": "(Required) The attribute name"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "d23384a0-980c-41d1-9223-4b149ba7404f",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes/:attributeName?filter=et tempor ut",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes",
																				":attributeName"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "et tempor ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "attributeName",
																					"value": "sint ipsum ad irure",
																					"description": "(Required) The attribute name"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "cca8abee-b6d2-4aeb-ae25-29651374554d",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-attributes/:attributeName?filter=et tempor ut",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-attributes",
																				":attributeName"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "et tempor ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "attributeName",
																					"value": "sint ipsum ad irure",
																					"description": "(Required) The attribute name"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "b6f705e6-d1f7-453e-9327-3127e8ca65ac"
												},
												{
													"name": "context-instances",
													"item": [
														{
															"name": "{id}",
															"item": [
																{
																	"name": "Get context instances",
																	"id": "57c95f4c-ac66-4a3d-be93-867379989f78",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id?limit=23457625&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				":id"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "23457625",
																					"description": "Specifies the maximum number of context instances to return (max: 50, default: 20)"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sunt ipsum laboris cillum",
																					"description": "Limits results to context instances with sort values after the value specified. You can use this for pagination, however, we recommend using the `next` link we provide instead."
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident",
																					"description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying `ts` for this value, or descending order by specifying `-ts`."
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat",
																					"description": "A comma-separated list of context filters. This endpoint only accepts an `applicationId` filter. To learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances)."
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true",
																					"description": "Specifies whether to include or omit the total count of matching context instances. Defaults to true."
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ea laboris sunt mollit ex",
																					"description": "(Required) The context instance ID"
																				}
																			]
																		},
																		"description": "Get context instances by ID."
																	},
																	"response": [
																		{
																			"id": "92722284-edb5-4d9e-b3a0-5ecbaee0e4b6",
																			"name": "Context instances collection response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id?limit=23457625&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"query": [
																						{
																							"key": "limit",
																							"value": "23457625"
																						},
																						{
																							"key": "continuationToken",
																							"value": "sunt ipsum laboris cillum"
																						},
																						{
																							"key": "sort",
																							"value": "tempor enim dolore proident"
																						},
																						{
																							"key": "filter",
																							"value": "consequat occaecat"
																						},
																						{
																							"key": "includeTotalCount",
																							"value": "true"
																						}
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"_environmentId\": \"57be1db38b75bf0772d11384\",\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-env/context-instances/organization:launch-darkly:user:henry?limit=2&continuationToken=2022-04-15T15:00:57.526470334Z\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-proj/environments/my-env/context-instances/organization:launch-darkly:user:henry-jacobs?limit=2\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 100,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}"
																		},
																		{
																			"id": "e0c04393-b40f-4a3f-a274-b90437d8a049",
																			"name": "Invalid request",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id?limit=23457625&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"query": [
																						{
																							"key": "limit",
																							"value": "23457625"
																						},
																						{
																							"key": "continuationToken",
																							"value": "sunt ipsum laboris cillum"
																						},
																						{
																							"key": "sort",
																							"value": "tempor enim dolore proident"
																						},
																						{
																							"key": "filter",
																							"value": "consequat occaecat"
																						},
																						{
																							"key": "includeTotalCount",
																							"value": "true"
																						}
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																		},
																		{
																			"id": "8cdfe2c5-0659-4a0b-97d3-0625376df019",
																			"name": "Invalid access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id?limit=23457625&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"query": [
																						{
																							"key": "limit",
																							"value": "23457625"
																						},
																						{
																							"key": "continuationToken",
																							"value": "sunt ipsum laboris cillum"
																						},
																						{
																							"key": "sort",
																							"value": "tempor enim dolore proident"
																						},
																						{
																							"key": "filter",
																							"value": "consequat occaecat"
																						},
																						{
																							"key": "includeTotalCount",
																							"value": "true"
																						}
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																		},
																		{
																			"id": "1fb8e629-671a-4e0e-8026-1c6fd5758ef8",
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id?limit=23457625&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"query": [
																						{
																							"key": "limit",
																							"value": "23457625"
																						},
																						{
																							"key": "continuationToken",
																							"value": "sunt ipsum laboris cillum"
																						},
																						{
																							"key": "sort",
																							"value": "tempor enim dolore proident"
																						},
																						{
																							"key": "filter",
																							"value": "consequat occaecat"
																						},
																						{
																							"key": "includeTotalCount",
																							"value": "true"
																						}
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																		},
																		{
																			"id": "6d488999-ba88-4540-a723-1fb1c1beb69d",
																			"name": "Rate limited",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id?limit=23457625&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"query": [
																						{
																							"key": "limit",
																							"value": "23457625"
																						},
																						{
																							"key": "continuationToken",
																							"value": "sunt ipsum laboris cillum"
																						},
																						{
																							"key": "sort",
																							"value": "tempor enim dolore proident"
																						},
																						{
																							"key": "filter",
																							"value": "consequat occaecat"
																						},
																						{
																							"key": "includeTotalCount",
																							"value": "true"
																						}
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete context instances",
																	"id": "82f5b529-ad53-4c73-901d-b51fc14a8bb5",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ea laboris sunt mollit ex",
																					"description": "(Required) The context instance ID"
																				}
																			]
																		},
																		"description": "Delete context instances by ID."
																	},
																	"response": [
																		{
																			"id": "9afb3f5f-e995-4fe1-bb9e-526aa0c90316",
																			"name": "Action succeeded",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"id": "2dc565ba-d482-41f7-8e7d-a86215da789c",
																			"name": "Invalid request",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																		},
																		{
																			"id": "71e55471-2724-400d-aa05-ee57f861292e",
																			"name": "Invalid access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																		},
																		{
																			"id": "cc777642-7b79-409e-9806-99e6c448a743",
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																		},
																		{
																			"id": "4d9a889f-fca0-4cf8-add7-660b65898ec0",
																			"name": "Invalid resource identifier",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																		},
																		{
																			"id": "c0fac037-f2e6-4231-94ac-7258d94182e8",
																			"name": "Rate limited",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/:id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"context-instances",
																						":id"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "id",
																							"value": "ea laboris sunt mollit ex",
																							"description": "(Required) The context instance ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																		}
																	]
																}
															],
															"id": "e12c1f7d-ca6a-49dd-8cbc-93a5e51243d9"
														},
														{
															"name": "Search for context instances",
															"id": "b6cff0fc-7a3e-484f-802c-2a8e07e89602",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"filter\": \"{\\\"filter\\\": \\\"kindKeys:{\\\"contains\\\": [\\\"user:Henry\\\"]},\\\"sort\\\": \\\"-ts\\\",\\\"limit\\\": 50}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/search?limit=-57934563&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"context-instances",
																		"search"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "-57934563",
																			"description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)"
																		},
																		{
																			"key": "continuationToken",
																			"value": "sunt ipsum laboris cillum",
																			"description": "Limits results to context instances with sort values after the value specified. You can use this for pagination, however, we recommend using the `next` link we provide instead."
																		},
																		{
																			"key": "sort",
																			"value": "tempor enim dolore proident",
																			"description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying `ts` for this value, or descending order by specifying `-ts`."
																		},
																		{
																			"key": "filter",
																			"value": "consequat occaecat",
																			"description": "A comma-separated list of context filters. This endpoint only accepts an `applicationId` filter. To learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances)."
																		},
																		{
																			"key": "includeTotalCount",
																			"value": "false",
																			"description": "Specifies whether to include or omit the total count of matching context instances. Defaults to true."
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																},
																"description": "\nSearch for context instances.\n\nYou can use either the query parameters or the request body parameters. If both are provided, there is an error.\n\nTo learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances). To learn more about context instances, read [Understanding context instances](https://docs.launchdarkly.com/home/contexts#understanding-context-instances).\n"
															},
															"response": [
																{
																	"id": "dbb79afe-423b-4ca5-ab09-a0384a7dbb3f",
																	"name": "Context instances collection response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"{\\\"filter\\\": \\\"kindKeys:{\\\"contains\\\": [\\\"user:Henry\\\"]},\\\"sort\\\": \\\"-ts\\\",\\\"limit\\\": 50}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/search?limit=-57934563&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sunt ipsum laboris cillum"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_environmentId\": \"57be1db38b75bf0772d11384\",\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-env/context-instances/organization:launch-darkly:user:henry?limit=2&continuationToken=2022-04-15T15:00:57.526470334Z\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-proj/environments/my-env/context-instances/organization:launch-darkly:user:henry-jacobs?limit=2\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 100,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}"
																},
																{
																	"id": "00b10090-b640-4fc8-a158-2a3549a95655",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"{\\\"filter\\\": \\\"kindKeys:{\\\"contains\\\": [\\\"user:Henry\\\"]},\\\"sort\\\": \\\"-ts\\\",\\\"limit\\\": 50}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/search?limit=-57934563&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sunt ipsum laboris cillum"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "797a1e55-2509-4892-96f4-1ca35ea73860",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"{\\\"filter\\\": \\\"kindKeys:{\\\"contains\\\": [\\\"user:Henry\\\"]},\\\"sort\\\": \\\"-ts\\\",\\\"limit\\\": 50}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/search?limit=-57934563&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sunt ipsum laboris cillum"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "2d4fa566-b1c3-4c1c-bcec-687d1505f867",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"{\\\"filter\\\": \\\"kindKeys:{\\\"contains\\\": [\\\"user:Henry\\\"]},\\\"sort\\\": \\\"-ts\\\",\\\"limit\\\": 50}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/search?limit=-57934563&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sunt ipsum laboris cillum"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "afa8ab97-8dcd-4153-b61f-eec36f0bc6a8",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"{\\\"filter\\\": \\\"kindKeys:{\\\"contains\\\": [\\\"user:Henry\\\"]},\\\"sort\\\": \\\"-ts\\\",\\\"limit\\\": 50}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/context-instances/search?limit=-57934563&continuationToken=sunt ipsum laboris cillum&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"context-instances",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sunt ipsum laboris cillum"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "81e8040b-df5a-4375-8ed4-467c8d9bc122"
												},
												{
													"name": "contexts",
													"item": [
														{
															"name": "Search for contexts",
															"id": "4c81e578-dfec-48cd-b979-866216207bdc",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"filter\": \"user.firstName:{\\\"startsWith\\\": \\\"Jo\\\"},kind:{\\\"anyOf\\\": [\\\"user\\\",\\\"organization\\\"]}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/search?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=id non Duis est&includeTotalCount=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"contexts",
																		"search"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "-57934563",
																			"description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)"
																		},
																		{
																			"key": "continuationToken",
																			"value": "sit aliquip laborum esse",
																			"description": "Limits results to contexts with sort values after the value specified. You can use this for pagination, however, we recommend using the `next` link we provide instead."
																		},
																		{
																			"key": "sort",
																			"value": "tempor enim dolore proident",
																			"description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying `ts` for this value, or descending order by specifying `-ts`."
																		},
																		{
																			"key": "filter",
																			"value": "id non Duis est",
																			"description": "A comma-separated list of context filters. To learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances)."
																		},
																		{
																			"key": "includeTotalCount",
																			"value": "true",
																			"description": "Specifies whether to include or omit the total count of matching contexts. Defaults to true."
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																},
																"description": "\nSearch for contexts.\n\nYou can use either the query parameters or the request body parameters. If both are provided, there is an error.\n\nTo learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances). To learn more about contexts, read [Understanding contexts and context kinds](https://docs.launchdarkly.com/home/contexts#understanding-contexts-and-context-kinds).\n"
															},
															"response": [
																{
																	"id": "a7f286f6-efaa-4e4e-a4d2-3e0f35c8c062",
																	"name": "Contexts collection response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"user.firstName:{\\\"startsWith\\\": \\\"Jo\\\"},kind:{\\\"anyOf\\\": [\\\"user\\\",\\\"organization\\\"]}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/search?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=id non Duis est&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "id non Duis est"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_environmentId\": \"57be1db38b75bf0772d11384\",\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/app.launchdarkly.com/api/v2/projects/my-project/environments/my-environment/contexts?filter=kind:{\\\"equals\\\": [\\\"organization\\\"]}&limit=2&continuationToken=QAGFKH1313KUGI2351\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-proj/environments/my-env/contexts?filter=kind:{\\\"equals\\\": [\\\"organization\\\"]}&limit=2&continuationToken=QAGFKH1313KUGI2351\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 100,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}"
																},
																{
																	"id": "e1e5101b-4cd2-4350-ad1c-61770028fb6e",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"user.firstName:{\\\"startsWith\\\": \\\"Jo\\\"},kind:{\\\"anyOf\\\": [\\\"user\\\",\\\"organization\\\"]}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/search?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=id non Duis est&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "id non Duis est"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "826d80c9-9b5b-4294-bb62-254711cf8a09",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"user.firstName:{\\\"startsWith\\\": \\\"Jo\\\"},kind:{\\\"anyOf\\\": [\\\"user\\\",\\\"organization\\\"]}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/search?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=id non Duis est&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "id non Duis est"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "5a9ea980-2945-401a-ba02-1c68ca5b705c",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"user.firstName:{\\\"startsWith\\\": \\\"Jo\\\"},kind:{\\\"anyOf\\\": [\\\"user\\\",\\\"organization\\\"]}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/search?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=id non Duis est&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "id non Duis est"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "858ef502-0a0b-4a08-be09-42c86c09fda0",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"filter\": \"user.firstName:{\\\"startsWith\\\": \\\"Jo\\\"},kind:{\\\"anyOf\\\": [\\\"user\\\",\\\"organization\\\"]}\",\n  \"sort\": \"-ts\",\n  \"limit\": 10,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/search?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=id non Duis est&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				"search"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "id non Duis est"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Update flag settings for context",
															"id": "5092ea77-bf9b-4ec2-9bd5-c6a0d9f76c95",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"contexts",
																		":contextKind",
																		":contextKey",
																		"flags",
																		":featureFlagKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "contextKind",
																			"value": "aute incididunt laborum Excepteur",
																			"description": "(Required) The context kind"
																		},
																		{
																			"key": "contextKey",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		}
																	]
																},
																"description": "\nEnable or disable a feature flag for a context based on its context kind and key.\n\nOmitting the `setting` attribute from the request body, or including a `setting` of `null`, erases the current setting for a context.\n\nIf you previously patched the flag, and the patch included the context's data, LaunchDarkly continues to use that data. If LaunchDarkly has never encountered the combination of the context's key and kind before, it calculates the flag values based on the context kind and key.\n"
															},
															"response": [
																{
																	"id": "2300d498-0d25-439c-8840-043432185e1e",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":contextKind",
																				":contextKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "contextKind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "contextKey",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "5c140639-2abd-4db9-8c95-4764bfa2590e",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":contextKind",
																				":contextKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "contextKind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "contextKey",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "7c3a29e3-4d10-4c6d-9634-013f257d0669",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":contextKind",
																				":contextKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "contextKind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "contextKey",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "dcebfc52-3b88-4ed9-b549-e609f3f0b449",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":contextKind",
																				":contextKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "contextKind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "contextKey",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "5d8732f3-ec70-4a96-9902-bd422e5c11fa",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":contextKind",
																				":contextKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "contextKind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "contextKey",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "f6228eed-563f-4395-b332-264238388fa1",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:contextKind/:contextKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":contextKind",
																				":contextKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "contextKind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "contextKey",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Get contexts",
															"id": "28c3e9f6-e1e0-4a0f-8087-ce47ff0658a8",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:kind/:key?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"contexts",
																		":kind",
																		":key"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "-57934563",
																			"description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)"
																		},
																		{
																			"key": "continuationToken",
																			"value": "sit aliquip laborum esse",
																			"description": "Limits results to contexts with sort values after the value specified. You can use this for pagination, however, we recommend using the `next` link we provide instead."
																		},
																		{
																			"key": "sort",
																			"value": "tempor enim dolore proident",
																			"description": "Specifies a field by which to sort. LaunchDarkly supports sorting by timestamp in ascending order by specifying `ts` for this value, or descending order by specifying `-ts`."
																		},
																		{
																			"key": "filter",
																			"value": "consequat occaecat",
																			"description": "A comma-separated list of context filters. This endpoint only accepts an `applicationId` filter. To learn more about the filter syntax, read [Filtering contexts and context instances](/tag/Contexts-(beta)#filtering-contexts-and-context-instances)."
																		},
																		{
																			"key": "includeTotalCount",
																			"value": "true",
																			"description": "Specifies whether to include or omit the total count of matching contexts. Defaults to true."
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "kind",
																			"value": "aute incididunt laborum Excepteur",
																			"description": "(Required) The context kind"
																		},
																		{
																			"key": "key",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		}
																	]
																},
																"description": "Get contexts based on kind and key."
															},
															"response": [
																{
																	"id": "c5c2c909-71db-4711-baaa-a7b766ed28df",
																	"name": "Contexts collection response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:kind/:key?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":kind",
																				":key"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "kind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "key",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_environmentId\": \"57be1db38b75bf0772d11384\",\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/app.launchdarkly.com/api/v2/projects/my-project/environments/my-environment/contexts?filter=kind:{\\\"equals\\\": [\\\"organization\\\"]}&limit=2&continuationToken=QAGFKH1313KUGI2351\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-proj/environments/my-env/contexts?filter=kind:{\\\"equals\\\": [\\\"organization\\\"]}&limit=2&continuationToken=QAGFKH1313KUGI2351\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 100,\n  \"continuationToken\": \"QAGFKH1313KUGI2351\"\n}"
																},
																{
																	"id": "cf16426f-a74c-47a1-9b7e-f6118aa1f0b7",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:kind/:key?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":kind",
																				":key"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "kind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "key",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "e1147598-5199-4932-8f6e-b19dfdb1b041",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:kind/:key?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":kind",
																				":key"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "kind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "key",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "ec13b9fc-1ab7-481d-bb29-b56f69648ab6",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:kind/:key?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":kind",
																				":key"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "kind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "key",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "6275d3d1-9aa7-4a8a-a9c0-0c4093fec771",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/contexts/:kind/:key?limit=-57934563&continuationToken=sit aliquip laborum esse&sort=tempor enim dolore proident&filter=consequat occaecat&includeTotalCount=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"contexts",
																				":kind",
																				":key"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-57934563"
																				},
																				{
																					"key": "continuationToken",
																					"value": "sit aliquip laborum esse"
																				},
																				{
																					"key": "sort",
																					"value": "tempor enim dolore proident"
																				},
																				{
																					"key": "filter",
																					"value": "consequat occaecat"
																				},
																				{
																					"key": "includeTotalCount",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "kind",
																					"value": "aute incididunt laborum Excepteur",
																					"description": "(Required) The context kind"
																				},
																				{
																					"key": "key",
																					"value": "nulla veniam",
																					"description": "(Required) The context key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "88fb4f56-7579-4d84-8f34-7cd269721948"
												},
												{
													"name": "experiments",
													"item": [
														{
															"name": "{experimentKey}",
															"item": [
																{
																	"name": "Get experiment",
																	"id": "de6532f4-174c-4bba-8683-33510154fc03",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments",
																				":experimentKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "experimentKey",
																					"value": "ullamco do",
																					"description": "(Required) The experiment key"
																				}
																			]
																		},
																		"description": "Get details about an experiment.\n\n### Expanding the experiment response\n\nLaunchDarkly supports four fields for expanding the \"Get experiment\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n- `previousIterations` includes all iterations prior to the current iteration. By default only the current iteration is included in the response.\n- `draftIteration` includes a draft of an iteration which has not been started yet, if any.\n- `secondaryMetrics` includes secondary metrics. By default only the primary metric is included in the response.\n- `treatments` includes all treatment and parameter details. By default treatment data is not included in the response.\n\nFor example, `expand=draftIteration,treatments` includes the `draftIteration` and `treatments` fields in the response. If fields that you request with the `expand` query parameter are empty, they are not included in the response.\n"
																	},
																	"response": [
																		{
																			"id": "85ecbb53-c8c5-4c36-9284-2f3624d87c0a",
																			"name": "Experiment response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"key\": \"example-experiment\",\n  \"name\": \"Example experiment\",\n  \"_maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment/experiments/my-experiment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"12ab3c45de678910fgh12345\",\n  \"description\": \"An example experiment, used in testing\",\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"draftIteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"previousIterations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																		},
																		{
																			"id": "67ff7e43-ad20-477d-a0d5-41978e119d5d",
																			"name": "Invalid request",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																		},
																		{
																			"id": "ace245d7-6c7e-404e-9051-0e76321b441d",
																			"name": "Invalid access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																		},
																		{
																			"id": "87141493-6598-4364-bfb4-87cce2de521a",
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																		},
																		{
																			"id": "78570c0c-ca5f-4523-bdd8-2e81c9171f79",
																			"name": "Invalid resource identifier",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																		},
																		{
																			"id": "767edcaa-6d9a-49e1-8f61-652f9eb7d14c",
																			"name": "Method not allowed",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
																		},
																		{
																			"id": "daee424e-3aa4-4e24-b2ac-9dbf7c7c3bc3",
																			"name": "Rate limited",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																		}
																	]
																},
																{
																	"name": "Patch experiment",
																	"id": "9dd174a4-6224-4fa4-abf2-41570daaf28b",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments",
																				":experimentKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "experimentKey",
																					"value": "ullamco do",
																					"description": "(Required) The experiment key"
																				}
																			]
																		},
																		"description": "Update an experiment. Updating an experiment uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating experiments.\n\n#### updateName\n\nUpdates the experiment name.\n\n##### Parameters\n\n- `value`: The new name.\n\n#### updateDescription\n\nUpdates the experiment description.\n\n##### Parameters\n\n- `value`: The new description.\n\n#### startIteration\n\nStarts a new iteration for this experiment. You must [create a new iteration](/tag/Experiments-(beta)#operation/createIteration) before calling this instruction.\n\n##### Parameters\n\n- `changeJustification`: The reason for starting a new iteration. Required when you call `startIteration` on an already running experiment, otherwise optional.\n\n#### stopIteration\n\nStops the current iteration for this experiment.\n\n##### Parameters\n\n- `winningTreatmentId`: The ID of the winning treatment\n- `winningReason`: The reason for the winner\n\n#### archiveExperiment\n\nArchives this experiment. Archived experiments are hidden by default in the LaunchDarkly user interface. You cannot start new iterations for archived experiments.\n\n#### restoreExperiment\n\nRestores an archived experiment. After restoring an experiment, you can start new iterations for it again.\n"
																	},
																	"response": [
																		{
																			"id": "364cfae6-adba-45ee-b858-a7f69ecbf313",
																			"name": "Experiment response",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"key\": \"example-experiment\",\n  \"name\": \"Example experiment\",\n  \"_maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment/experiments/my-experiment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"12ab3c45de678910fgh12345\",\n  \"description\": \"An example experiment, used in testing\",\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"draftIteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"previousIterations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																		},
																		{
																			"id": "8b79ef9c-ed75-4d9e-97d6-346ab5e391c2",
																			"name": "Invalid request",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																		},
																		{
																			"id": "ccd5d862-89b1-41c4-b9ae-01ec5ab0cf2d",
																			"name": "Invalid access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																		},
																		{
																			"id": "8ed3991a-7026-47f3-963c-7e82fb2d2175",
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																		},
																		{
																			"id": "efa0e35e-15bc-4a26-980b-26a13c48a5e8",
																			"name": "Invalid resource identifier",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																		},
																		{
																			"id": "5975be56-3649-4639-88c3-c49cad42c43b",
																			"name": "Rate limited",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"comment\": \"Example comment describing the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateName\",\n      \"value\": \"Updated experiment name\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																		}
																	]
																},
																{
																	"name": "Create iteration",
																	"id": "c5522a30-b73a-495d-9626-e08e456043e1",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments",
																				":experimentKey",
																				"iterations"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "experimentKey",
																					"value": "ullamco do",
																					"description": "(Required) The experiment key"
																				}
																			]
																		},
																		"description": "Create an experiment iteration. Experiment iterations let you record experiments in discrete blocks of time. To learn more, read [Starting experiment iterations](https://docs.launchdarkly.com/home/creating-experiments#starting-experiment-iterations)."
																	},
																	"response": [
																		{
																			"id": "29135c11-6e3b-4d26-8fae-b307ded0ec9e",
																			"name": "Iteration response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"iterations"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"status\": \"running\",\n  \"createdAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_id\": \"12ab3c45de678910fgh12345\",\n  \"startedAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"endedAt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"winningTreatmentId\": \"122c9f3e-da26-4321-ba68-e0fc02eced58\",\n  \"winningReason\": \"We ran this iteration for two weeks and the winning variation was clear\",\n  \"canReshuffleTraffic\": true,\n  \"flags\": {\n    \"Ut_69\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nisi3df\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ad_80\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"primaryMetric\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"randomizationUnit\": \"user\",\n  \"treatments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"secondaryMetrics\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																		},
																		{
																			"id": "3b8c18e3-b2a5-4803-9471-6d4fa3de363c",
																			"name": "Invalid request",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"iterations"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																		},
																		{
																			"id": "2ebb97ff-cbbb-4931-bea7-9835f8262e8e",
																			"name": "Invalid access token",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"iterations"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																		},
																		{
																			"id": "834d8b3c-c814-4be8-aa1a-60d7cd78e31c",
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"iterations"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																		},
																		{
																			"id": "8ce4c55d-1bb7-4ea3-a4b0-b9c87a04017d",
																			"name": "Invalid resource identifier",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"iterations"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																		},
																		{
																			"id": "f162fddb-545b-42f6-9c4d-e9a17ac41b42",
																			"name": "Rate limited",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"hypothesis\": \"Example hypothesis, the new button placement will increase conversion\",\n  \"metrics\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"treatments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"flags\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"canReshuffleTraffic\": true,\n  \"randomizationUnit\": \"user\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/iterations",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"iterations"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																		}
																	]
																},
																{
																	"name": "Get experiment results",
																	"id": "80b1d085-68fc-4fb8-bf6f-a49ca04070cc",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments",
																				":experimentKey",
																				"metrics",
																				":metricKey",
																				"results"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "experimentKey",
																					"value": "ullamco do",
																					"description": "(Required) The experiment key"
																				},
																				{
																					"key": "metricKey",
																					"value": "nostrud sunt cupidatat dolore qui",
																					"description": "(Required) The metric key"
																				}
																			]
																		},
																		"description": "Get results from an experiment for a particular metric."
																	},
																	"response": [
																		{
																			"id": "973bf966-d799-459d-9e6c-984f09ee12f7",
																			"name": "Experiment results response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"metrics",
																						":metricKey",
																						"results"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						},
																						{
																							"key": "metricKey",
																							"value": "nostrud sunt cupidatat dolore qui",
																							"description": "(Required) The metric key"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"_links\": {\n    \"Excepteur_297\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"in1a_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"elit_\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"treatmentResults\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"metricSeen\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"probabilityOfMismatch\": 0.9999999999999738\n}"
																		},
																		{
																			"id": "44cf9874-dcf7-401e-8515-8cd37ce3903c",
																			"name": "Invalid request",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"metrics",
																						":metricKey",
																						"results"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						},
																						{
																							"key": "metricKey",
																							"value": "nostrud sunt cupidatat dolore qui",
																							"description": "(Required) The metric key"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																		},
																		{
																			"id": "e81772ee-0eb2-4fbd-b4e7-976dabaf376b",
																			"name": "Invalid access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"metrics",
																						":metricKey",
																						"results"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						},
																						{
																							"key": "metricKey",
																							"value": "nostrud sunt cupidatat dolore qui",
																							"description": "(Required) The metric key"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																		},
																		{
																			"id": "90c958f8-cbfe-4e66-8bf7-da443950028a",
																			"name": "Forbidden",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"metrics",
																						":metricKey",
																						"results"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						},
																						{
																							"key": "metricKey",
																							"value": "nostrud sunt cupidatat dolore qui",
																							"description": "(Required) The metric key"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																		},
																		{
																			"id": "19d7d836-6e85-4dbe-bac8-5eb9efb6cc8e",
																			"name": "Invalid resource identifier",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"metrics",
																						":metricKey",
																						"results"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						},
																						{
																							"key": "metricKey",
																							"value": "nostrud sunt cupidatat dolore qui",
																							"description": "(Required) The metric key"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																		},
																		{
																			"id": "f962067a-ea33-4bb5-bc89-69c846779d47",
																			"name": "Rate limited",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Authorization",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments/:experimentKey/metrics/:metricKey/results",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"projects",
																						":projectKey",
																						"environments",
																						":environmentKey",
																						"experiments",
																						":experimentKey",
																						"metrics",
																						":metricKey",
																						"results"
																					],
																					"variable": [
																						{
																							"key": "projectKey",
																							"value": "et dolor Duis",
																							"description": "(Required) The project key"
																						},
																						{
																							"key": "environmentKey",
																							"value": "consequat veniam dolor elit",
																							"description": "(Required) The environment key"
																						},
																						{
																							"key": "experimentKey",
																							"value": "ullamco do",
																							"description": "(Required) The experiment key"
																						},
																						{
																							"key": "metricKey",
																							"value": "nostrud sunt cupidatat dolore qui",
																							"description": "(Required) The metric key"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																		}
																	]
																}
															],
															"id": "deef5330-0293-4be9-be7a-c50bfd1d8857"
														},
														{
															"name": "Get experiments",
															"id": "213e4252-294f-498a-8c2d-52cd00b14950",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"experiments"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "-73455184",
																			"description": "The maximum number of experiments to return. Defaults to 20."
																		},
																		{
																			"key": "offset",
																			"value": "59072961",
																			"description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
																		},
																		{
																			"key": "filter",
																			"value": "laboris veniam",
																			"description": "A comma-separated list of filters. Each filter is of the form `field:value`. Supported fields are explained above."
																		},
																		{
																			"key": "expand",
																			"value": "consectetur exercitation enim et dolore",
																			"description": "A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above."
																		},
																		{
																			"key": "lifecycleState",
																			"value": "anim labore dolor fugiat nostrud",
																			"description": "A comma-separated list of experiment archived states. Supports `archived`, `active`, or both. Defaults to `active` experiments."
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																},
																"description": "Get details about all experiments in an environment.\n\n### Filtering experiments\n\nLaunchDarkly supports the `filter` query param for filtering, with the following fields:\n\n- `flagKey` filters for only experiments that use the flag with the given key.\n- `metricKey` filters for only experiments that use the metric with the given key.\n- `status` filters for only experiments with an iteration with the given status. An iteration can have the status `not_started`, `running` or `stopped`.\n\nFor example, `filter=flagKey:my-flag,status:running,metricKey:page-load-ms` filters for experiments for the given flag key and the given metric key which have a currently running iteration.\n\n### Expanding the experiments response\n\nLaunchDarkly supports four fields for expanding the \"Get experiments\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n- `previousIterations` includes all iterations prior to the current iteration. By default only the current iteration is included in the response.\n- `draftIteration` includes a draft of an iteration which has not been started yet, if any.\n- `secondaryMetrics` includes secondary metrics. By default only the primary metric is included in the response.\n- `treatments` includes all treatment and parameter details. By default treatment data is not included in the response.\n\nFor example, `expand=draftIteration,treatments` includes the `draftIteration` and `treatments` fields in the response. If fields that you request with the `expand` query parameter are empty, they are not included in the response.\n"
															},
															"response": [
																{
																	"id": "3fad9338-c10c-48f0-a998-e0db21980bd9",
																	"name": "Experiment collection response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"total_count\": 55443982,\n  \"_links\": {\n    \"sint76\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolorede7\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
																},
																{
																	"id": "830b21c8-f58f-4296-bd3b-79ba294783eb",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "dabe5cb9-c962-4e0b-9ec6-364628dec0c6",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "c28be5b4-74ed-4162-9c5c-af6f59f5497e",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "49998935-0f30-4059-8dbb-a577e5e12fda",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "6fbc426f-496c-4526-aa1c-275f54e92310",
																	"name": "Method not allowed",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
																},
																{
																	"id": "bacc3fac-89ed-4008-80f7-a1c2ae639ca3",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments?limit=-73455184&offset=59072961&filter=laboris veniam&expand=consectetur exercitation enim et dolore&lifecycleState=anim labore dolor fugiat nostrud",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "-73455184"
																				},
																				{
																					"key": "offset",
																					"value": "59072961"
																				},
																				{
																					"key": "filter",
																					"value": "laboris veniam"
																				},
																				{
																					"key": "expand",
																					"value": "consectetur exercitation enim et dolore"
																				},
																				{
																					"key": "lifecycleState",
																					"value": "anim labore dolor fugiat nostrud"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Create experiment",
															"id": "5863179f-6761-440c-9868-1957806dac30",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"experiments"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																},
																"description": "Create an experiment. To learn more, read [Creating experiments](https://docs.launchdarkly.com/home/creating-experiments)."
															},
															"response": [
																{
																	"id": "491526c2-76ff-45bd-9c36-ae785348779d",
																	"name": "Experiment response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"key\": \"example-experiment\",\n  \"name\": \"Example experiment\",\n  \"_maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment/experiments/my-experiment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"12ab3c45de678910fgh12345\",\n  \"description\": \"An example experiment, used in testing\",\n  \"archivedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentIteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"draftIteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"previousIterations\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
																},
																{
																	"id": "8374f899-5dd3-4a73-8f02-4741739f57ec",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "8276def6-3638-4985-a959-39b0502e4272",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "50f516dd-c3c9-4643-8361-860fa691b4c6",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "8f600804-faf8-47bb-a840-6fa258e26174",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "dfb4f970-199d-43d5-98d0-402462d5c0d6",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Example experiment\",\n  \"maintainerId\": \"12ab3c45de678910fgh12345\",\n  \"key\": \"example-experiment\",\n  \"iteration\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"An example experiment, used in testing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/experiments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"environments",
																				":environmentKey",
																				"experiments"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "eba3ad23-541c-49a2-89d2-4955daca5a81"
												},
												{
													"name": "Get environment",
													"id": "2125299a-8f1c-4c4a-af38-c249af7e3dd2",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "> ### Approval settings\n>\n> The `approvalSettings` key is only returned when the Flag Approvals feature is enabled.\n\nGet an environment given a project and key.\n"
													},
													"response": [
														{
															"id": "d5607e67-74fe-46a6-b72f-c318438fa87f",
															"name": "Environment response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\",\n  \"apiKey\": \"XYZ\",\n  \"mobileKey\": \"XYZ\",\n  \"color\": \"F5A623\",\n  \"defaultTtl\": 5,\n  \"secureMode\": true,\n  \"defaultTrackEvents\": false,\n  \"requireComments\": true,\n  \"confirmChanges\": true,\n  \"tags\": [\n    \"ops\"\n  ],\n  \"approvalSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "8b411c3c-98e1-4161-8585-b2cdc3a25954",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "b7d745a1-2bbc-4e91-982b-a3ce84c3d69d",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "a3adbf07-58c3-4039-92fe-70845e0d4830",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "3c9f6748-c1f0-4f13-b084-0967098e7648",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Update environment",
													"id": "d1c69169-fda3-4072-b3b2-9c345722cd9d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "\nUpdate an environment. Requires a [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes to the environment.\n\nTo update fields in the environment object that are arrays, set the `path` to the name of the field and then append `/<array index>`. Using `/0` appends to the beginning of the array.\n\n### Approval settings\n\nThis request only returns the `approvalSettings` key if the [Flag Approvals](https://docs.launchdarkly.com/home/feature-workflows/approvals) feature is enabled.\n\nOnly the `canReviewOwnRequest`, `canApplyDeclinedChanges`, `minNumApprovals`, `required` and `requiredApprovalTagsfields` are editable.\n\nIf you try to patch the environment by setting both `required` and `requiredApprovalTags`, the request fails and an error appears. You can specify either required approvals for all flags in an environment or those with specific tags, but not both.\n"
													},
													"response": [
														{
															"id": "55611acb-6ec2-479f-b33b-b6892fae4258",
															"name": "Environment response",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\",\n  \"apiKey\": \"XYZ\",\n  \"mobileKey\": \"XYZ\",\n  \"color\": \"F5A623\",\n  \"defaultTtl\": 5,\n  \"secureMode\": true,\n  \"defaultTrackEvents\": false,\n  \"requireComments\": true,\n  \"confirmChanges\": true,\n  \"tags\": [\n    \"ops\"\n  ],\n  \"approvalSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "d32b9f65-d26a-49df-9ee5-0993266951b1",
															"name": "Invalid request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "19a28e8f-2165-4382-a11e-bf24983b52c9",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "c22c2bcd-0662-4658-9ad9-5fd9455f1bbf",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "0d8ab601-eed2-4826-9366-518d56e51cc0",
															"name": "Status conflict",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
														},
														{
															"id": "25bb3384-7248-4769-98e9-477f1e542554",
															"name": "Rate limited",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/requireComments\",\n    \"value\": true\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Delete environment",
													"id": "6a642ed9-b9aa-4093-82fd-370c4d5b989a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Delete a environment by key."
													},
													"response": [
														{
															"id": "13acb44a-72cd-44a5-ba77-f1375f6a5ed9",
															"name": "Action succeeded",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "643ae0fb-4d8e-44ea-afbf-18095e6436cb",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "02c02608-92f5-461b-a8e4-b307c3f0c06c",
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "afd10d95-67f8-4524-867a-2778a7f4287e",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "638f25b8-87ba-4bc8-831f-389aea22cc3e",
															"name": "Rate limited",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Reset environment SDK key",
													"id": "a876dbef-ddec-4dc1-a856-bfe522b17851",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey",
																"apiKey"
															],
															"query": [
																{
																	"key": "expiry",
																	"value": "-91552401",
																	"description": "The time at which you want the old SDK key to expire, in UNIX milliseconds. By default, the key expires immediately."
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Reset an environment's SDK key with an optional expiry time for the old key."
													},
													"response": [
														{
															"id": "7a162071-954c-49d1-8734-b9d4cb7e3ae8",
															"name": "Environment response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"apiKey"
																	],
																	"query": [
																		{
																			"key": "expiry",
																			"value": "-91552401"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\",\n  \"apiKey\": \"XYZ\",\n  \"mobileKey\": \"XYZ\",\n  \"color\": \"F5A623\",\n  \"defaultTtl\": 5,\n  \"secureMode\": true,\n  \"defaultTrackEvents\": false,\n  \"requireComments\": true,\n  \"confirmChanges\": true,\n  \"tags\": [\n    \"ops\"\n  ],\n  \"approvalSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "9d4a1b3c-c95d-4b98-82e9-f1930d021b0b",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"apiKey"
																	],
																	"query": [
																		{
																			"key": "expiry",
																			"value": "-91552401"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "50be34ff-da86-4c2d-a34a-14992e57fc7a",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"apiKey"
																	],
																	"query": [
																		{
																			"key": "expiry",
																			"value": "-91552401"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "10239152-c019-4567-bf05-b49545ccab6b",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"apiKey"
																	],
																	"query": [
																		{
																			"key": "expiry",
																			"value": "-91552401"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "12c30b8f-b82c-4b27-b44d-b039fd69c936",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"apiKey"
																	],
																	"query": [
																		{
																			"key": "expiry",
																			"value": "-91552401"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "740dfa27-91da-47a9-9bbd-d3f1b6ebfa73",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/apiKey?expiry=-91552401",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"apiKey"
																	],
																	"query": [
																		{
																			"key": "expiry",
																			"value": "-91552401"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Evaluate flags for context instance",
													"id": "77de05a1-5c57-4096-bd13-b9ff87c3e0ab",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey",
																"flags",
																"evaluate"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "72458342",
																	"description": "The number of feature flags to return. Defaults to -1, which returns all flags"
																},
																{
																	"key": "offset",
																	"value": "59072961",
																	"description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
																},
																{
																	"key": "sort",
																	"value": "aute irure culpa",
																	"description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order"
																},
																{
																	"key": "filter",
																	"value": "sed",
																	"description": "A comma-separated list of filters. Each filter is of the form field:value. Supports the same filters as the List Feature Flags API."
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Evaluate flags for a context instance, for example, to determine the expected flag variation. **Do not use this API instead of an SDK.** The LaunchDarkly SDKs are specialized for the tasks of evaluating feature flags in your application at scale and generating analytics events based on those evaluations. This API is not designed for that use case. Any evaluations you perform with this API will not be reflected in features such as flag statuses and flag insights. Context instances evaluated by this API will not appear in the Contexts list. To learn more, read [Comparing LaunchDarkly's SDKs and REST API](https://docs.launchdarkly.com/guide/api/comparing-sdk-rest-api)."
													},
													"response": [
														{
															"id": "234eb247-fd9a-4ee4-b302-8b28671a4158",
															"name": "Flag evaluation collection response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"flags",
																		"evaluate"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "72458342"
																		},
																		{
																			"key": "offset",
																			"value": "59072961"
																		},
																		{
																			"key": "sort",
																			"value": "aute irure culpa"
																		},
																		{
																			"key": "filter",
																			"value": "sed"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate\",\n          \"type\": \"application/json\"\n        },\n        \"site\": {\n          \"href\": \"/my-project/my-environment/features/sort.order/targeting\",\n          \"type\": \"text/html\"\n        }\n      },\n      \"_value\": true,\n      \"key\": \"sort.order\",\n      \"name\": \"SortOrder\",\n      \"reason\": {\n        \"kind\": \"FALLTHROUGH\"\n      }\n    },\n    {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate\",\n          \"type\": \"application/json\"\n        },\n        \"site\": {\n          \"href\": \"/my-project/my-environment/features/alternate.page/targeting\",\n          \"type\": \"text/html\"\n        }\n      },\n      \"_value\": false,\n      \"key\": \"alternate.page\",\n      \"name\": \"AlternatePage\",\n      \"reason\": {\n        \"kind\": \"RULE_MATCH\",\n        \"ruleID\": \"b2530cdf-14c6-4e16-b660-00239e08f19b\",\n        \"ruleIndex\": 1\n      }\n    }\n  ],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/{projectKey}/environments/{environmentKey}/flags/evaluate\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 2\n}"
														},
														{
															"id": "92ac2a65-544f-4e75-8539-12c283caa200",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"flags",
																		"evaluate"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "72458342"
																		},
																		{
																			"key": "offset",
																			"value": "59072961"
																		},
																		{
																			"key": "sort",
																			"value": "aute irure culpa"
																		},
																		{
																			"key": "filter",
																			"value": "sed"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "942705cb-e730-41a2-aeba-0414ab2a8506",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"flags",
																		"evaluate"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "72458342"
																		},
																		{
																			"key": "offset",
																			"value": "59072961"
																		},
																		{
																			"key": "sort",
																			"value": "aute irure culpa"
																		},
																		{
																			"key": "filter",
																			"value": "sed"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "5b67d0f4-3687-4ebe-8b3b-438ee7cc0e63",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"flags",
																		"evaluate"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "72458342"
																		},
																		{
																			"key": "offset",
																			"value": "59072961"
																		},
																		{
																			"key": "sort",
																			"value": "aute irure culpa"
																		},
																		{
																			"key": "filter",
																			"value": "sed"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "a4c5dfa8-7e7d-4539-bf37-1fe8d9967b87",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"flags",
																		"evaluate"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "72458342"
																		},
																		{
																			"key": "offset",
																			"value": "59072961"
																		},
																		{
																			"key": "sort",
																			"value": "aute irure culpa"
																		},
																		{
																			"key": "filter",
																			"value": "sed"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "355e1c7a-16a2-45ea-b777-d8f507c6e652",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"user-key-123abc\",\n  \"kind\": \"user\",\n  \"otherAttribute\": \"other attribute value\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/flags/evaluate?limit=72458342&offset=59072961&sort=aute irure culpa&filter=sed",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"flags",
																		"evaluate"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "72458342"
																		},
																		{
																			"key": "offset",
																			"value": "59072961"
																		},
																		{
																			"key": "sort",
																			"value": "aute irure culpa"
																		},
																		{
																			"key": "filter",
																			"value": "sed"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Get followers of all flags in a given project and environment",
													"id": "160d922d-5370-4054-9ad0-b0ca2322d057",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/followers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey",
																"followers"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Get followers of all flags in a given environment and project"
													},
													"response": [
														{
															"id": "d3394892-33d0-4f8b-bc02-3773dd5253de",
															"name": "Flags and flag followers response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/flags/my-flay/environments/my-environment/followers\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
														},
														{
															"id": "1daaa746-4f4f-422a-b201-4783786b730f",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "d1ad893d-b80a-46f6-9acf-6a397682a4e4",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "a49264af-df5b-47e5-ac35-d48428bc1eaa",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "abbd7ca0-9c69-4b78-8443-b1dc84287b3b",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														}
													]
												},
												{
													"name": "Reset environment mobile SDK key",
													"id": "99e4a2ca-720c-400e-aa61-6636dcd14303",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey",
																"mobileKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Reset an environment's mobile key. The optional expiry for the old key is deprecated for this endpoint, so the old key will always expire immediately."
													},
													"response": [
														{
															"id": "be8396ed-1cc6-498b-a423-0f9e5bf02ff8",
															"name": "Environment response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"mobileKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\",\n  \"apiKey\": \"XYZ\",\n  \"mobileKey\": \"XYZ\",\n  \"color\": \"F5A623\",\n  \"defaultTtl\": 5,\n  \"secureMode\": true,\n  \"defaultTrackEvents\": false,\n  \"requireComments\": true,\n  \"confirmChanges\": true,\n  \"tags\": [\n    \"ops\"\n  ],\n  \"approvalSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "59889a46-bc38-49e3-88d9-d57a036fb60a",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"mobileKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "4af15163-dcb6-4b8c-ab87-ff243ce36d3e",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"mobileKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "6fe5523e-ff25-4692-9fb4-534a959ce62a",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"mobileKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "953f55a0-fee4-4285-a6a8-85643a92ce04",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"mobileKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "38acd2a3-8c98-4173-a707-9bb84c84aa7e",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/mobileKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"mobileKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "List segment memberships for context instance",
													"id": "20bbe617-7999-4888-84ab-755abc1a715c",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"someuser\",\n  \"kind\": \"user\",\n  \"moreComplex\": {\n    \"morethanone\": [\n      1,\n      2,\n      3\n    ],\n    \"yes\": \"please\"\n  },\n  \"name\": \"Some User\",\n  \"something\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/segments/evaluate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments",
																":environmentKey",
																"segments",
																"evaluate"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "For a given context instance with attributes, get membership details for all segments"
													},
													"response": [
														{
															"id": "f80bdfae-fe08-478c-be69-2f9c7bac47e6",
															"name": "Context instance segment membership collection response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"someuser\",\n  \"kind\": \"user\",\n  \"moreComplex\": {\n    \"morethanone\": [\n      1,\n      2,\n      3\n    ],\n    \"yes\": \"please\"\n  },\n  \"name\": \"Some User\",\n  \"something\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/segments/evaluate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"segments",
																		"evaluate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"in_24\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"in_132\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ex_f2d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "d40e130f-53a7-4b38-b622-ba229f2cd19d",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"someuser\",\n  \"kind\": \"user\",\n  \"moreComplex\": {\n    \"morethanone\": [\n      1,\n      2,\n      3\n    ],\n    \"yes\": \"please\"\n  },\n  \"name\": \"Some User\",\n  \"something\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/segments/evaluate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"segments",
																		"evaluate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "fe6df231-e7d7-46b4-83e6-1328df3b676c",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"someuser\",\n  \"kind\": \"user\",\n  \"moreComplex\": {\n    \"morethanone\": [\n      1,\n      2,\n      3\n    ],\n    \"yes\": \"please\"\n  },\n  \"name\": \"Some User\",\n  \"something\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/segments/evaluate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"segments",
																		"evaluate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "708d18b4-b1d9-4d1f-9e4c-0475d097fe28",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"key\": \"someuser\",\n  \"kind\": \"user\",\n  \"moreComplex\": {\n    \"morethanone\": [\n      1,\n      2,\n      3\n    ],\n    \"yes\": \"please\"\n  },\n  \"name\": \"Some User\",\n  \"something\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments/:environmentKey/segments/evaluate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"environments",
																		":environmentKey",
																		"segments",
																		"evaluate"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														}
													]
												}
											],
											"id": "f28e6daf-8a89-471d-a17c-6f393f2ca9a2"
										},
										{
											"name": "List environments",
											"id": "e542e6ed-73c9-4829-897b-1e9b5d4874c2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"environments"
													],
													"query": [
														{
															"key": "limit",
															"value": "39000778",
															"description": "The number of environments to return in the response. Defaults to 20."
														},
														{
															"key": "offset",
															"value": "56195558",
															"description": "Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
														},
														{
															"key": "filter",
															"value": "ex non dolore",
															"description": "A comma-separated list of filters. Each filter is of the form `field:value`."
														},
														{
															"key": "sort",
															"value": "cupidatat Duis commodo officia",
															"description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order."
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Return a list of environments for the specified project.\n\nBy default, this returns the first 20 environments. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the `_links` field that returns. If those links do not appear, the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page, because there is no previous page and you cannot return to the first page when you are already on the first page.\n\n### Filtering environments\n\nLaunchDarkly supports two fields for filters:\n- `query` is a string that matches against the environments' names and keys. It is not case sensitive.\n- `tags` is a `+` separate list of environment tags. It filters the list of environments that have all of the tags in the list.\n\nFor example, the filter `query:abc,tags:tag-1+tag-2` matches environments with the string `abc` in their name or key and also are tagged with `tag-1` and `tag-2`. The filter is not case-sensitive.\n\n### Sorting environments\n\nLaunchDarkly supports two fields for sorting:\n- `name` sorts by environment name.\n- `createdOn` sorts by the creation date of the environment.\n\nFor example, `sort=name` sorts the response by environment name in ascending order.\n"
											},
											"response": [
												{
													"id": "334fb377-d735-476a-9542-84e3a0c69f74",
													"name": "Environments collection response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_links\": {\n    \"minim_7d0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"incididunt_1\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalCount\": 2,\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
												},
												{
													"id": "e3f960c9-eafb-4eee-b3eb-b4b0e1050797",
													"name": "Invalid request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "50099407-3b41-4991-a92a-d99c991edc5a",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "51ac992d-7078-4b11-9486-f66b7c2d1816",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "7ae06e3d-00db-432a-b2c5-f5f85569f6ce",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "cfc974f7-2b5e-4bae-8e84-20dbb5c3ac78",
													"name": "Method not allowed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
												},
												{
													"id": "1fb40f90-081a-4244-8710-7df2081b929f",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments?limit=39000778&offset=56195558&filter=ex non dolore&sort=cupidatat Duis commodo officia",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "39000778"
																},
																{
																	"key": "offset",
																	"value": "56195558"
																},
																{
																	"key": "filter",
																	"value": "ex non dolore"
																},
																{
																	"key": "sort",
																	"value": "cupidatat Duis commodo officia"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Create environment",
											"id": "151131cd-c8e3-44cb-9025-4ce79b178cc3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"environments"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "> ### Approval settings\n>\n> The `approvalSettings` key is only returned when the Flag Approvals feature is enabled.\n>\n> You cannot update approval settings when creating new environments. Update approval settings with the PATCH Environment API.\n\nCreate a new environment in a specified project with a given name, key, swatch color, and default TTL.\n"
											},
											"response": [
												{
													"id": "782b45e2-7ffe-4440-8c8f-87b063ce5317",
													"name": "Environment response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/environments/my-environment\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\",\n  \"apiKey\": \"XYZ\",\n  \"mobileKey\": \"XYZ\",\n  \"color\": \"F5A623\",\n  \"defaultTtl\": 5,\n  \"secureMode\": true,\n  \"defaultTrackEvents\": false,\n  \"requireComments\": true,\n  \"confirmChanges\": true,\n  \"tags\": [\n    \"ops\"\n  ],\n  \"approvalSettings\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "bf51bb8c-28d0-417f-88ee-2791dbd68809",
													"name": "Invalid request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "c9225c77-98df-41bd-910c-0e2207f5b6c8",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "bbd90693-004f-4469-89c2-ac9bb00cf002",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "f6430f84-1117-4845-b729-e9e95422ef33",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "504dbde2-cd5b-45b9-9c58-2cdccfbba24f",
													"name": "Status conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "d05263f3-22e9-48ec-b044-02963a74bc5f",
													"name": "Rate limited",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"color\": \"DADBEE\",\n  \"key\": \"my-environment\",\n  \"name\": \"My Environment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/environments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"environments"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "6b25aa81-29a0-4394-bd0d-468aaa10790c"
								},
								{
									"name": "experimentation-settings",
									"item": [
										{
											"name": "Get experimentation settings",
											"id": "28f9d6e5-207d-415e-8d13-2cca3e60c925",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"experimentation-settings"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Get current experimentation settings for the given project"
											},
											"response": [
												{
													"id": "d47b919c-ac9c-4279-a5b3-deb25243321b",
													"name": "Experimentation settings response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_projectId\": \"esse veniam\",\n  \"_projectKey\": \"ad\",\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"quis141\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deseruntee9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "454b9c71-75b5-4fda-98e2-d60504fd4589",
													"name": "Invalid request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "b6fec61d-6aad-44fb-86d7-556d353a79de",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "aa7cf1e9-a106-4429-ac83-57213475517f",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "edb43056-1643-48bf-88bd-4bdaa388f488",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "3edd3159-d85b-4fc1-a89c-771fad665927",
													"name": "Method not allowed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
												},
												{
													"id": "75ca3616-a96e-4ce5-9906-27a836e8f4f7",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update experimentation settings",
											"id": "b397e3b0-4475-4117-b3f2-74f611f8ff2b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"experimentation-settings"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Update experimentation settings for the given project"
											},
											"response": [
												{
													"id": "4872ad67-a388-4112-aacb-55d720770631",
													"name": "Experimentation settings response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_projectId\": \"dolore\",\n  \"_projectKey\": \"occaecat ut non c\",\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"nulla_c66\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id795\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "074a991d-17c7-48b8-9ede-d8e98cbb0707",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "1a013311-bc89-4ffe-8ccc-0f18e77565e7",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "ba78df1e-c82e-4db6-89d5-f6d800899f5b",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "4f21b879-a25b-47e3-aa32-6a59610007e5",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "a0965487-3c07-4f35-915a-8128930617a3",
													"name": "Method not allowed",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
												},
												{
													"id": "da766094-ae68-4826-8fa4-e7e5a2c0dad8",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"randomizationUnits\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/experimentation-settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"experimentation-settings"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "4d8d0206-b3dc-435b-84be-7bcaf649d0f0"
								},
								{
									"name": "flag-defaults",
									"item": [
										{
											"name": "Get flag defaults for project",
											"id": "281c4419-8752-4279-b6f0-1394d0fbba6a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"flag-defaults"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Get the flag defaults for a specific project."
											},
											"response": [
												{
													"id": "4ce73474-d808-4849-8938-c7924421151b",
													"name": "Flag defaults response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_links\": {\n    \"quis501\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tempora\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "2b24a782-7475-4a18-9cef-9bccfab7e869",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "f0b14c1e-c986-4891-85c4-04e5f4bee9d2",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "10ec76f0-3ee4-4d79-beeb-267d19bd7b02",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												}
											]
										},
										{
											"name": "Update flag default for project",
											"id": "96642d0a-4919-4b45-ba59-02a1aea7d5aa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"flag-defaults"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Update a flag default. Requires a [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes to the flag default."
											},
											"response": [
												{
													"id": "ac9fcb2f-5862-4ffc-b8a3-67a73f4d7911",
													"name": "Flag default response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"anim_b77\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "e9976591-ff49-4ee2-93e9-02ad6d193d87",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "2a5f9453-eeb7-4a2d-9ee2-15a6a647fa7f",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "2e3991e7-5967-4a15-941d-eb0970f0122f",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "d7d5b639-ae6e-4cac-9c67-c66cf79a86f5",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "b9c62bf3-9f0a-4085-a63c-08a2916ad16a",
													"name": "Status conflict",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "ef43e1b6-8eb7-42b0-a25f-3bfc615b648d",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Create or update flag defaults for project",
											"id": "5f401623-6a47-4242-963b-3bcecd539e69",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"flag-defaults"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												},
												"description": "Create or update flag defaults for a project."
											},
											"response": [
												{
													"id": "00f81169-354d-4f45-afda-e47f8cf1f086",
													"name": "Flag default response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"eaae\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nisi_4c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolorafb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ullamco9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "15ce24a7-8e73-4f8e-a52a-a84c9fbf608a",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "ba5a01c1-50e5-4294-bfb9-89769637f1b6",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "e0ae0130-4a70-4029-bad8-fc90faa6df3a",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "e66c2adc-f567-440d-b362-d8ff384bddeb",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "5ebccf0d-db71-4739-ae74-97ac30cf4ded",
													"name": "Status conflict",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "3500aee6-b81f-4fcb-96f2-e541c912fdad",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"tag-1\",\n    \"tag-2\"\n  ],\n  \"temporary\": true,\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"booleanDefaults\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flag-defaults",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flag-defaults"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "e5c598aa-07f3-414b-8c3d-13f7d79a685d"
								},
								{
									"name": "flags/{featureFlagKey}/environments/{environmentKey}",
									"item": [
										{
											"name": "approval-requests",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Get approval request for a flag",
															"id": "11fcf555-f410-45d7-8135-c5ec280f03d0",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "quis culpa consectetur ex id",
																			"description": "(Required) The feature flag approval request ID"
																		}
																	]
																},
																"description": "Get a single approval request for a feature flag."
															},
															"response": [
																{
																	"id": "3516aa0b-9285-4e3d-88d7-88c1a1b3e8c0",
																	"name": "Approval request response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_id\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serviceKind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reviewStatus\": \"pending\",\n  \"allReviews\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"status\": \"pending\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Loremcb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sed8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requestorId\": \"12ab3c45de678910abc12345\",\n  \"description\": \"example: request approval from someone\",\n  \"appliedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"appliedByMemberId\": \"1234a56b7c89d012345e678f\",\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"12ab3c45de678910abc12345\",\n  \"integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customWorkflowMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
																},
																{
																	"id": "77f03daa-2535-4dd4-9cae-5b047fb21253",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "1593647d-141a-460d-afdf-6dedae4897c9",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "f3dfbda7-e2fe-4188-b1ae-2c79a3a74b3a",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "70e3816a-3387-4517-8c3e-97fc76fa9137",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Delete approval request for a flag",
															"id": "9a9c9d63-6a2d-4dfe-ad42-e3e42f4d7d40",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "quis culpa consectetur ex id",
																			"description": "(Required) The feature flag approval request ID"
																		}
																	]
																},
																"description": "Delete an approval request for a feature flag."
															},
															"response": [
																{
																	"id": "3ef040ac-a23c-4881-b04b-dc8de8df1855",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "cfc0d1dd-382a-4551-a8b5-e9235b73d18f",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "47114d7e-ae0e-4c49-b92e-183ef95ef3d8",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "af7165e1-ed1d-4a96-b754-e00fd2c38ad8",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "633b9d7a-6034-4144-b818-a9dc580b312c",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Apply approval request for a flag",
															"id": "361805c1-8205-4e90-b507-8d85be3259c0",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests",
																		":id",
																		"apply"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "quis culpa consectetur ex id",
																			"description": "(Required) The feature flag approval request ID"
																		}
																	]
																},
																"description": "Apply an approval request that has been approved."
															},
															"response": [
																{
																	"id": "7b00aad0-ea9b-436b-8684-f081826438d6",
																	"name": "Approval request apply response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_id\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serviceKind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reviewStatus\": \"pending\",\n  \"allReviews\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"status\": \"pending\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Loremcb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sed8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requestorId\": \"12ab3c45de678910abc12345\",\n  \"description\": \"example: request approval from someone\",\n  \"appliedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"appliedByMemberId\": \"1234a56b7c89d012345e678f\",\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"12ab3c45de678910abc12345\",\n  \"integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customWorkflowMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
																},
																{
																	"id": "da38ca32-5fd2-4cca-ad18-8b3d498a937b",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "17b108a2-7477-4d73-a0c8-4e1947871126",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "ce60e3f8-41c3-4a2b-bff5-327b86cbfebd",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "1c60b567-a501-4a12-a285-63b662119cb7",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "05e79616-4284-4dc7-924d-1755dae22608",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Review approval request for a flag",
															"id": "490baa6a-3229-4309-b34b-d3600bb0645a",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests",
																		":id",
																		"reviews"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "quis culpa consectetur ex id",
																			"description": "(Required) The feature flag approval request ID"
																		}
																	]
																},
																"description": "Review an approval request by approving or denying changes."
															},
															"response": [
																{
																	"id": "0dd22dcd-f4ff-4aad-9052-2d19536f72c1",
																	"name": "Approval request review response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"reviews"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_id\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serviceKind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reviewStatus\": \"pending\",\n  \"allReviews\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"status\": \"pending\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Loremcb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sed8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requestorId\": \"12ab3c45de678910abc12345\",\n  \"description\": \"example: request approval from someone\",\n  \"appliedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"appliedByMemberId\": \"1234a56b7c89d012345e678f\",\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"12ab3c45de678910abc12345\",\n  \"integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customWorkflowMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
																},
																{
																	"id": "728962b6-83d0-45b7-b502-ea43efbc1248",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"reviews"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "9e93a767-27b3-4e2e-ba37-2bdb166f2488",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"reviews"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "76d89d8a-bcaf-492d-9e5c-be9acec10e90",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"reviews"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "58894976-823f-4836-9172-1ed47046dc6a",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"reviews"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "428ad27f-6e0a-457e-b199-90d85a7e6271",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"kind\": \"approve\",\n  \"comment\": \"Looks good, thanks for updating\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests/:id/reviews",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"approval-requests",
																				":id",
																				"reviews"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "quis culpa consectetur ex id",
																					"description": "(Required) The feature flag approval request ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "afeef5e1-aa63-4211-8343-a71b0217de05"
												},
												{
													"name": "List approval requests for a flag",
													"id": "c058defd-3dbe-4e9e-a09d-e265d2bf9a1a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Get all approval requests for a feature flag."
													},
													"response": [
														{
															"id": "a24aeada-427c-4d0d-9b41-a348e040f0a4",
															"name": "Approval request collection response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"sint_d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sit_eea\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "f0f31de0-db41-4506-8673-5b4fb5756724",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "d27bdf41-597c-46bf-8923-c019a113e0b9",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "41f47a69-7b24-4bb7-86d3-866b8f0590f6",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "79419912-493a-4075-8d8e-632afa4408e1",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Create approval request for a flag",
													"id": "7445445a-07ab-4037-9404-4f367b6543cc",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Requesting to update targeting\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"6297ed79dee7dc14e1f9a80c\",\n  \"integrationConfig\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Create an approval request for a feature flag."
													},
													"response": [
														{
															"id": "64825c6c-a459-4a66-b22a-2e4931fd284c",
															"name": "Approval request response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Requesting to update targeting\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"6297ed79dee7dc14e1f9a80c\",\n  \"integrationConfig\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_id\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serviceKind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reviewStatus\": \"pending\",\n  \"allReviews\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"status\": \"pending\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"in_ea\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requestorId\": \"12ab3c45de678910abc12345\",\n  \"description\": \"example: request approval from someone\",\n  \"appliedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"appliedByMemberId\": \"1234a56b7c89d012345e678f\",\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"12ab3c45de678910abc12345\",\n  \"integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customWorkflowMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
														},
														{
															"id": "ff729dbd-8aab-4eba-95ce-dd82bef43194",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Requesting to update targeting\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"6297ed79dee7dc14e1f9a80c\",\n  \"integrationConfig\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "fd2fb2af-01cb-4fab-b12c-a573ef7f1c7f",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Requesting to update targeting\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"6297ed79dee7dc14e1f9a80c\",\n  \"integrationConfig\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "46397a86-8231-441c-947f-8022e5d01976",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Requesting to update targeting\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"6297ed79dee7dc14e1f9a80c\",\n  \"integrationConfig\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "47253e47-8a36-45d9-976c-756e481a963d",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Requesting to update targeting\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"6297ed79dee7dc14e1f9a80c\",\n  \"integrationConfig\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"approval-requests"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "a3853675-47bc-48ab-a117-f99b2d9565de"
										},
										{
											"name": "followers",
											"item": [
												{
													"name": "{memberId}",
													"item": [
														{
															"name": "Add a member as a follower of a flag in a project and environment",
															"id": "3c213787-e32e-4f25-8640-ad8feb23bbaf",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers",
																		":memberId"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "memberId",
																			"value": "adipisicing",
																			"description": "(Required) The memberId of the member to add as a follower of the flag"
																		}
																	]
																},
																"description": "Add a member as a follower to a flag in a project and environment"
															},
															"response": [
																{
																	"id": "12c11bfd-f9f8-40a9-aab9-49ab7414a74b",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "adipisicing",
																					"description": "(Required) The memberId of the member to add as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "33521027-7130-49e8-858e-4916324d5b57",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "adipisicing",
																					"description": "(Required) The memberId of the member to add as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "a0ba1234-54dd-49d6-8434-54d85bc29479",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "adipisicing",
																					"description": "(Required) The memberId of the member to add as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "949c9bbc-548a-4430-b182-92a3c5d88fa5",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "adipisicing",
																					"description": "(Required) The memberId of the member to add as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "5f46d420-699a-476b-bead-c3dd45136b66",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "adipisicing",
																					"description": "(Required) The memberId of the member to add as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																}
															]
														},
														{
															"name": "Remove a member as a follower of a flag in a project and environment",
															"id": "eb4201cb-b3ca-4358-94f7-e4ebec3b2a56",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers",
																		":memberId"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "memberId",
																			"value": "Duis Ut",
																			"description": "(Required) The memberId of the member to remove as a follower of the flag"
																		}
																	]
																},
																"description": "Remove a member as a follower to a flag in a project and environment"
															},
															"response": [
																{
																	"id": "13b07663-ef59-4846-bf52-e961c052fb22",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "Duis Ut",
																					"description": "(Required) The memberId of the member to remove as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "3afa17b4-ea0c-4ebc-94c9-7ced9e426647",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "Duis Ut",
																					"description": "(Required) The memberId of the member to remove as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "cc48498a-8b3d-44be-9e13-319ba51bc395",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "Duis Ut",
																					"description": "(Required) The memberId of the member to remove as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "fe12901c-964a-4180-a54e-2d2400c11a10",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "Duis Ut",
																					"description": "(Required) The memberId of the member to remove as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "d9dd0ba6-b043-429a-b817-502e1ab5a874",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers/:memberId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"followers",
																				":memberId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "memberId",
																					"value": "Duis Ut",
																					"description": "(Required) The memberId of the member to remove as a follower of the flag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																}
															]
														}
													],
													"id": "2f7c88d5-6912-4c14-9810-60bd6146660c"
												},
												{
													"name": "Get followers of a flag in a project and environment",
													"id": "efbf6740-93a2-4163-8d6a-8ff7fe821b68",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"followers"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Get a list of members following a flag in a project and environment"
													},
													"response": [
														{
															"id": "f11f5053-c7e3-411c-97a8-0a4b2e18d774",
															"name": "Flag followers response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project/flags/my-flay/environments/my-environment/followers\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
														},
														{
															"id": "f680fe62-a159-4a63-b457-28c812245a15",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "9591d681-3238-454d-adc6-5717c37bf696",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "f857d233-0324-4d50-af73-5c6e1a16231f",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "a49fca58-aef6-45ec-a9d4-450310888b4e",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														}
													]
												}
											],
											"id": "dd97e210-724d-4cbe-9687-c7beb746cd28"
										},
										{
											"name": "scheduled-changes",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Get a scheduled change",
															"id": "d7f98b56-bdd5-4f2d-a626-1e195bd1cccb",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "ullamco do dolor sit",
																			"description": "(Required) The scheduled change id"
																		}
																	]
																},
																"description": "Get a scheduled change that will be applied to the feature flag by ID."
															},
															"response": [
																{
																	"id": "825dca97-71ef-4513-930f-2e0c57321d11",
																	"name": "Scheduled changes response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": {},\n  \"_links\": {\n    \"sit_373\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"est_5e4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magnab4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
																},
																{
																	"id": "ee40db3e-703c-4591-bd15-b5aed759ea6c",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "d35abeee-4125-4009-9261-e98b2978f52d",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "4b9bff4a-5451-49a5-9257-0e329fc4c2ae",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Update scheduled changes workflow",
															"id": "28be6d3d-6997-4581-af2f-7b4409f88e15",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes",
																		":id"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true",
																			"description": "Whether to succeed (`true`) or fail (`false`) when these new instructions conflict with existing scheduled changes"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "in eiusmod Lorem anim deserunt",
																			"description": "(Required) The scheduled change ID"
																		}
																	]
																},
																"description": "\nUpdate a scheduled change, overriding existing instructions with the new ones. Updating a scheduled change uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating scheduled changes.\n\n#### deleteScheduledChange\n\nRemoves the scheduled change.\n\n#### replaceScheduledChangesInstructions\n\nRemoves the existing scheduled changes and replaces them with the new instructions.\n\n##### Parameters\n\n- `value`: An array of the new actions to perform when the execution date for these scheduled changes arrives. Supported scheduled actions are `turnFlagOn` and `turnFlagOff`.\n\nFor example, to replace the scheduled changes, use this request body:\n\n```json\n{\n  \"comment\": \"optional comment\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [ {\"kind\": \"turnFlagOff\"} ]\n    }\n  ]\n}\n```\n\n#### updateScheduledChangesExecutionDate\n\nUpdates the execution date for the scheduled changes.\n\n##### Parameters\n\n- `value`: the new execution date, in Unix milliseconds.\n"
															},
															"response": [
																{
																	"id": "77f753ac-0117-405f-87c2-f8ca1bd8fef9",
																	"name": "Scheduled changes response",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": {},\n  \"_links\": {\n    \"sit_373\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"est_5e4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magnab4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
																},
																{
																	"id": "9dc2102b-f90c-4fb8-8bae-d5ee556f14cc",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "77cdafa1-9cc7-4973-a8fe-a67519d6182f",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "28b1bee3-b8b7-47a6-8259-a47bdb51513c",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "d6c78bb2-6d87-4e0e-b587-1b30e0c92047",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "1b93af63-00ba-4652-8a4b-9e4f02111b52",
																	"name": "Method not allowed",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
																},
																{
																	"id": "4bf13e23-aa2e-4820-8d40-836de3c0190c",
																	"name": "Status conflict",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
																},
																{
																	"id": "015797e9-d378-4cc0-bfb4-314409be0110",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"Optional comment describing the update to the scheduled changes\",\n  \"instructions\": [\n    {\n      \"kind\": \"replaceScheduledChangesInstructions\",\n      \"value\": [\n        {\n          \"kind\": \"turnFlagOff\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id?ignoreConflicts=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"query": [
																				{
																					"key": "ignoreConflicts",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "in eiusmod Lorem anim deserunt",
																					"description": "(Required) The scheduled change ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Delete scheduled changes workflow",
															"id": "d51e62d3-407d-4ddb-a05b-35cc64702080",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "id",
																			"value": "ullamco do dolor sit",
																			"description": "(Required) The scheduled change id"
																		}
																	]
																},
																"description": "Delete a scheduled changes workflow."
															},
															"response": [
																{
																	"id": "869a1670-47b3-4887-a1c0-85c0df6f00e8",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "5a2333a9-458f-4fa3-af23-32bd0048815f",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "b936c773-44f2-4ab1-b910-6530003a83d0",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "148e7eb5-7b09-4a2f-a0e3-608a7793e883",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "79e9ddbd-ff7d-4b7e-b2a6-d43af360e4ac",
																	"name": "Method not allowed",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
																},
																{
																	"id": "09201c13-3c26-479d-a67c-e82affe6801e",
																	"name": "Status conflict",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
																},
																{
																	"id": "d7918544-3d82-4411-adca-b9c61fc6fe69",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"scheduled-changes",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "id",
																					"value": "ullamco do dolor sit",
																					"description": "(Required) The scheduled change id"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "4545325c-cf93-4687-a92a-848839bceafd"
												},
												{
													"name": "List scheduled changes",
													"id": "1e207702-a0d3-450d-938c-0161f959a6ca",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"scheduled-changes"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Get a list of scheduled changes that will be applied to the feature flag."
													},
													"response": [
														{
															"id": "3a0e6712-b1af-45b9-96e3-503da01e964d",
															"name": "Scheduled changes collection response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"cupidatat_3e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "81219f20-5632-4663-8236-7f7374e022c7",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "0a7b92a0-4d42-4a2a-a8b4-33d67995f8fa",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "aa95874c-fb94-476f-aeb9-9fd9aee568ac",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "5c31c420-5d72-4009-8a95-bf2881faf96f",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														}
													]
												},
												{
													"name": "Create scheduled changes workflow",
													"id": "e14fb649-4d99-47e9-a951-44b07c941b8f",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"scheduled-changes"
															],
															"query": [
																{
																	"key": "ignoreConflicts",
																	"value": "false",
																	"description": "Whether to succeed (`true`) or fail (`false`) when these instructions conflict with existing scheduled changes"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Create scheduled changes for a feature flag. If the `ignoreConficts` query parameter is false and there are conflicts between these instructions and existing scheduled changes, the request will fail. If the parameter is true and there are conflicts, the request will succeed."
													},
													"response": [
														{
															"id": "22b56b36-e981-4d5d-a1ca-866c883a5185",
															"name": "Scheduled changes response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "false"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": {},\n  \"_links\": {\n    \"sit_373\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"est_5e4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magnab4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "f551f375-b971-46b2-af94-690166482cc3",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "be689564-6263-4ad2-8054-630e7151fdc2",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "14872fc0-8562-42b5-9f6e-abd0b065ad1c",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "e31d7fa9-441f-4b2f-9a45-cd319b660993",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "949d648a-adb5-4992-913d-efc8f51d2c5b",
															"name": "Method not allowed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
														},
														{
															"id": "1f4f9b34-a0d0-4652-b548-58eaf59dd567",
															"name": "Status conflict",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
														},
														{
															"id": "30064dad-6fa2-420b-8e9f-e620c1427754",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"Optional comment describing the scheduled changes\",\n  \"executionDate\": 1718467200000,\n  \"instructions\": [\n    {\n      \"kind\": \"turnFlagOn\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/scheduled-changes?ignoreConflicts=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"scheduled-changes"
																	],
																	"query": [
																		{
																			"key": "ignoreConflicts",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "50bdd03a-39e5-41a9-b3df-d1554db70947"
										},
										{
											"name": "workflows",
											"item": [
												{
													"name": "{workflowId}",
													"item": [
														{
															"name": "Get custom workflow",
															"id": "c9ab37e5-3ed3-46a4-9bb7-27e8dd59884d",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows",
																		":workflowId"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "workflowId",
																			"value": "Lorem enim",
																			"description": "(Required) The workflow ID"
																		}
																	]
																},
																"description": "Get a specific workflow by ID."
															},
															"response": [
																{
																	"id": "e0ee56f8-1dd7-417e-93ae-d3b77c7f7ec8",
																	"name": "Workflow response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "Lorem enim",
																					"description": "(Required) The workflow ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_id\": \"12ab3c4d5ef1a2345bcde67f\",\n  \"_version\": 1,\n  \"_conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_links\": {\n    \"ex_9ad\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occaecat_9\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"in__34\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"Progressive rollout starting in two days\",\n  \"_execution\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"kind\": \"custom\",\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"templateKey\": \"example-workflow-template\"\n}"
																},
																{
																	"id": "17ddae5f-5427-4e02-ac44-c36a6173907e",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "Lorem enim",
																					"description": "(Required) The workflow ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "adaf2f86-1275-45a0-9d7b-5317eda9005c",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "Lorem enim",
																					"description": "(Required) The workflow ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "a5db0587-569a-4369-8e53-aae522ffd4b1",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "Lorem enim",
																					"description": "(Required) The workflow ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "cf3dde76-08d0-4dad-bc66-09c188a76a9d",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "Lorem enim",
																					"description": "(Required) The workflow ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Delete workflow",
															"id": "2d085042-294d-4e33-ae8a-ee0a7af1a73c",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows",
																		":workflowId"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "workflowId",
																			"value": "ex esse ipsum",
																			"description": "(Required) The workflow id"
																		}
																	]
																},
																"description": "Delete a workflow from a feature flag."
															},
															"response": [
																{
																	"id": "fa6a9ab7-f886-4d68-b8ea-93c7b300112e",
																	"name": "Action completed successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "ex esse ipsum",
																					"description": "(Required) The workflow id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "767f243b-9473-40e8-a767-3dc72b3fcdb3",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "ex esse ipsum",
																					"description": "(Required) The workflow id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "4c3115bd-725b-4c07-a88f-245cf4bcd65e",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "ex esse ipsum",
																					"description": "(Required) The workflow id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "916031dc-5595-40de-b658-2e29eeaee267",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "ex esse ipsum",
																					"description": "(Required) The workflow id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "5854d794-f98e-4304-85e2-fe58e15bdfb0",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "ex esse ipsum",
																					"description": "(Required) The workflow id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "ca76e9d3-5e7f-461d-8183-92dbebebe04e",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows/:workflowId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"projects",
																				":projectKey",
																				"flags",
																				":featureFlagKey",
																				"environments",
																				":environmentKey",
																				"workflows",
																				":workflowId"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "workflowId",
																					"value": "ex esse ipsum",
																					"description": "(Required) The workflow id"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "7ed3ee26-6bdb-4715-a40e-883958f576ec"
												},
												{
													"name": "Get workflows",
													"id": "1bf2e9bc-b4c7-4543-9f55-ef4e6c231dfc",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?status=id dolore cupidatat do&sort=in voluptate aliqua",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"workflows"
															],
															"query": [
																{
																	"key": "status",
																	"value": "id dolore cupidatat do",
																	"description": "Filter results by workflow status. Valid status filters are `active`, `completed`, and `failed`."
																},
																{
																	"key": "sort",
																	"value": "in voluptate aliqua",
																	"description": "A field to sort the items by. Prefix field by a dash ( - ) to sort in descending order. This endpoint supports sorting by `creationDate` or `stopDate`."
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Display workflows associated with a feature flag."
													},
													"response": [
														{
															"id": "9a8d7592-99d0-478a-9486-841cd98411e0",
															"name": "Workflows collection response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?status=id dolore cupidatat do&sort=in voluptate aliqua",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "status",
																			"value": "id dolore cupidatat do"
																		},
																		{
																			"key": "sort",
																			"value": "in voluptate aliqua"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
														},
														{
															"id": "db9a6880-d903-4ce0-b71c-4b3517a37c45",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?status=id dolore cupidatat do&sort=in voluptate aliqua",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "status",
																			"value": "id dolore cupidatat do"
																		},
																		{
																			"key": "sort",
																			"value": "in voluptate aliqua"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "b9e6ded9-8dc4-4f6a-912b-f582a460fcd4",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?status=id dolore cupidatat do&sort=in voluptate aliqua",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "status",
																			"value": "id dolore cupidatat do"
																		},
																		{
																			"key": "sort",
																			"value": "in voluptate aliqua"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "ac219bb7-8814-400a-9bc0-dbbea607eef2",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?status=id dolore cupidatat do&sort=in voluptate aliqua",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "status",
																			"value": "id dolore cupidatat do"
																		},
																		{
																			"key": "sort",
																			"value": "in voluptate aliqua"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "01ccdf51-8012-47c9-9219-899bb8707bb8",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?status=id dolore cupidatat do&sort=in voluptate aliqua",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "status",
																			"value": "id dolore cupidatat do"
																		},
																		{
																			"key": "sort",
																			"value": "in voluptate aliqua"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Create workflow",
													"id": "00852f56-caf8-4a20-b867-03f72b6762c8",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"workflows"
															],
															"query": [
																{
																	"key": "templateKey",
																	"value": "aliqua mollit",
																	"description": "The template key to apply as a starting point for the new workflow"
																},
																{
																	"key": "dryRun",
																	"value": "false",
																	"description": "Whether to call the endpoint in dry-run mode"
																}
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																}
															]
														},
														"description": "Create a workflow for a feature flag. You can create a workflow directly, or you can apply a template to create a new workflow.\n\n### Creating a workflow\n\nYou can use the create workflow endpoint to create a workflow directly by adding a `stages` array to the request body.\n\nFor each stage, define the `name`, `conditions` when the stage should be executed, and `action` that describes the stage.\n\n<details>\n<summary>Click to expand example</summary>\n\n_Example request body_\n```json\n{\n  \"name\": \"Progressive rollout starting in two days\",\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"stages\": [\n    {\n      \"name\": \"10% rollout on day 1\",\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\", // or \"absolute\"\n              //  If \"scheduleKind\" is \"absolute\", set \"executionDate\";\n              // \"waitDuration\" and \"waitDurationUnit\" will be ignored\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        },\n        {\n          \"kind\": \"ld-approval\",\n          \"notifyMemberIds\": [ \"507f1f77bcf86cd799439011\" ],\n          \"notifyTeamKeys\": [ \"example-team\" ]\n        }\n      ],\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n</details>\n\n### Creating a workflow by applying a workflow template\n\nYou can also create a workflow by applying a workflow template. If you pass a valid workflow template key as the `templateKey` query parameter with the request, the API will attempt to create a new workflow with the stages defined in the workflow template with the corresponding key.\n\n#### Applicability of stages\nTemplates are created in the context of a particular flag in a particular environment in a particular project. However, because workflows created from a template can be applied to any project, environment, and flag, some steps of the workflow may need to be updated in order to be applicable for the target resource.\n\nYou can pass a `dryRun` query parameter to tell the API to return a report of which steps of the workflow template are applicable in the target project/environment/flag, and which will need to be updated. When the `dryRun` query parameter is present the response body includes a `meta` property that holds a list of parameters that could potentially be inapplicable for the target resource. Each of these parameters will include a `valid` field. You will need to update any invalid parameters in order to create the new workflow. You can do this using the `parameters` property, which overrides the workflow template parameters.\n\n#### Overriding template parameters\nYou can use the `parameters` property in the request body to tell the API to override the specified workflow template parameters with new values that are specific to your target project/environment/flag.\n\n<details>\n<summary>Click to expand example</summary>\n\n_Example request body_\n```json\n{\n\t\"name\": \"workflow created from my-template\",\n\t\"description\": \"description of my workflow\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"_id\": \"62cf2bc4cadbeb7697943f3b\",\n\t\t\t\"path\": \"/clauses/0/values\",\n\t\t\t\"default\": {\n\t\t\t\t\"value\": [\"updated-segment\"]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"_id\": \"62cf2bc4cadbeb7697943f3d\",\n\t\t\t\"path\": \"/variationId\",\n\t\t\t\"default\": {\n\t\t\t\t\"value\": \"abcd1234-abcd-1234-abcd-1234abcd12\"\n\t\t\t}\n\t\t}\n\t]\n}\n```\n</details>\n\nIf there are any steps in the template that are not applicable to the target resource, the workflow will not be created, and the `meta` property will be included in the response body detailing which parameters need to be updated.\n"
													},
													"response": [
														{
															"id": "937c4a8e-a93b-495c-a364-a23ea95996e3",
															"name": "Workflow response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "templateKey",
																			"value": "aliqua mollit"
																		},
																		{
																			"key": "dryRun",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"_id\": \"12ab3c4d5ef1a2345bcde67f\",\n  \"_version\": 1,\n  \"_conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_maintainerId\": \"12ab3c45de678910abc12345\",\n  \"_links\": {\n    \"eiusmod1f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magna_e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"in_db5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"mollita_f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"Progressive rollout starting in two days\",\n  \"_execution\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"kind\": \"custom\",\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"meta\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"templateKey\": \"example-workflow-template\"\n}"
														},
														{
															"id": "0b4af3a8-9341-4602-88ec-9beb7354e0ec",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "templateKey",
																			"value": "aliqua mollit"
																		},
																		{
																			"key": "dryRun",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "1b0305cc-e8b7-48c6-84bc-d72eb6c5952b",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "templateKey",
																			"value": "aliqua mollit"
																		},
																		{
																			"key": "dryRun",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "7b1a7004-1b4d-411b-a39d-182c34b9bd54",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "templateKey",
																			"value": "aliqua mollit"
																		},
																		{
																			"key": "dryRun",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "84766154-bb8b-4c0a-8f94-8e470058abdb",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "templateKey",
																			"value": "aliqua mollit"
																		},
																		{
																			"key": "dryRun",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "03b1a836-deaf-4523-89e9-87ec475214f6",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"Turn flag on for 10% of customers each day\",\n  \"name\": \"Progressive rollout starting in two days\",\n  \"stages\": [\n    {\n      \"action\": {\n        \"instructions\": [\n          {\n            \"kind\": \"turnFlagOn\"\n          },\n          {\n            \"kind\": \"updateFallthroughVariationOrRollout\",\n            \"rolloutWeights\": {\n              \"452f5fb5-7320-4ba3-81a1-8f4324f79d49\": 90000,\n              \"fc15f6a4-05d3-4aa4-a997-446be461345d\": 10000\n            }\n          }\n        ]\n      },\n      \"conditions\": [\n        {\n          \"kind\": \"schedule\",\n          \"scheduleKind\": \"relative\",\n          \"waitDuration\": 2,\n          \"waitDurationUnit\": \"calendarDay\"\n        }\n      ],\n      \"name\": \"10% rollout on day 1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/workflows?templateKey=aliqua mollit&dryRun=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"projects",
																		":projectKey",
																		"flags",
																		":featureFlagKey",
																		"environments",
																		":environmentKey",
																		"workflows"
																	],
																	"query": [
																		{
																			"key": "templateKey",
																			"value": "aliqua mollit"
																		},
																		{
																			"key": "dryRun",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "fc8d14f3-25d9-42b0-96b2-772784bbcd20"
										},
										{
											"name": "Create approval request to copy flag configurations across environments",
											"id": "324801b3-e0c2-4bae-94ac-25c964516f70",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey",
														"flags",
														":featureFlagKey",
														"environments",
														":environmentKey",
														"approval-requests-flag-copy"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "featureFlagKey",
															"value": "nostrud incididunt",
															"description": "(Required) The feature flag key"
														},
														{
															"key": "environmentKey",
															"value": "",
															"description": "(Required) The environment key for the target environment"
														}
													]
												},
												"description": "Create an approval request to copy a feature flag's configuration across environments."
											},
											"response": [
												{
													"id": "46ae3ec2-f6fa-45e3-87ce-9f560351c20e",
													"name": "Approval request response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests-flag-copy"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "",
																	"description": "(Required) The environment key for the target environment"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"_id\": \"12ab3c45de678910abc12345\",\n  \"_version\": 1,\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"serviceKind\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"reviewStatus\": \"pending\",\n  \"allReviews\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"status\": \"pending\",\n  \"instructions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"conflicts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Loremcb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sed8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requestorId\": \"12ab3c45de678910abc12345\",\n  \"description\": \"example: request approval from someone\",\n  \"appliedDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"appliedByMemberId\": \"1234a56b7c89d012345e678f\",\n  \"executionDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"operatingOnId\": \"12ab3c45de678910abc12345\",\n  \"integrationMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customWorkflowMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "10b1a342-c607-4b0e-bc67-7fb778b85378",
													"name": "Invalid request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests-flag-copy"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "",
																	"description": "(Required) The environment key for the target environment"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "7ee65600-c4c8-4c1a-9d6e-46c883ac2871",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests-flag-copy"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "",
																	"description": "(Required) The environment key for the target environment"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "d78196bd-0910-477c-8fec-3d9aac5c2d63",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests-flag-copy"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "",
																	"description": "(Required) The environment key for the target environment"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "5020a636-ac4e-4553-8210-ef50b48c7369",
													"name": "Status conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests-flag-copy"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "",
																	"description": "(Required) The environment key for the target environment"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "42a500d9-dead-42fa-b0bb-d1586eda2144",
													"name": "Rate limited",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"copy flag settings to another environment\",\n  \"source\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"comment\": \"optional comment\",\n  \"notifyMemberIds\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"notifyTeamKeys\": [\n    \"example-reviewer-team\"\n  ],\n  \"includedActions\": [\n    \"updateOn\"\n  ],\n  \"excludedActions\": [\n    \"updateOn\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/projects/:projectKey/flags/:featureFlagKey/environments/:environmentKey/approval-requests-flag-copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"projects",
																":projectKey",
																"flags",
																":featureFlagKey",
																"environments",
																":environmentKey",
																"approval-requests-flag-copy"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "featureFlagKey",
																	"value": "nostrud incididunt",
																	"description": "(Required) The feature flag key"
																},
																{
																	"key": "environmentKey",
																	"value": "",
																	"description": "(Required) The environment key for the target environment"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "3a013656-7cdf-473f-bae9-95b3ef01abf8"
								},
								{
									"name": "Get project",
									"id": "9b8664be-21af-4b45-aa15-0e1bef4633e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects",
												":projectKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore",
													"description": "A comma-separated list of properties that can reveal additional information in the response."
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "consequat voluptate ullamco",
													"description": "(Required) The project key."
												}
											]
										},
										"description": "Get a single project by key.\n\n### Expanding the project response\n\nLaunchDarkly supports one field for expanding the \"Get project\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n* `environments` includes a paginated list of the project environments.\n\nFor example, `expand=environments` includes the `environments` field for the project in the response.\n"
									},
									"response": [
										{
											"id": "8c94b24b-ab9c-49b6-a5b8-a6419e602daf",
											"name": "Project response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "consequat voluptate ullamco",
															"description": "(Required) The project key."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"environments\": {\n      \"href\": \"/api/v2/projects/my-project/environments\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11383\",\n  \"key\": \"my-project\",\n  \"includeInSnippetByDefault\": true,\n  \"name\": \"My Project\",\n  \"tags\": [\n    \"ops\"\n  ],\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"environments\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "b181c28a-bc1d-455e-a782-b5ba2bdab71c",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "consequat voluptate ullamco",
															"description": "(Required) The project key."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "3c1aeb98-2fee-45a4-9b1f-aaa965c7cf3d",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "consequat voluptate ullamco",
															"description": "(Required) The project key."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "55674e3d-b43b-4fd7-9f89-f85fa086d075",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "consequat voluptate ullamco",
															"description": "(Required) The project key."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "501f01bf-4c66-4436-bc66-24efd36eb493",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "consequat voluptate ullamco",
															"description": "(Required) The project key."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "e15f5add-6cdd-4fae-a67d-6e32056c175c",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "consequat voluptate ullamco",
															"description": "(Required) The project key."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update project",
									"id": "1afbe97f-77dd-4daa-b642-992dfc5c195e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										},
										"description": "Update a project. Requires a [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902) representation of the desired changes to the project."
									},
									"response": [
										{
											"id": "5507aaba-6f2d-4f31-be54-ca816a31f033",
											"name": "Project response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"environments\": {\n      \"href\": \"/api/v2/projects/my-project/environments\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11383\",\n  \"key\": \"my-project\",\n  \"includeInSnippetByDefault\": true,\n  \"name\": \"My Project\",\n  \"tags\": [\n    \"ops\"\n  ],\n  \"environments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "70d3c609-aa2d-4a87-be70-8053e67943a6",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "b10e0965-4471-4dd0-ad42-7171027c1db8",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "ec7e65a5-219c-4911-9a4e-6629e613ce03",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "98ee8e41-9ff7-4432-930b-c8f68cf97104",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "0d7517c1-730f-4023-950b-80e4010136cf",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "91235b8d-4d95-4800-a104-72357c4b10d4",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"add\",\n    \"path\": \"/tags/0\",\n    \"value\": \"another-tag\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete project",
									"id": "4fa903ed-2fb4-4b86-9762-6403e1754410",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects",
												":projectKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												}
											]
										},
										"description": "Delete a project by key. Use this endpoint with caution. Deleting a project will delete all associated environments and feature flags. You cannot delete the last project in an account."
									},
									"response": [
										{
											"id": "6ffaea27-737d-4686-aef6-bf4eae179ae8",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "382fc249-3023-4621-8de6-f439119d794e",
											"name": "Invalid request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "74f8da9c-2b48-4dfd-9c72-95bfe735252e",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "d7b9ebfd-1151-4acc-bef9-a7849be85ddb",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "1337e70c-eeef-4b50-bf65-1887402df602",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "5c930623-f30b-4ab8-a699-9e29b493b65f",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/projects/:projectKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"projects",
														":projectKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "f2842640-7d18-48d4-b0f6-4c6ac45f6a9a"
						},
						{
							"name": "List projects",
							"id": "2e420f93-01b6-4638-92af-89e127e3f31d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/projects?limit=58182935&offset=-30264572&filter=occaecat et commodo quis&sort=cupidatat Duis commodo officia&expand=aliqua Duis adipisicing dolore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"projects"
									],
									"query": [
										{
											"key": "limit",
											"value": "58182935",
											"description": "The number of projects to return in the response. Defaults to 20."
										},
										{
											"key": "offset",
											"value": "-30264572",
											"description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and returns the next `limit` items."
										},
										{
											"key": "filter",
											"value": "occaecat et commodo quis",
											"description": "A comma-separated list of filters. Each filter is constructed as `field:value`."
										},
										{
											"key": "sort",
											"value": "cupidatat Duis commodo officia",
											"description": "A comma-separated list of fields to sort by. Fields prefixed by a dash ( - ) sort in descending order."
										},
										{
											"key": "expand",
											"value": "aliqua Duis adipisicing dolore",
											"description": "A comma-separated list of properties that can reveal additional information in the response."
										}
									]
								},
								"description": "Return a list of projects.\n\nBy default, this returns the first 20 projects. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the `_links` field that returns. If those links do not appear, the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page, because there is no previous page and you cannot return to the first page when you are already on the first page.\n\n### Filtering projects\n\nLaunchDarkly supports two fields for filters:\n- `query` is a string that matches against the projects' names and keys. It is not case sensitive.\n- `tags` is a `+` separate list of project tags. It filters the list of projects that have all of the tags in the list.\n\nFor example, the filter `query:abc,tags:tag-1+tag-2` matches projects with the string `abc` in their name or key and also are tagged with `tag-1` and `tag-2`. The filter is not case-sensitive.\n\n### Sorting projects\n\nLaunchDarkly supports two fields for sorting:\n- `name` sorts by project name.\n- `createdOn` sorts by the creation date of the project.\n\nFor example, `sort=name` sorts the response by project name in ascending order.\n\n### Expanding the projects response\n\nLaunchDarkly supports one field for expanding the \"List projects\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with the `environments` field.\n\n`Environments` includes a paginated list of the project environments.\n* `environments` includes a paginated list of the project environments.\n\nFor example, `expand=environments` includes the `environments` field for each project in the response.\n"
							},
							"response": [
								{
									"id": "7c4322ec-8284-4d63-bb72-02224ee89d8d",
									"name": "Project collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects?limit=58182935&offset=-30264572&filter=occaecat et commodo quis&sort=cupidatat Duis commodo officia&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											],
											"query": [
												{
													"key": "limit",
													"value": "58182935"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/projects\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"totalCount\": -47708684\n}"
								},
								{
									"id": "1688bf87-9bf0-4d34-8711-08514d1a59cc",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects?limit=58182935&offset=-30264572&filter=occaecat et commodo quis&sort=cupidatat Duis commodo officia&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											],
											"query": [
												{
													"key": "limit",
													"value": "58182935"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "2148c70c-e22f-40d1-b315-3f50276f9841",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects?limit=58182935&offset=-30264572&filter=occaecat et commodo quis&sort=cupidatat Duis commodo officia&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											],
											"query": [
												{
													"key": "limit",
													"value": "58182935"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "5b4ac60e-8a41-4254-867e-a99d1aa464b9",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects?limit=58182935&offset=-30264572&filter=occaecat et commodo quis&sort=cupidatat Duis commodo officia&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											],
											"query": [
												{
													"key": "limit",
													"value": "58182935"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "1de3a6d1-880b-4256-af62-ae420202994b",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects?limit=58182935&offset=-30264572&filter=occaecat et commodo quis&sort=cupidatat Duis commodo officia&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											],
											"query": [
												{
													"key": "limit",
													"value": "58182935"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "sort",
													"value": "cupidatat Duis commodo officia"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create project",
							"id": "7b2b3e0c-557c-423b-b8e4-0e8061db5f8c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"projects"
									]
								},
								"description": "Create a new project with the given key and name. Project keys must be unique within an account."
							},
							"response": [
								{
									"id": "fec0b059-6526-47c9-bdbf-eeaea08aabbc",
									"name": "Project response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"environments\": {\n      \"href\": \"/api/v2/projects/my-project/environments\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/projects/my-project\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11383\",\n  \"key\": \"my-project\",\n  \"includeInSnippetByDefault\": true,\n  \"name\": \"My Project\",\n  \"tags\": [\n    \"ops\"\n  ],\n  \"environments\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultClientSideAvailability\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "7778ebc1-092e-4e4b-ab25-ea21220003c4",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "44b0b0d8-da2e-4b68-8323-790dce33828d",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "081c228e-a837-4604-9884-2bdb02e88885",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "7f13901b-5e34-4149-921c-649feead3832",
									"name": "Status conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "8db1a2f7-2d8c-4263-b3d1-fe9e669a9e5f",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"my-project\",\n  \"name\": \"My Project\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"projects"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "0ac0766e-b998-4141-9d72-86d1ff080ea5"
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "{customRoleKey}",
							"item": [
								{
									"name": "Get custom role",
									"id": "8fd5c751-efaa-47a2-99b4-7b7710caeb56",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":customRoleKey"
											],
											"variable": [
												{
													"key": "customRoleKey",
													"value": "consectetur officia",
													"description": "(Required) The custom role key or ID"
												}
											]
										},
										"description": "Get a single custom role by key or ID"
									},
									"response": [
										{
											"id": "78c7f1a0-178d-4273-bb6c-3674ae7a2b2c",
											"name": "Custom role response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "consectetur officia",
															"description": "(Required) The custom role key or ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"_links\": {\n    \"laborum_e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"key\": \"example-custom-role\",\n  \"name\": \"Example custom role\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"This custom role is just an example\",\n  \"basePermissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "a1434226-4983-4bf6-94cf-69598e84efa6",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "consectetur officia",
															"description": "(Required) The custom role key or ID"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "3f50f08f-e558-4d78-ba2a-acfcba85ec7f",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "consectetur officia",
															"description": "(Required) The custom role key or ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "68a9f2d6-98ce-4ecc-959a-946dd4c38a9d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "consectetur officia",
															"description": "(Required) The custom role key or ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "8802c5fe-89b9-481d-82ff-c4cea2a9baff",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "consectetur officia",
															"description": "(Required) The custom role key or ID"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update custom role",
									"id": "d75d1ffa-7dce-4c1b-a85e-0a2f5109b013",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":customRoleKey"
											],
											"variable": [
												{
													"key": "customRoleKey",
													"value": "aute fugiat deserunt sint",
													"description": "(Required) The custom role key"
												}
											]
										},
										"description": "Update a single custom role. The request must be a valid JSON Patch document describing the changes to be made to the custom role. To add an element to the `policy` array, set the `path` to `/policy` and then append `/<array index>`. Using `/0` adds to the beginning of the array."
									},
									"response": [
										{
											"id": "d31a5920-f744-4205-bba3-8134f03e1f87",
											"name": "Custom role response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"_links\": {\n    \"laborum_e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"key\": \"example-custom-role\",\n  \"name\": \"Example custom role\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"This custom role is just an example\",\n  \"basePermissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "74623157-462d-415f-8683-0d95b6fb9078",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "f5526024-d2aa-4b36-bdf9-dfee7d60ba6b",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "15845b4b-d1f8-4de8-90b2-62c8c47b8745",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "22fe6d0f-50f4-470e-8cee-661c30132b9a",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "ac06a10e-f9fd-4f14-8f01-241edd314dd4",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"add\",\n      \"path\": \"/policy/0\",\n      \"value\": {\n        \"actions\": [\n          \"updateOn\"\n        ],\n        \"effect\": \"allow\",\n        \"resources\": [\n          \"proj/*:env/qa:flag/*\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete custom role",
									"id": "dca5e499-50d3-4c47-8884-58b9f6cbad2b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles",
												":customRoleKey"
											],
											"variable": [
												{
													"key": "customRoleKey",
													"value": "aute fugiat deserunt sint",
													"description": "(Required) The custom role key"
												}
											]
										},
										"description": "Delete a custom role by key"
									},
									"response": [
										{
											"id": "ba5e343e-630f-4280-9cd9-a0fda87c2a1d",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "e65bf42f-eff7-464e-83a8-fb03a831f846",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "0a1bde4e-82ed-418b-984f-9ae770c783e0",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "b6d2fca9-468b-49a5-89f9-83635b029a4f",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/roles/:customRoleKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"roles",
														":customRoleKey"
													],
													"variable": [
														{
															"key": "customRoleKey",
															"value": "aute fugiat deserunt sint",
															"description": "(Required) The custom role key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "f207b785-96db-4b54-9a4a-e5b4559b427a"
						},
						{
							"name": "List custom roles",
							"id": "f65d0ecb-5747-4655-b545-d07ac40d3595",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								},
								"description": "Get a complete list of custom roles. Custom roles let you create flexible policies providing fine-grained access control to everything in LaunchDarkly, from feature flags to goals, environments, and teams. With custom roles, it's possible to enforce access policies that meet your exact workflow needs. Custom roles are available to customers on our enterprise plans. If you're interested in learning more about our enterprise plans, contact sales@launchdarkly.com."
							},
							"response": [
								{
									"id": "b084cbcc-a98b-443b-a0c3-094b31d928d1",
									"name": "Custom roles collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"dolore4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "73fa9ff9-e389-4b7e-9805-58beedf759bb",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "859ed0ed-64d5-4c95-819c-ffa396bc690a",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "45068d19-510b-4bc5-9e59-9a456332ba88",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create custom role",
							"id": "658d65e0-f04d-4ddb-94c8-234da3c118d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								},
								"description": "Create a new custom role"
							},
							"response": [
								{
									"id": "82bf2191-0c84-4970-afc2-ce580dda396b",
									"name": "Custom role response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": \"1234a56b7c89d012345e678f\",\n  \"_links\": {\n    \"Excepteurb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"et_98\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"key\": \"example-custom-role\",\n  \"name\": \"Example custom role\",\n  \"policy\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"description\": \"This custom role is just an example\",\n  \"basePermissions\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "f16b154d-5f9c-4f14-ade7-1e5178772835",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "aec3bc9f-d59b-4abc-822a-6af68f9155b4",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "8d96cac3-7cc1-42a5-b10b-0526ddb906ca",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "eb52e888-6e81-4708-9ced-89585962490e",
									"name": "Status conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "e67b62c5-cd00-469a-ac85-e0ab6c9b4f98",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"basePermissions\": \"reader\",\n  \"description\": \"An example role for members of the ops team\",\n  \"key\": \"ops-team\",\n  \"name\": \"Ops team\",\n  \"policy\": [\n    {\n      \"actions\": [\n        \"updateOn\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/*:env/production:flag/*\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"roles"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "b72ca524-0f8f-4443-8a27-575d93ac23ef"
				},
				{
					"name": "segments/{projectKey}",
					"item": [
						{
							"name": "{environmentKey}",
							"item": [
								{
									"name": "{segmentKey}",
									"item": [
										{
											"name": "contexts",
											"item": [
												{
													"name": "Update context targets on a Big Segment",
													"id": "5ada063a-3829-4354-9d25-15c636ebfad8",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"contexts"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														},
														"description": "Update context targets included or excluded in a Big Segment."
													},
													"response": [
														{
															"id": "c60cc1a1-54d3-4158-925d-c64737fc2b03",
															"name": "Action succeeded",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "fec6db2f-a8ae-4d27-b374-c7aba6d5653e",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "1c8c075c-3837-401a-9ed8-4e5acdabfb44",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "245e4836-783e-4859-b860-1262faa174d9",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "cae9b8dd-ea49-4901-81a5-dace5f82661d",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Get Big Segment membership for context",
													"id": "1cad7c2a-2c61-494f-8b02-bc51f2dd7dc5",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts/:contextKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"contexts",
																":contextKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																},
																{
																	"key": "contextKey",
																	"value": "nulla veniam",
																	"description": "(Required) The context key"
																}
															]
														},
														"description": "Get the membership status (included/excluded) for a given context in this Big Segment. This operation does not support standard segments."
													},
													"response": [
														{
															"id": "887cc6a5-0c8f-412c-96b9-849366c9b33d",
															"name": "Segment membership for context response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts/:contextKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts",
																		":contextKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "contextKey",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"userKey\": \"aute\",\n  \"included\": false,\n  \"excluded\": true\n}"
														},
														{
															"id": "21bd5a19-038e-4ee2-9397-e9629a50ac39",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts/:contextKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts",
																		":contextKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "contextKey",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "124e2388-dd8d-482f-a69b-90424f8435e8",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts/:contextKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts",
																		":contextKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "contextKey",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "418057a6-8ac9-46a2-96ae-369f00a6bca9",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts/:contextKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts",
																		":contextKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "contextKey",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "7c1ee749-f46c-4a1d-8f6d-6b9b8f62b0fa",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/contexts/:contextKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"contexts",
																		":contextKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "contextKey",
																			"value": "nulla veniam",
																			"description": "(Required) The context key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "9a6f82e0-a76b-4072-9622-b64e0f6563bc"
										},
										{
											"name": "exports",
											"item": [
												{
													"name": "Create Big Segment export",
													"id": "0ad4689c-b420-4339-8047-3f564f448413",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"exports"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														},
														"description": "Starts a new export process for a Big Segment"
													},
													"response": [
														{
															"id": "1b695d98-85ed-4f59-b52b-17ea3a5b18f6",
															"name": "Action succeeded",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "42ec23c8-0820-4ae6-9f20-53b1bcdc7048",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "466879d5-55e9-4df2-8dc0-190ef4a110db",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "9f2ac3a8-b22e-4e1e-99d1-58d4b8e6ffaf",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "156aa65d-5bf8-4bf0-beb1-f74ddda04713",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Get Big Segment export",
													"id": "86b545f6-9b91-4349-9d66-88385c7f7b75",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports/:exportID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"exports",
																":exportID"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																},
																{
																	"key": "exportID",
																	"value": "ex non irure nostrud",
																	"description": "(Required) The export ID"
																}
															]
														},
														"description": "Returns info about a Big Segment export process."
													},
													"response": [
														{
															"id": "ec75ff5d-eb8a-46cb-af31-54ef8cc4e8f3",
															"name": "Segment export response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports/:exportID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports",
																		":exportID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "exportID",
																			"value": "ex non irure nostrud",
																			"description": "(Required) The export ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1234a567-bcd8-9123-4567-abcd1234567f\",\n  \"segmentKey\": \"example-big-segment\",\n  \"creationTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"status\": \"complete\",\n  \"sizeBytes\": 18,\n  \"size\": \"18 B\",\n  \"initiator\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"nisi_c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nisif2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eiusmod94\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
														},
														{
															"id": "573e7ca8-a60d-468f-a05f-38aa2edac6f5",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports/:exportID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports",
																		":exportID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "exportID",
																			"value": "ex non irure nostrud",
																			"description": "(Required) The export ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "7bb4410a-7812-4951-8d9f-1a7813599335",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports/:exportID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports",
																		":exportID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "exportID",
																			"value": "ex non irure nostrud",
																			"description": "(Required) The export ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "d9195628-45a1-412d-9af7-4cf8c82e4448",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/exports/:exportID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"exports",
																		":exportID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "exportID",
																			"value": "ex non irure nostrud",
																			"description": "(Required) The export ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "1b352efb-7df0-4011-a390-77383b664c54"
										},
										{
											"name": "imports",
											"item": [
												{
													"name": "Create Big Segment import",
													"id": "dfe41afb-6d11-4a26-b638-f9c12f774200",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"type": "file",
																	"description": "CSV file containing keys",
																	"value": null
																},
																{
																	"key": "mode",
																	"value": "Lorem amet magna",
																	"type": "text",
																	"description": "Import mode. Use either `merge` or `replace`"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"imports"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														},
														"description": "Start a new import process for a Big Segment."
													},
													"response": [
														{
															"id": "b8187005-deaa-4935-867f-314884b03e7b",
															"name": "Import request submitted successfully",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "CSV file containing keys",
																			"key": "file",
																			"type": "file",
																			"src": []
																		},
																		{
																			"description": "Import mode. Use either `merge` or `replace`",
																			"key": "mode",
																			"value": "Lorem amet magna",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "125948f0-e1ad-4e03-862f-40a5abae217a",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "CSV file containing keys",
																			"key": "file",
																			"type": "file",
																			"src": []
																		},
																		{
																			"description": "Import mode. Use either `merge` or `replace`",
																			"key": "mode",
																			"value": "Lorem amet magna",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "dc1d65fa-3896-4496-bbc3-97d82207d7ed",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "CSV file containing keys",
																			"key": "file",
																			"type": "file",
																			"src": []
																		},
																		{
																			"description": "Import mode. Use either `merge` or `replace`",
																			"key": "mode",
																			"value": "Lorem amet magna",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "5b410f16-6f09-48e1-a12e-c7f8d41bc7b7",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "CSV file containing keys",
																			"key": "file",
																			"type": "file",
																			"src": []
																		},
																		{
																			"description": "Import mode. Use either `merge` or `replace`",
																			"key": "mode",
																			"value": "Lorem amet magna",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "fba673c6-b9b2-43fa-a406-0925edae2ccc",
															"name": "Conflicting process",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "CSV file containing keys",
																			"key": "file",
																			"type": "file",
																			"src": []
																		},
																		{
																			"description": "Import mode. Use either `merge` or `replace`",
																			"key": "mode",
																			"value": "Lorem amet magna",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
														},
														{
															"id": "b0f76114-a845-4c73-a467-2f4b0b77ffc1",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "CSV file containing keys",
																			"key": "file",
																			"type": "file",
																			"src": []
																		},
																		{
																			"description": "Import mode. Use either `merge` or `replace`",
																			"key": "mode",
																			"value": "Lorem amet magna",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Get Big Segment import",
													"id": "be8437f1-5517-4c85-901d-2490d41e1d73",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports/:importID",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"imports",
																":importID"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																},
																{
																	"key": "importID",
																	"value": "voluptate enim",
																	"description": "(Required) The import ID"
																}
															]
														},
														"description": "Returns info about a Big Segment import process."
													},
													"response": [
														{
															"id": "5be838d2-7cab-4f6d-b73f-c20627525aaf",
															"name": "Segment import response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports/:importID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports",
																		":importID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "importID",
																			"value": "voluptate enim",
																			"description": "(Required) The import ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1234a567-bcd8-9123-4567-abcd1234567f\",\n  \"segmentKey\": \"example-big-segment\",\n  \"creationTime\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mode\": \"replace\",\n  \"status\": \"complete\",\n  \"_links\": {\n    \"proident20a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"commodo260\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"files\": [\n    {\n      \"filename\": \"bigsegimport.csv\",\n      \"status\": \"complete\"\n    }\n  ]\n}"
														},
														{
															"id": "8950fd8b-d098-4c12-9abf-b9eae84cbdc7",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports/:importID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports",
																		":importID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "importID",
																			"value": "voluptate enim",
																			"description": "(Required) The import ID"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "82fafea4-71f7-4f30-95be-23b30d6d70ce",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports/:importID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports",
																		":importID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "importID",
																			"value": "voluptate enim",
																			"description": "(Required) The import ID"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "f1854458-808c-4e4a-abd9-76c945604b38",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/imports/:importID",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"imports",
																		":importID"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "importID",
																			"value": "voluptate enim",
																			"description": "(Required) The import ID"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "00dc67f8-9e5f-490c-954f-631142f8b053"
										},
										{
											"name": "users",
											"item": [
												{
													"name": "Update user context targets on a Big Segment",
													"id": "7bfb0451-c345-49ec-a4a6-f613a977d310",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"users"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														},
														"description": "Update user context targets included or excluded in a Big Segment."
													},
													"response": [
														{
															"id": "a31889cf-6a25-4a14-afea-6b098570a5a2",
															"name": "Action succeeded",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"id": "cf17178c-d5b6-49cb-8c94-94ea91d58b4b",
															"name": "Invalid request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "3c84f6a6-3307-41f6-92fb-67afd6e9759f",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "7be4a425-d984-4a8b-b881-8c20bd12e7a9",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "65d7b998-6be3-4f92-9f52-202eb9b19227",
															"name": "Rate limited",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"included\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"excluded\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												},
												{
													"name": "Get Big Segment membership for user",
													"id": "e89f5ce1-2632-425a-b6f5-8f9ea8e633f5",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey",
																"users",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														},
														"description": "> ### Contexts are now available\n>\n> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Get expiring targets for segment](/tag/Segments#operation/getExpiringTargetsForSegment) instead of this endpoint. To learn more, read [Contexts](https://docs.launchdarkly.com/home/contexts).\n\nGet the membership status (included/excluded) for a given user in this Big Segment. This operation does not support standard segments.\n"
													},
													"response": [
														{
															"id": "1154a5f4-a9f4-4bf8-9b30-949eae23d4ac",
															"name": "Segment membership for user response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users/:userKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users",
																		":userKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"userKey\": \"aute\",\n  \"included\": false,\n  \"excluded\": true\n}"
														},
														{
															"id": "b23da65c-b942-45f7-a503-4d3cd7ee7906",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users/:userKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users",
																		":userKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "c39a50c0-b653-4cc0-9f9a-66b3fcbca087",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users/:userKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users",
																		":userKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "4d076d88-4823-4a72-900f-4e9d5685d518",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users/:userKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users",
																		":userKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "c72290b4-f778-4c65-b699-762bfffc4a32",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey/users/:userKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"segments",
																		":projectKey",
																		":environmentKey",
																		":segmentKey",
																		"users",
																		":userKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "segmentKey",
																			"value": "laborum",
																			"description": "(Required) The segment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "693661ec-ef86-43e5-b593-114faf4b08bc"
										},
										{
											"name": "Get segment",
											"id": "fc200059-6ca8-42e3-967c-cb79fd80cead",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey",
														":segmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "Get a single segment by key."
											},
											"response": [
												{
													"id": "35485074-df27-4801-b284-2d5cfa6da2bb",
													"name": "Segment response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Example segment\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"key\": \"example-segment\",\n  \"_links\": {\n    \"suntc2e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"est7\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"rules\": [\n    {\n      \"_id\": \"1234a56b7c89d012345e678f\",\n      \"clauses\": [\n        {\n          \"_id\": \"12ab3c45de678910fab12345\",\n          \"attribute\": \"email\",\n          \"negate\": false,\n          \"op\": \"endsWith\",\n          \"values\": [\n            \".edu\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"version\": 1,\n  \"deleted\": false,\n  \"generation\": -60006464,\n  \"description\": \"Bundle our sample customers together\",\n  \"included\": [\n    \"example-user-key-to-include\"\n  ],\n  \"excluded\": [\n    \"example-user-key-to-exclude\"\n  ],\n  \"includedContexts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"excludedContexts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_flags\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"ipsum consequat non\",\n  \"_unboundedMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_external\": \"amplitude\",\n  \"_externalLink\": \"https://analytics.amplitude.com/org/1234/cohort/123abc\",\n  \"_importInProgress\": false\n}"
												},
												{
													"id": "565805d0-1b35-484a-ab6b-209c7d095382",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "6ac7b73c-9664-45f0-9b60-719ab51c86ed",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "b89f8fc2-f848-4914-8d08-445c849a396c",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Patch segment",
											"id": "070b263b-71bc-43a6-a452-f0736653aa4e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey",
														":segmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "Update a segment. The request body must be a valid semantic patch, JSON patch, or JSON merge patch.\n\n### Using semantic patches on a segment\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\nThe body of a semantic patch request for updating segments requires an `environmentKey` in addition to `instructions` and an optional `comment`. The body of the request takes the following properties:\n\n* `comment` (string): (Optional) A description of the update.\n* `environmentKey` (string): (Required) The key of the LaunchDarkly environment.\n* `instructions` (array): (Required) A list of actions the update should perform. Each action in the list must be an object with a `kind` property that indicates the instruction. If the action requires parameters, you must include those parameters as additional fields in the object.\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating segments.\n\n#### addIncludedTargets\n\nAdds context keys to the individual context targets included in the segment for the specified `contextKind`. Returns an error if this causes the same context key to be both included and excluded.\n\n##### Parameters\n\n- `contextKind`: The context kind the targets should be added to.\n- `values`: List of keys.\n\n#### addIncludedUsers\n\nAdds user keys to the individual user targets included in the segment. Returns an error if this causes the same user key to be both included and excluded. If you are working with contexts, use `addIncludedTargets` instead of this instruction.\n\n##### Parameters\n\n- `values`: List of user keys.\n\n#### addExcludedTargets\n\nAdds context keys to the individual context targets excluded in the segment for the specified `contextKind`. Returns an error if this causes the same context key to be both included and excluded.\n\n##### Parameters\n\n- `contextKind`: The context kind the targets should be added to.\n- `values`: List of keys.\n\n#### addExcludedUsers\n\nAdds user keys to the individual user targets excluded from the segment. Returns an error if this causes the same user key to be both included and excluded. If you are working with contexts, use `addExcludedTargets` instead of this instruction.\n\n##### Parameters\n\n- `values`: List of user keys.\n\n#### removeIncludedTargets\n\nRemoves context keys from the individual context targets included in the segment for the specified `contextKind`.\n\n##### Parameters\n\n- `contextKind`: The context kind the targets should be removed from.\n- `values`: List of keys.\n\n#### removeIncludedUsers\n\nRemoves user keys from the individual user targets included in the segment. If you are working with contexts, use `removeIncludedTargets` instead of this instruction.\n\n##### Parameters\n\n- `values`: List of user keys.\n\n#### removeExcludedTargets\n\nRemoves context keys from the individual context targets excluded from the segment for the specified `contextKind`.\n\n##### Parameters\n\n- `contextKind`: The context kind the targets should be removed from.\n- `values`: List of keys.\n\n#### removeExcludedUsers\n\nRemoves user keys from the individual user targets excluded from the segment. If you are working with contexts, use `removeExcludedTargets` instead of this instruction.\n\n##### Parameters\n\n- `values`: List of user keys.\n\n#### updateName\n\nUpdates the name of the segment.\n\n##### Parameters\n\n- `value`: Name of the segment.\n\n## Using JSON patches on a segment\n\nYou can also use JSON patch. To learn more, read [Updates using JSON patches](/reference#updates-using-json-patch).\n\nFor example, to update the description for a segment, use the following request body:\n\n```json\n{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"new description\"\n    }\n  ]\n}\n```\n\nTo update fields in the segment that are arrays, set the `path` to the name of the field and then append `/<array index>`. Using `/0` adds the new entry to the beginning of the array.\n\nFor example, to add a rule to a segment, use the following request body:\n\n```json\n{\n  \"patch\":[\n    {\n      \"op\": \"add\",\n      \"path\": \"/rules/0\",\n      \"value\": {\n        \"clauses\": [{ \"contextKind\": \"user\", \"attribute\": \"email\", \"op\": \"endsWith\", \"values\": [\".edu\"], \"negate\": false }]\n      }\n    }\n  ]\n}\n```\n\nTo add or remove targets from segments, we recommend using semantic patch. Semantic patch for segments includes specific instructions for adding and removing both included and excluded targets.\n"
											},
											"response": [
												{
													"id": "e08adadf-fa0d-4265-afef-37ed0d3ac3d6",
													"name": "Segment response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Example segment\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"key\": \"example-segment\",\n  \"_links\": {\n    \"suntc2e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"est7\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"rules\": [\n    {\n      \"_id\": \"1234a56b7c89d012345e678f\",\n      \"clauses\": [\n        {\n          \"_id\": \"12ab3c45de678910fab12345\",\n          \"attribute\": \"email\",\n          \"negate\": false,\n          \"op\": \"endsWith\",\n          \"values\": [\n            \".edu\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"version\": 1,\n  \"deleted\": false,\n  \"generation\": -60006464,\n  \"description\": \"Bundle our sample customers together\",\n  \"included\": [\n    \"example-user-key-to-include\"\n  ],\n  \"excluded\": [\n    \"example-user-key-to-exclude\"\n  ],\n  \"includedContexts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"excludedContexts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_flags\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"ipsum consequat non\",\n  \"_unboundedMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_external\": \"amplitude\",\n  \"_externalLink\": \"https://analytics.amplitude.com/org/1234/cohort/123abc\",\n  \"_importInProgress\": false\n}"
												},
												{
													"id": "e8eeb99c-49c5-477f-b69f-b513ecb9b445",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "5fb7d155-824e-4701-8551-2bddecd6b796",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "ca2063b2-42ae-4f83-9d71-d9d9cac225ca",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "d11e70a4-e6c8-46c1-940f-59b2fa64b802",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "45742b83-dab7-407b-ab77-824f6fff56be",
													"name": "Status conflict",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "2878f872-6be7-42de-9440-8586b383a7e9",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"patch\": [\n    {\n      \"op\": \"replace\",\n      \"path\": \"/description\",\n      \"value\": \"New description for this segment\"\n    },\n    {\n      \"op\": \"add\",\n      \"path\": \"/tags/0\",\n      \"value\": \"example\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Delete segment",
											"id": "316812d9-305b-4138-aec9-dc9fd39c10de",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey",
														":segmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "Delete a segment."
											},
											"response": [
												{
													"id": "dd77613a-d7b8-4d0c-b4f2-fb857cb40d2c",
													"name": "Action succeeded",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "88bd9a7e-62ed-4043-b566-11096eca87d4",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "df593eba-9cf2-421d-9687-b5861ba47645",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "538109db-d3ce-49b9-8e8d-f10224390473",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "d0af5d4f-7a3e-4bb3-892c-a40f6b4f9412",
													"name": "Status conflict",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "effd7c0f-2be1-4672-9751-fb34d784915d",
													"name": "Rate limited",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey/:segmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":environmentKey",
																":segmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "fb862aea-dc0e-4376-98e0-665a28de858b"
								},
								{
									"name": "List segments",
									"id": "8ddd608a-56d7-4282-adaf-f10d761673c5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"segments",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "Get a list of all segments in the given project."
									},
									"response": [
										{
											"id": "3bee1db6-d332-4fc9-915f-e53876692e91",
											"name": "Segment collection response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Lorem_f4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"irure_0cf\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"id": "6e6537fa-0d51-4680-ba50-d6877aacc096",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "6b90bf7d-1fe3-42be-9142-b1b4b6e2d93d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										}
									]
								},
								{
									"name": "Create segment",
									"id": "c0d224e5-372a-4221-af1d-33c72daae785",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"segments",
												":projectKey",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "Create a new segment."
									},
									"response": [
										{
											"id": "7a55cfaa-219e-4637-8c83-58709023fd2d",
											"name": "Segment response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example segment\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"key\": \"example-segment\",\n  \"_links\": {\n    \"sint_f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"rules\": [\n    {\n      \"_id\": \"1234a56b7c89d012345e678f\",\n      \"clauses\": [\n        {\n          \"_id\": \"12ab3c45de678910fab12345\",\n          \"attribute\": \"email\",\n          \"negate\": false,\n          \"op\": \"endsWith\",\n          \"values\": [\n            \".edu\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"version\": 1,\n  \"deleted\": false,\n  \"generation\": 77808406,\n  \"description\": \"Bundle our sample customers together\",\n  \"included\": [\n    \"example-user-key-to-include\"\n  ],\n  \"excluded\": [\n    \"example-user-key-to-exclude\"\n  ],\n  \"includedContexts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"excludedContexts\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_flags\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"in officia ea sit\",\n  \"_unboundedMetadata\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_external\": \"amplitude\",\n  \"_externalLink\": \"https://analytics.amplitude.com/org/1234/cohort/123abc\",\n  \"_importInProgress\": false\n}"
										},
										{
											"id": "bdda01ce-0a7b-47e1-ad3a-3bd12b86fcdf",
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "021dd88b-2214-4f43-ba22-66f30807fea0",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "3e27af51-9c09-4ea8-90f1-91faeb5cf211",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "14e594d4-cd4d-45f5-84d8-23ef2fc8915b",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "07624263-6c84-406a-aeac-5c699d4443eb",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example segment\",\n  \"key\": \"example-segment\",\n  \"description\": \"Bundle our sample customers together\",\n  \"tags\": [\n    \"testing\"\n  ],\n  \"unbounded\": false,\n  \"unboundedContextKind\": \"device\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "9899477f-fcad-404c-ae4b-b9038098f99e"
						},
						{
							"name": "{segmentKey}",
							"item": [
								{
									"name": "expiring-targets/{environmentKey}",
									"item": [
										{
											"name": "Get expiring targets for segment",
											"id": "6f1f3a4e-61c6-4d55-aad9-ea8b8005eec9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":segmentKey",
														"expiring-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "Get a list of a segment's context targets that are scheduled for removal."
											},
											"response": [
												{
													"id": "b62d50cd-0e7e-4cc8-8bca-61ba244375da",
													"name": "Expiring context target response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"Excepteur_d5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "187aee57-7c36-4c66-b817-7565a442abd8",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "d0dd98b4-df5d-48f9-a8f2-574b66557ba9",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "d60b8ed3-bc12-47ae-87ca-ac29976afdd7",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update expiring targets for segment",
											"id": "9b8a4944-b7f5-4166-b11b-64d5d33b171d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":segmentKey",
														"expiring-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "\nUpdate expiring context targets for a segment. Updating a context target expiration uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\nIf the request is well-formed but any of its instructions failed to process, this operation returns status code `200`. In this case, the response `errors` array will be non-empty.\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating context targets.\n\n#### addExpiringTarget\n\nSchedules a date and time when LaunchDarkly will remove a context from segment targeting.\n\n##### Parameters\n\n- `targetType`: A segment's target type, must be either `included` or `excluded`.\n- `contextKey`: The context key.\n- `contextKind`: The kind of context being targeted.\n- `value`: The date when the context should expire from the segment targeting, in Unix milliseconds.\n\n#### updateExpiringTarget\n\nUpdates the date and time when LaunchDarkly will remove a context from segment targeting.\n\n##### Parameters\n\n- `targetType`: A segment's target type, must be either `included` or `excluded`.\n- `contextKey`: The context key.\n- `contextKind`: The kind of context being targeted.\n- `value`: The new date when the context should expire from the segment targeting, in Unix milliseconds.\n- `version`: The segment version.\n\n#### removeExpiringTarget\n\nRemoves the scheduled expiration for the context in the segment.\n\n##### Parameters\n\n- `targetType`: A segment's target type, must be either `included` or `excluded`.\n- `contextKey`: The context key.\n- `contextKind`: The kind of context being targeted.\n"
											},
											"response": [
												{
													"id": "baa441f3-769f-4f44-9086-7f6c3f5d8b2b",
													"name": "Expiring  target response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"consequat_f\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"minim_fc8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalInstructions\": -3984993,\n  \"successfulInstructions\": -67737332,\n  \"failedInstructions\": -34370749,\n  \"errors\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
												},
												{
													"id": "fc49830b-c423-4778-b98c-292d1ff7255a",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "1afd1ef9-dd8c-4ca9-af4a-6df2ac22d407",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "5d59fa8c-c9c1-4d69-a969-832fefbce98e",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "b3546c37-feec-41cc-beed-9ff9f0272662",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "3af1499e-cd4a-45e6-ad0b-8c539487c3eb",
													"name": "Status conflict",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "c706497c-7441-4bc5-9e90-db1802cdf18d",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "09d93447-3657-4f6d-ae1f-e08b7e11dec9"
								},
								{
									"name": "expiring-user-targets/{environmentKey}",
									"item": [
										{
											"name": "Get expiring user targets for segment",
											"id": "d9cddf8d-fd81-411a-9da0-bed5445f3037",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":segmentKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "> ### Contexts are now available\n>\n> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Get expiring targets for segment](/tag/Segments#operation/getExpiringTargetsForSegment) instead of this endpoint. To learn more, read [Contexts](https://docs.launchdarkly.com/home/contexts).\n\nGet a list of a segment's user targets that are scheduled for removal.\n"
											},
											"response": [
												{
													"id": "16c6af18-3521-499f-acfa-7bcde1a54545",
													"name": "Expiring user target response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"exercitation_2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"temporde\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magna_a0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												},
												{
													"id": "46f30a19-0912-40d1-9498-ed88b3315d9e",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "dda36031-dc2b-4e0b-b22c-c7a71468e3a6",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "dbf4c4c7-006c-4e52-934c-b4917c42d0d6",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Update expiring user targets for segment",
											"id": "650003ea-f9d9-4460-b5d0-c57ff60ce351",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"segments",
														":projectKey",
														":segmentKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "segmentKey",
															"value": "laborum",
															"description": "(Required) The segment key"
														}
													]
												},
												"description": "\n> ### Contexts are now available\n>\n> After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should use [Update expiring targets for segment](/tag/Segments#operation/patchExpiringTargetsForSegment) instead of this endpoint. To learn more, read [Contexts](https://docs.launchdarkly.com/home/contexts).\n\nUpdate expiring user targets for a segment. Updating a user target expiration uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\nIf the request is well-formed but any of its instructions failed to process, this operation returns status code `200`. In this case, the response `errors` array will be non-empty.\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating user targets.\n\n#### addExpireUserTargetDate\n\nSchedules a date and time when LaunchDarkly will remove a user from segment targeting.\n\n##### Parameters\n\n- `targetType`: A segment's target type, must be either `included` or `excluded`.\n- `userKey`: The user key.\n- `value`: The date when the user should expire from the segment targeting, in Unix milliseconds.\n\n#### updateExpireUserTargetDate\n\nUpdates the date and time when LaunchDarkly will remove a user from segment targeting.\n\n##### Parameters\n\n- `targetType`: A segment's target type, must be either `included` or `excluded`.\n- `userKey`: The user key.\n- `value`: The new date when the user should expire from the segment targeting, in Unix milliseconds.\n- `version`: The segment version.\n\n#### removeExpireUserTargetDate\n\nRemoves the scheduled expiration for the user in the segment.\n\n##### Parameters\n\n- `targetType`: A segment's target type, must be either `included` or `excluded`.\n- `userKey`: The user key.\n"
											},
											"response": [
												{
													"id": "b70e2772-3258-4ae4-b074-d7989d2697af",
													"name": "Expiring user target response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"occaecat_a37\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nisi_ab\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"enim2c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"aute4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalInstructions\": 1,\n  \"successfulInstructions\": 1,\n  \"failedInstructions\": 0,\n  \"errors\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
												},
												{
													"id": "a12c3764-baee-4175-a069-b2c43b4f40a7",
													"name": "Invalid request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "955d4279-6350-4b4d-8c89-2b3cb889486e",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "57ace162-6fd7-4e4c-b905-1ea86972707d",
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "5bcb5a17-011c-4e04-a9d1-e03c152e31bf",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "a76f3f1a-9dec-43ca-984c-c8e760136fdb",
													"name": "Status conflict",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "414157e9-308b-4bc4-b439-cc2b0d8b6cff",
													"name": "Rate limited",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"instructions\": [\n    {\n      \"contextKey\": \"contextKey\",\n      \"contextKind\": \"user\",\n      \"kind\": \"updateExpiringTarget\",\n      \"targetType\": \"included\",\n      \"value\": 1587582000000,\n      \"version\": 0\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/segments/:projectKey/:segmentKey/expiring-user-targets/:environmentKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"segments",
																":projectKey",
																":segmentKey",
																"expiring-user-targets",
																":environmentKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "segmentKey",
																	"value": "laborum",
																	"description": "(Required) The segment key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "edead947-7bda-4ad6-bc6a-b5e0b689da90"
								}
							],
							"id": "221d0d35-edd7-4ff0-a3f5-8d9aac0d1ebe"
						}
					],
					"id": "f75729f8-5b44-465e-a1f8-19732a76f6b7"
				},
				{
					"name": "teams",
					"item": [
						{
							"name": "{teamKey}",
							"item": [
								{
									"name": "Get team",
									"id": "d804bc1d-6ec1-4049-9105-c8822713a1ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams",
												":teamKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore",
													"description": "A comma-separated list of properties that can reveal additional information in the response."
												}
											],
											"variable": [
												{
													"key": "teamKey",
													"value": "dolor minim id ullamco",
													"description": "(Required) The team key."
												}
											]
										},
										"description": "Fetch a team by key.\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"Get team\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n"
									},
									"response": [
										{
											"id": "b5659352-a309-4619-8679-9e505e8fc21b",
											"name": "Teams response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"Description for this team.\",\n  \"key\": \"example-team\",\n  \"name\": \"Example team\",\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/teams\",\n      \"type\": \"application/json\"\n    },\n    \"roles\": {\n      \"href\": \"/api/v2/teams/example-team/roles\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/teams/example-team\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_version\": 3,\n  \"_idpSynced\": true,\n  \"roles\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"members\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"projects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainers\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "88f0e451-0ce1-4136-ad3d-735897e185d4",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "e232369c-cec1-4bdd-9ee0-b26de240479a",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "9d59ab70-91c6-4466-be3a-3f551f254381",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "ac4dc6c2-a2a1-4cbc-8955-bd59d5211d5d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "c5e91274-c304-4d97-88d0-eaffb8506af1",
											"name": "Method not allowed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "7b42413a-6fa3-4fcd-abdc-b50ad2efd422",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=aliqua Duis adipisicing dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "aliqua Duis adipisicing dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "dolor minim id ullamco",
															"description": "(Required) The team key."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update team",
									"id": "6a3279b6-fe54-4ce5-8ab0-c4149f9e10fe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams",
												":teamKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "consectetur exercitation enim et dolore",
													"description": "A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above."
												}
											],
											"variable": [
												{
													"key": "teamKey",
													"value": "Duis anim in consequat",
													"description": "(Required) The team key"
												}
											]
										},
										"description": "Perform a partial update to a team. Updating a team uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating teams.\n\n#### addCustomRoles\n\nAdds custom roles to the team. Team members will have these custom roles granted to them.\n\n##### Parameters\n\n- `values`: List of custom role keys.\n\n#### removeCustomRoles\n\nRemoves custom roles from the team. The app will no longer grant these custom roles to the team members.\n\n##### Parameters\n\n- `values`: List of custom role keys.\n\n#### addMembers\n\nAdds members to the team.\n\n##### Parameters\n\n- `values`: List of member IDs to add.\n\n#### removeMembers\n\nRemoves members from the team.\n\n##### Parameters\n\n- `values`: List of member IDs to remove.\n\n#### replaceMembers\n\nReplaces the existing members of the team with the new members.\n\n##### Parameters\n\n- `values`: List of member IDs of the new members.\n\n#### addPermissionGrants\n\nAdds permission grants to members for the team. For example, a permission grant could allow a member to act as a team maintainer. A permission grant may have either an `actionSet` or a list of `actions` but not both at the same time. The members do not have to be team members to have a permission grant for the team.\n\n##### Parameters\n\n- `actionSet`: Name of the action set.\n- `actions`: List of actions.\n- `memberIDs`: List of member IDs.\n\n#### removePermissionGrants\n\nRemoves permission grants from members for the team. The `actionSet` and `actions` must match an existing permission grant.\n\n##### Parameters\n\n- `actionSet`: Name of the action set.\n- `actions`: List of actions.\n- `memberIDs`: List of member IDs.\n\n#### updateDescription\n\nUpdates the description of the team.\n\n##### Parameters\n\n- `value`: The new description.\n\n#### updateName\n\nUpdates the name of the team.\n\n##### Parameters\n\n- `value`: The new name.\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"Update team\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n"
									},
									"response": [
										{
											"id": "83f7f1a0-a312-45cc-b710-ae93a72b9c5c",
											"name": "Teams response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"Description for this team.\",\n  \"key\": \"example-team\",\n  \"name\": \"Example team\",\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/teams\",\n      \"type\": \"application/json\"\n    },\n    \"roles\": {\n      \"href\": \"/api/v2/teams/example-team/roles\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/teams/example-team\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_version\": 3,\n  \"_idpSynced\": true,\n  \"roles\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"members\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"projects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainers\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "95a414f4-9ea5-43f3-a813-59d86f289005",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "971c4391-6812-43e0-b0fe-fd74353e5e90",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "177b2ef9-bca9-453d-8e42-b37ad93657c3",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "41e273d3-f6e5-4158-bda7-9612bfd7ddde",
											"name": "Method not allowed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "c15a02fb-8128-4813-a89b-e7d77ee574b0",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "6d3c18aa-9c0c-4c0e-8ae7-a05a1f4d722b",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"updateDescription\",\n      \"value\": \"New description for the team\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey?expand=consectetur exercitation enim et dolore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"query": [
														{
															"key": "expand",
															"value": "consectetur exercitation enim et dolore"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete team",
									"id": "234a70c9-7c7e-4dd1-b47c-336e42fa5300",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams/:teamKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams",
												":teamKey"
											],
											"variable": [
												{
													"key": "teamKey",
													"value": "Duis anim in consequat",
													"description": "(Required) The team key"
												}
											]
										},
										"description": "Delete a team by key. To learn more, read [Deleting a team](https://docs.launchdarkly.com/home/teams/managing#deleting-a-team)."
									},
									"response": [
										{
											"id": "8fdb8cc2-2f46-4ae2-958f-3ffc2d059aa5",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "b8210605-4dc5-42ff-9e94-a329198f8bea",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "411ac7c3-8089-49e2-92fe-3529b800d9d0",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "9dcafa87-445f-4dae-81f2-9ee432712f48",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get team maintainers",
									"id": "3ed2e612-90ee-442b-a433-d9f84314fffb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams",
												":teamKey",
												"maintainers"
											],
											"query": [
												{
													"key": "limit",
													"value": "52285241",
													"description": "The number of maintainers to return in the response. Defaults to 20."
												},
												{
													"key": "offset",
													"value": "56195558",
													"description": "Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
												}
											],
											"variable": [
												{
													"key": "teamKey",
													"value": "Duis anim in consequat",
													"description": "(Required) The team key"
												}
											]
										},
										"description": "Fetch the maintainers that have been assigned to the team. To learn more, read [Managing team maintainers](https://docs.launchdarkly.com/home/teams/managing#managing-team-maintainers)."
									},
									"response": [
										{
											"id": "4935f871-3c17-458c-9d2e-0428e8fc394f",
											"name": "Team maintainers response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"items\": [\n    {\n      \"_id\": \"569f183514f4432160000007\",\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v2/members/569f183514f4432160000007\",\n          \"type\": \"application/json\"\n        }\n      },\n      \"email\": \"foobar@example.com\",\n      \"firstName\": \"Foo\",\n      \"lastName\": \"Bar\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/teams/example-team/maintainers?limit=5\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
										},
										{
											"id": "e7340014-d96c-4243-bb15-49f9958f30bd",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "7bbdb1f9-e39b-4e83-8b22-405749979219",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "9b59e173-063a-416d-831a-96d1f1170120",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "529f9a06-1223-45da-b6c4-2a429f5f0b73",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "4a385605-6337-47b3-9586-f6d7eb5f1aaa",
											"name": "Method not allowed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "6126115c-18b2-4c3a-9b35-e3cd5736265f",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/maintainers?limit=52285241&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"maintainers"
													],
													"query": [
														{
															"key": "limit",
															"value": "52285241"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Add multiple members to team",
									"id": "d322af58-c25c-46bf-806b-8ae62fb8a282",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"description": "CSV file containing email addresses",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams",
												":teamKey",
												"members"
											],
											"variable": [
												{
													"key": "teamKey",
													"value": "Duis anim in consequat",
													"description": "(Required) The team key"
												}
											]
										},
										"description": "Add multiple members to an existing team by uploading a CSV file of member email addresses. Your CSV file must include email addresses in the first column. You can include data in additional columns, but LaunchDarkly ignores all data outside the first column. Headers are optional. To learn more, read [Managing team members](https://docs.launchdarkly.com/home/teams/managing#managing-team-members).\n\n**Members are only added on a `201` response.** A `207` indicates the CSV file contains a combination of valid and invalid entries. A `207` results in no members being added to the team.\n\nOn a `207` response, if an entry contains bad input, the `message` field contains the row number as well as the reason for the error. The `message` field is omitted if the entry is valid.\n\nExample `207` response:\n```json\n{\n  \"items\": [\n    {\n      \"status\": \"success\",\n      \"value\": \"a-valid-email@launchdarkly.com\"\n    },\n    {\n      \"message\": \"Line 2: empty row\",\n      \"status\": \"error\",\n      \"value\": \"\"\n    },\n    {\n      \"message\": \"Line 3: email already exists in the specified team\",\n      \"status\": \"error\",\n      \"value\": \"existing-team-member@launchdarkly.com\"\n    },\n    {\n      \"message\": \"Line 4: invalid email formatting\",\n      \"status\": \"error\",\n      \"value\": \"invalid email format\"\n    }\n  ]\n}\n```\n\nMessage | Resolution\n--- | ---\nEmpty row | This line is blank. Add an email address and try again.\nDuplicate entry | This email address appears in the file twice. Remove the email from the file and try again.\nEmail already exists in the specified team | This member is already on your team. Remove the email from the file and try again.\nInvalid formatting | This email address is not formatted correctly. Fix the formatting and try again.\nEmail does not belong to a LaunchDarkly member | The email address doesn't belong to a LaunchDarkly account member. Invite them to LaunchDarkly, then re-add them to the team.\n\nOn a `400` response, the `message` field may contain errors specific to this endpoint.\n\nExample `400` response:\n```json\n{\n  \"code\": \"invalid_request\",\n  \"message\": \"Unable to process file\"\n}\n```\n\nMessage | Resolution\n--- | ---\nUnable to process file | LaunchDarkly could not process the file for an unspecified reason. Review your file for errors and try again.\nFile exceeds 25mb | Break up your file into multiple files of less than 25mbs each.\nAll emails have invalid formatting | None of the email addresses in the file are in the correct format. Fix the formatting and try again.\nAll emails belong to existing team members | All listed members are already on this team. Populate the file with member emails that do not belong to the team and try again.\nFile is empty | The CSV file does not contain any email addresses. Populate the file and try again.\nNo emails belong to members of your LaunchDarkly organization | None of the email addresses belong to members of your LaunchDarkly account. Invite these members to LaunchDarkly, then re-add them to the team.\n"
									},
									"response": [
										{
											"id": "00af03a0-4b5e-4f25-9afb-8c5b9652d376",
											"name": "Team member imports response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "CSV file containing email addresses",
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"members"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "1b997a8b-334d-4b3c-bcb3-8021c1471671",
											"name": "Partial Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "CSV file containing email addresses",
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"members"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "3a0d4c77-5383-4330-a542-b696883524f6",
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "CSV file containing email addresses",
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"members"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "2108ab88-7dd0-46da-a8db-09b345a27501",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "CSV file containing email addresses",
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"members"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "d497a6d0-9deb-4353-8a56-2430d374ea94",
											"name": "Method not allowed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "CSV file containing email addresses",
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"members"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "15e08938-8c10-4320-b003-5b33b658f34c",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "CSV file containing email addresses",
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"members"
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get team custom roles",
									"id": "cd177d11-0308-4c73-a4ee-8b0dd7876661",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams",
												":teamKey",
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "41722074",
													"description": "The number of roles to return in the response. Defaults to 20."
												},
												{
													"key": "offset",
													"value": "56195558",
													"description": "Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`."
												}
											],
											"variable": [
												{
													"key": "teamKey",
													"value": "Duis anim in consequat",
													"description": "(Required) The team key"
												}
											]
										},
										"description": "Fetch the custom roles that have been assigned to the team. To learn more, read [Managing team permissions](https://docs.launchdarkly.com/home/teams/managing#managing-team-permissions)."
									},
									"response": [
										{
											"id": "ce976d29-fb76-4653-b0c7-10864ccd8346",
											"name": "Team roles response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/teams/example-team/roles?limit=25\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
										},
										{
											"id": "5853f211-c61b-4d10-9762-514848fc7aee",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "dda45f54-3785-40ef-a763-b29f7c3efe52",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "cc59770a-a3f5-44a4-94e7-ea7bcbd63bdc",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "3cd687cf-2b0c-4a0d-849f-e21a9d5034df",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "8d620e13-6282-489a-b0ad-bc659ecfd0ba",
											"name": "Method not allowed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
										},
										{
											"id": "cb94e7f3-48be-4e29-9e60-4e7cfffa33c8",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/teams/:teamKey/roles?limit=41722074&offset=56195558",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"teams",
														":teamKey",
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "41722074"
														},
														{
															"key": "offset",
															"value": "56195558"
														}
													],
													"variable": [
														{
															"key": "teamKey",
															"value": "Duis anim in consequat",
															"description": "(Required) The team key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "d1ec033f-5c5c-4542-ba1b-8860cba30446"
						},
						{
							"name": "List teams",
							"id": "dfbde41f-0c0d-488c-9601-7a9bd4a388fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?limit=41605241&offset=-30264572&filter=occaecat et commodo quis&expand=aliqua Duis adipisicing dolore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "limit",
											"value": "41605241",
											"description": "The number of teams to return in the response. Defaults to 20."
										},
										{
											"key": "offset",
											"value": "-30264572",
											"description": "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and returns the next `limit` items."
										},
										{
											"key": "filter",
											"value": "occaecat et commodo quis",
											"description": "A comma-separated list of filters. Each filter is constructed as `field:value`."
										},
										{
											"key": "expand",
											"value": "aliqua Duis adipisicing dolore",
											"description": "A comma-separated list of properties that can reveal additional information in the response."
										}
									]
								},
								"description": "Return a list of teams.\n\nBy default, this returns the first 20 teams. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the `_links` field that returns. If those links do not appear, the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page, because there is no previous page and you cannot return to the first page when you are already on the first page.\n\n### Filtering teams\n\nLaunchDarkly supports the following fields for filters:\n\n- `query` is a string that matches against the teams' names and keys. It is not case-sensitive.\n  - A request with `query:abc` returns teams with the string `abc` in their name or key.\n- `nomembers` is a boolean that filters the list of teams who have 0 members\n  - A request with `nomembers:true` returns teams that have 0 members\n  - A request with `nomembers:false` returns teams that have 1 or more members\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"List teams\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n"
							},
							"response": [
								{
									"id": "b1c5086b-0ea6-4f9c-8d04-2136f1ae0ea4",
									"name": "Teams collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?limit=41605241&offset=-30264572&filter=occaecat et commodo quis&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "limit",
													"value": "41605241"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/teams?expand=maintainers%2Cmembers%2Croles%2Cprojects&limit=20\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"totalCount\": 1\n}"
								},
								{
									"id": "61fd87ec-06bd-47b3-87af-1eeb1780697a",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?limit=41605241&offset=-30264572&filter=occaecat et commodo quis&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "limit",
													"value": "41605241"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "73d84a79-7421-4946-b514-296834de0cbe",
									"name": "Method not allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?limit=41605241&offset=-30264572&filter=occaecat et commodo quis&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "limit",
													"value": "41605241"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
								},
								{
									"id": "0dcd63a7-af43-40e8-bc64-f6fc6c50034c",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?limit=41605241&offset=-30264572&filter=occaecat et commodo quis&expand=aliqua Duis adipisicing dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "limit",
													"value": "41605241"
												},
												{
													"key": "offset",
													"value": "-30264572"
												},
												{
													"key": "filter",
													"value": "occaecat et commodo quis"
												},
												{
													"key": "expand",
													"value": "aliqua Duis adipisicing dolore"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create team",
							"id": "e8e8e852-1dce-47bf-a315-73e0c03bb533",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customRoleKeys\": [\n    \"example-role1\",\n    \"example-role2\"\n  ],\n  \"description\": \"An example team\",\n  \"key\": \"example-team\",\n  \"memberIDs\": [\n    \"12ab3c45de678910fgh12345\"\n  ],\n  \"name\": \"Example team\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?expand=consectetur exercitation enim et dolore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "expand",
											"value": "consectetur exercitation enim et dolore",
											"description": "A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above."
										}
									]
								},
								"description": "Create a team. To learn more, read [Creating a team](https://docs.launchdarkly.com/home/teams/creating).\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"Create team\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n"
							},
							"response": [
								{
									"id": "199dfec9-291d-46b0-a84d-54a2d4037a8c",
									"name": "Teams response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customRoleKeys\": [\n    \"example-role1\",\n    \"example-role2\"\n  ],\n  \"description\": \"An example team\",\n  \"key\": \"example-team\",\n  \"memberIDs\": [\n    \"12ab3c45de678910fgh12345\"\n  ],\n  \"name\": \"Example team\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?expand=consectetur exercitation enim et dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "expand",
													"value": "consectetur exercitation enim et dolore"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"description\": \"Description for this team.\",\n  \"key\": \"example-team\",\n  \"name\": \"Example team\",\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/teams\",\n      \"type\": \"application/json\"\n    },\n    \"roles\": {\n      \"href\": \"/api/v2/teams/example-team/roles\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/teams/example-team\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_version\": 3,\n  \"_idpSynced\": true,\n  \"roles\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"members\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"projects\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maintainers\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "08216cf8-ab46-4737-8afc-5ea9e7d88b1b",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customRoleKeys\": [\n    \"example-role1\",\n    \"example-role2\"\n  ],\n  \"description\": \"An example team\",\n  \"key\": \"example-team\",\n  \"memberIDs\": [\n    \"12ab3c45de678910fgh12345\"\n  ],\n  \"name\": \"Example team\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?expand=consectetur exercitation enim et dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "expand",
													"value": "consectetur exercitation enim et dolore"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "c06718d6-04fc-40ed-81dd-aa3f11c1ce65",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customRoleKeys\": [\n    \"example-role1\",\n    \"example-role2\"\n  ],\n  \"description\": \"An example team\",\n  \"key\": \"example-team\",\n  \"memberIDs\": [\n    \"12ab3c45de678910fgh12345\"\n  ],\n  \"name\": \"Example team\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?expand=consectetur exercitation enim et dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "expand",
													"value": "consectetur exercitation enim et dolore"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "e395ef63-ecba-488c-a1f5-735d4929ca04",
									"name": "Method not allowed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customRoleKeys\": [\n    \"example-role1\",\n    \"example-role2\"\n  ],\n  \"description\": \"An example team\",\n  \"key\": \"example-team\",\n  \"memberIDs\": [\n    \"12ab3c45de678910fgh12345\"\n  ],\n  \"name\": \"Example team\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?expand=consectetur exercitation enim et dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "expand",
													"value": "consectetur exercitation enim et dolore"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"Method not allowed\"\n}"
								},
								{
									"id": "76f22d3d-9d68-49e3-ae8d-98014a1a44bb",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customRoleKeys\": [\n    \"example-role1\",\n    \"example-role2\"\n  ],\n  \"description\": \"An example team\",\n  \"key\": \"example-team\",\n  \"memberIDs\": [\n    \"12ab3c45de678910fgh12345\"\n  ],\n  \"name\": \"Example team\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams?expand=consectetur exercitation enim et dolore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											],
											"query": [
												{
													"key": "expand",
													"value": "consectetur exercitation enim et dolore"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Update teams",
							"id": "e5628444-615b-4e6e-99a3-8a5b598dc83c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									]
								},
								"description": "Perform a partial update to multiple teams. Updating teams uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating teams.\n\n#### addMembersToTeams\n\nAdd the members to teams.\n\n##### Parameters\n\n- `memberIDs`: List of member IDs to add.\n- `teamKeys`: List of teams to update.\n\n#### addAllMembersToTeams\n\nAdd all members to the team. Members that match any of the filters are excluded from the update.\n\n##### Parameters\n\n- `teamKeys`: List of teams to update.\n- `filterLastSeen`: (Optional) A JSON object with one of the following formats:\n  - `{\"never\": true}` - Members that have never been active, such as those who have not accepted their invitation to LaunchDarkly, or have not logged in after being provisioned via SCIM.\n  - `{\"noData\": true}` - Members that have not been active since LaunchDarkly began recording last seen timestamps.\n  - `{\"before\": 1608672063611}` - Members that have not been active since the provided value, which should be a timestamp in Unix epoch milliseconds.\n- `filterQuery`: (Optional) A string that matches against the members' emails and names. It is not case sensitive.\n- `filterRoles`: (Optional) A `|` separated list of roles and custom roles. For the purposes of this filtering, `Owner` counts as `Admin`.\n- `filterTeamKey`: (Optional) A string that matches against the key of the team the members belong to. It is not case sensitive.\n- `ignoredMemberIDs`: (Optional) A list of member IDs.\n"
							},
							"response": [
								{
									"id": "a9ced5ba-68b0-4afc-96c3-603a7968e5a0",
									"name": "Teams response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"memberIDs\": [\n    \"1234a56b7c89d012345e678f\"\n  ],\n  \"teamKeys\": [\n    \"example-team-1\"\n  ],\n  \"errors\": [\n    {\n      \"example-team-2\": \"example failure message\"\n    }\n  ]\n}"
								},
								{
									"id": "1b2dc6ea-fb2c-4ae4-b0ca-3f7cdc8bbdcd",
									"name": "Invalid request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "a8eb190e-8753-43c3-829a-be77c5c559a3",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "99131bc3-95e1-41cf-8334-1ff5154feae0",
									"name": "Forbidden",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "0d9bfee6-115e-4976-9bc5-4c766e39d6ad",
									"name": "Status conflict",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
								},
								{
									"id": "e9adb04a-fecb-407c-912d-594b0dd1808c",
									"name": "Rate limited",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Optional comment about the update\",\n  \"instructions\": [\n    {\n      \"kind\": \"addMembersToTeams\",\n      \"memberIDs\": [\n        \"1234a56b7c89d012345e678f\"\n      ],\n      \"teamKeys\": [\n        \"example-team-1\",\n        \"example-team-2\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"teams"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "7e55175c-bd68-4b56-9a56-feafd9f17103"
				},
				{
					"name": "templates",
					"item": [
						{
							"name": "Get workflow templates",
							"id": "5b654c4d-f1c2-4e9c-b61b-9d8a9e124059",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/templates?summary=true&search=sunt aliqua eiusmod Ut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"templates"
									],
									"query": [
										{
											"key": "summary",
											"value": "true",
											"description": "Whether the entire template object or just a summary should be returned"
										},
										{
											"key": "search",
											"value": "sunt aliqua eiusmod Ut",
											"description": "The substring in either the name or description of a template"
										}
									]
								},
								"description": "Get workflow templates belonging to an account, or can optionally return templates_endpoints.workflowTemplateSummariesListingOutputRep when summary query param is true"
							},
							"response": [
								{
									"id": "c34905fb-5541-4580-9676-6073c5e3d418",
									"name": "Workflow templates list response JSON",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates?summary=true&search=sunt aliqua eiusmod Ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											],
											"query": [
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "search",
													"value": "sunt aliqua eiusmod Ut"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "78b8b19c-0044-4847-8f7d-a3c64b72ba13",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates?summary=true&search=sunt aliqua eiusmod Ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											],
											"query": [
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "search",
													"value": "sunt aliqua eiusmod Ut"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "492bbd63-7e35-4168-a085-4ef1b0e464c6",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates?summary=true&search=sunt aliqua eiusmod Ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											],
											"query": [
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "search",
													"value": "sunt aliqua eiusmod Ut"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "f92b90c6-c32f-418c-9f0f-352a9e9e7574",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates?summary=true&search=sunt aliqua eiusmod Ut",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											],
											"query": [
												{
													"key": "summary",
													"value": "true"
												},
												{
													"key": "search",
													"value": "sunt aliqua eiusmod Ut"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create workflow template",
							"id": "ef5d4906-1201-4e85-bf7d-66994bff82ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"laboris ut\",\n  \"name\": \"officia dolor\",\n  \"description\": \"adipisici\",\n  \"workflowId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"projectKey\": \"aute dolore sed officia\",\n  \"environmentKey\": \"aliquip voluptate ullamco\",\n  \"flagKey\": \"quis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"templates"
									]
								},
								"description": "Create a template for a feature flag workflow"
							},
							"response": [
								{
									"id": "399dc4e1-6448-49c6-8a83-0f29d187fdfb",
									"name": "Workflow template response JSON",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"ex non quis\",\n  \"name\": \"Excepteur commodo enim\",\n  \"description\": \"eiusmod qui\",\n  \"workflowId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"projectKey\": \"voluptate laboris mollit quis\",\n  \"environmentKey\": \"dolor culpa consectetur\",\n  \"flagKey\": \"deserunt occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": \"elit\",\n  \"_key\": \"dolor nulla\",\n  \"_creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_ownerId\": \"ut labore voluptate nisi esse\",\n  \"_maintainerId\": \"Duis quis Excepteur nisi\",\n  \"_links\": {\n    \"ad_1a6\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"do_a\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"Lorem_41\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"name\": \"veniam velit\",\n  \"description\": \"incididunt occaecat deserunt i\",\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "da4946d7-0608-46ad-8159-9c22f84f10b6",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"ex non quis\",\n  \"name\": \"Excepteur commodo enim\",\n  \"description\": \"eiusmod qui\",\n  \"workflowId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"projectKey\": \"voluptate laboris mollit quis\",\n  \"environmentKey\": \"dolor culpa consectetur\",\n  \"flagKey\": \"deserunt occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "f6851e61-239f-4af3-9f8b-2f501fcee237",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"ex non quis\",\n  \"name\": \"Excepteur commodo enim\",\n  \"description\": \"eiusmod qui\",\n  \"workflowId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"projectKey\": \"voluptate laboris mollit quis\",\n  \"environmentKey\": \"dolor culpa consectetur\",\n  \"flagKey\": \"deserunt occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "94291461-89a5-49a0-8f6f-e6990499cf60",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"ex non quis\",\n  \"name\": \"Excepteur commodo enim\",\n  \"description\": \"eiusmod qui\",\n  \"workflowId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"projectKey\": \"voluptate laboris mollit quis\",\n  \"environmentKey\": \"dolor culpa consectetur\",\n  \"flagKey\": \"deserunt occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "72793e4a-5d84-4f2d-8cfd-17f870fe7eec",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"ex non quis\",\n  \"name\": \"Excepteur commodo enim\",\n  \"description\": \"eiusmod qui\",\n  \"workflowId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"stages\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"projectKey\": \"voluptate laboris mollit quis\",\n  \"environmentKey\": \"dolor culpa consectetur\",\n  \"flagKey\": \"deserunt occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Delete workflow template",
							"id": "7a775820-3b36-40ca-9d0f-10cacadfd9cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"templates",
										":templateKey"
									],
									"variable": [
										{
											"key": "templateKey",
											"value": "ut",
											"description": "(Required) The template key"
										}
									]
								},
								"description": "Delete a workflow template"
							},
							"response": [
								{
									"id": "4a5f3871-591e-44e2-adf6-8a5b39066496",
									"name": "Action completed successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates",
												":templateKey"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "ut",
													"description": "(Required) The template key"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7410972e-3d98-4864-afe8-be66e9dbe5f1",
									"name": "Invalid request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates",
												":templateKey"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "ut",
													"description": "(Required) The template key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "a30d80f9-faf9-4af6-b480-7ba4af43b75d",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates",
												":templateKey"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "ut",
													"description": "(Required) The template key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "04db23d3-82ad-42ad-8224-e121bcaae386",
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates",
												":templateKey"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "ut",
													"description": "(Required) The template key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "915e4ead-6c45-45c2-ab0a-cf875a21be1c",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates",
												":templateKey"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "ut",
													"description": "(Required) The template key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "2c208e9e-ab10-4627-ba78-d735a11809ce",
									"name": "Rate limited",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/templates/:templateKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"templates",
												":templateKey"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "ut",
													"description": "(Required) The template key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "3a06d4cc-63c9-4082-a7ab-790458d790ea"
				},
				{
					"name": "tokens",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get access token",
									"id": "6d202230-86cc-4b6a-aebd-2abcb6cf0b0f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "mollit",
													"description": "(Required) The ID of the access token"
												}
											]
										},
										"description": "Get a single access token by ID."
									},
									"response": [
										{
											"id": "652a70fa-ac5a-48de-8cce-72d4f20aeaa6",
											"name": "Access token response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "mollit",
															"description": "(Required) The ID of the access token"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ownerId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"memberId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/tokens\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/tokens/61095542756dba551110ae21\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Example reader token\",\n  \"description\": \"A reader token used in testing and examples\",\n  \"role\": \"reader\",\n  \"token\": \"1234\",\n  \"serviceToken\": false,\n  \"defaultApiVersion\": 20220603,\n  \"lastUsed\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "d5509870-947b-47f9-9795-02495378ab39",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "mollit",
															"description": "(Required) The ID of the access token"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "f6266c13-4c7e-4bd4-a8b2-f67273150149",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "mollit",
															"description": "(Required) The ID of the access token"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "fb866b04-65e8-4999-9feb-1e81aee20c8f",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "mollit",
															"description": "(Required) The ID of the access token"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "2a023f0b-273f-4b54-8024-23efd16ab532",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "mollit",
															"description": "(Required) The ID of the access token"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Patch access token",
									"id": "c58489dc-a6d7-45d9-8011-d103b941d2d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam in",
													"description": "(Required) The ID of the access token to update"
												}
											]
										},
										"description": "Update an access token's settings. The request should be a valid JSON Patch document describing the changes to be made to the access token."
									},
									"response": [
										{
											"id": "601604dc-f12b-467e-9890-0da4c1dbb4fc",
											"name": "Access token response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ownerId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"memberId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/tokens\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/tokens/61095542756dba551110ae21\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Example reader token\",\n  \"description\": \"A reader token used in testing and examples\",\n  \"role\": \"reader\",\n  \"token\": \"1234\",\n  \"serviceToken\": false,\n  \"defaultApiVersion\": 20220603,\n  \"lastUsed\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "604b7984-7cb3-4d3b-83f8-cc7bbead7182",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "549c88f7-38b0-46bc-858e-903c178dfeda",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "b08c36c7-8244-4aae-8837-1cba992a59a6",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "87e5a4ce-2578-495f-b797-1459ab973a63",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "a456826c-5e1d-4368-ad35-6285d17bc666",
											"name": "Status conflict",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
										},
										{
											"id": "7e38c716-92d0-4082-b25d-f704903c9559",
											"name": "Invalid patch content",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"patch_failed\",\n  \"message\": \"Unprocessable entity. Could not apply patch.\"\n}"
										},
										{
											"id": "49317899-4dfa-4124-9f27-d76331a58014",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/role\",\n    \"value\": \"writer\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete access token",
									"id": "09b4c39c-42f4-4b8e-bdcd-6968a3f53537",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam in",
													"description": "(Required) The ID of the access token to update"
												}
											]
										},
										"description": "Delete an access token by ID."
									},
									"response": [
										{
											"id": "6f366774-8fd0-4a64-a9f4-81b682e83048",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "aed66d3e-7878-4d01-8324-b223214926a2",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "ecaae26c-3f83-4303-83ff-b7dc42694cb9",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "b39ec34a-d43c-4bee-b916-400174b0bf43",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "f738b356-7a2e-40f6-8101-14342fbed44b",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Reset access token",
									"id": "38605d1a-366d-40cd-aa99-97a85825d237",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens/:id/reset?expiry=-19190561",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens",
												":id",
												"reset"
											],
											"query": [
												{
													"key": "expiry",
													"value": "-19190561",
													"description": "An expiration time for the old token key, expressed as a Unix epoch time in milliseconds. By default, the token will expire immediately."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam in",
													"description": "(Required) The ID of the access token to update"
												}
											]
										},
										"description": "Reset an access token's secret key with an optional expiry time for the old key."
									},
									"response": [
										{
											"id": "92c96d61-5f82-4101-9370-be2511b474dd",
											"name": "Access token response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id/reset?expiry=-19190561",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "-19190561"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ownerId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"memberId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/tokens\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/tokens/61095542756dba551110ae21\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Example reader token\",\n  \"description\": \"A reader token used in testing and examples\",\n  \"role\": \"reader\",\n  \"token\": \"1234\",\n  \"serviceToken\": false,\n  \"defaultApiVersion\": 20220603,\n  \"lastUsed\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "df93e91d-05a3-4bf3-8cac-8bb8ab62734e",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id/reset?expiry=-19190561",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "-19190561"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "f24b1970-00f4-4bf4-9362-7add3356bb7e",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id/reset?expiry=-19190561",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "-19190561"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "2ddcaa1e-85be-4e3f-9cbc-8546086108e1",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id/reset?expiry=-19190561",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "-19190561"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "76720a8f-4380-43ca-b983-db88b12a18d3",
											"name": "Rate limited",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tokens/:id/reset?expiry=-19190561",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tokens",
														":id",
														"reset"
													],
													"query": [
														{
															"key": "expiry",
															"value": "-19190561"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "veniam in",
															"description": "(Required) The ID of the access token to update"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "e48ef6a3-302c-4368-bd66-3cfcb0ac3852"
						},
						{
							"name": "List access tokens",
							"id": "ceec9e01-811c-49ad-95bc-63bb32f5e761",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/tokens?showAll=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tokens"
									],
									"query": [
										{
											"key": "showAll",
											"value": "true",
											"description": "If set to true, and the authentication access token has the 'Admin' role, personal access tokens for all members will be retrieved."
										}
									]
								},
								"description": "Fetch a list of all access tokens."
							},
							"response": [
								{
									"id": "0df04000-6139-4886-bf2d-fb56fee01390",
									"name": "Access tokens collection response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens?showAll=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											],
											"query": [
												{
													"key": "showAll",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"veniama4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"pariatur_d75\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
								},
								{
									"id": "969197a2-6d2c-4c07-aa85-025f9c04309e",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens?showAll=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											],
											"query": [
												{
													"key": "showAll",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "ef234014-76a6-45dd-9dd1-383a14d81e3d",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens?showAll=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											],
											"query": [
												{
													"key": "showAll",
													"value": "true"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "65fbf042-c646-44bb-adf5-b36a331a3bac",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens?showAll=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											],
											"query": [
												{
													"key": "showAll",
													"value": "true"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Create access token",
							"id": "9d07fc35-eb53-4db0-a849-cc657624db5c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"role\": \"reader\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tokens"
									]
								},
								"description": "Create a new access token."
							},
							"response": [
								{
									"id": "32b3c1ec-242f-4225-bfac-9d7c53409b16",
									"name": "Access token response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"reader\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_id\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ownerId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"memberId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"creationDate\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"lastModified\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/tokens\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/tokens/61095542756dba551110ae21\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_member\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"name\": \"Example reader token\",\n  \"description\": \"A reader token used in testing and examples\",\n  \"role\": \"reader\",\n  \"token\": \"1234\",\n  \"serviceToken\": false,\n  \"defaultApiVersion\": 20220603,\n  \"lastUsed\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "8cc4e7d1-666b-4e29-9657-296a52f9a33d",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"reader\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "ff866f14-9f91-4eec-ac54-591c00acfbcd",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"reader\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "6ffeb241-8b15-44fb-95be-3c17ea479277",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"reader\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "a4c67038-15e0-40d5-a39d-053a82ab8d35",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"reader\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tokens"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "c40fbcf5-a51c-47c0-a951-2887f5f560b9"
				},
				{
					"name": "usage",
					"item": [
						{
							"name": "mau",
							"item": [
								{
									"name": "Get MAU usage",
									"id": "c18167a4-edd3-41b8-95e8-aab5a22df7fd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/mau?from=v&to=incididunt ut mollit&project=reprehen&environment=nisi incididunt dolor laborum&sdktype=sed occaecat non est aute&sdk=cillum veniam&anonymous=Excep&groupby=velit aliqua E",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"mau"
											],
											"query": [
												{
													"key": "from",
													"value": "v",
													"description": "The series of data returned starts from this timestamp. Defaults to 30 days ago."
												},
												{
													"key": "to",
													"value": "incididunt ut mollit",
													"description": "The series of data returned ends at this timestamp. Defaults to the current time."
												},
												{
													"key": "project",
													"value": "reprehen",
													"description": "A project key to filter results to. Can be specified multiple times, one query parameter per project key, to view data for multiple projects."
												},
												{
													"key": "environment",
													"value": "nisi incididunt dolor laborum",
													"description": "An environment key to filter results to. When using this parameter, exactly one project key must also be set. Can be specified multiple times as separate query parameters to view data for multiple environments within a single project."
												},
												{
													"key": "sdktype",
													"value": "sed occaecat non est aute",
													"description": "An SDK type to filter results to. Can be specified multiple times, one query parameter per SDK type. Valid values: client, server"
												},
												{
													"key": "sdk",
													"value": "cillum veniam",
													"description": "An SDK name to filter results to. Can be specified multiple times, one query parameter per SDK."
												},
												{
													"key": "anonymous",
													"value": "Excep",
													"description": "If specified, filters results to either anonymous or nonanonymous users."
												},
												{
													"key": "groupby",
													"value": "velit aliqua E",
													"description": "If specified, returns data for each distinct value of the given field. Can be specified multiple times to group data by multiple dimensions (for example, to group by both project and SDK). Valid values: project, environment, sdktype, sdk, anonymous"
												}
											]
										},
										"description": "Get a time-series array of the number of monthly active users (MAU) seen by LaunchDarkly from your account. The granularity is always daily.<br/><br/>Endpoints for retrieving monthly active users (MAU) do not return information about active context instances. After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should not rely on this endpoint. Use [Get client-side monthly context instances uage](/tag/Account-usage-(beta)#operation/getCMCIUsage) instead. To learn more, read [Account usage metrics](https://docs.launchdarkly.com/home/billing/usage-metrics)."
									},
									"response": [
										{
											"id": "fef9eae5-225e-413f-8efb-aa1c46992a4d",
											"name": "Usage response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau?from=v&to=incididunt ut mollit&project=reprehen&environment=nisi incididunt dolor laborum&sdktype=sed occaecat non est aute&sdk=cillum veniam&anonymous=Excep&groupby=velit aliqua E",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "project",
															"value": "reprehen"
														},
														{
															"key": "environment",
															"value": "nisi incididunt dolor laborum"
														},
														{
															"key": "sdktype",
															"value": "sed occaecat non est aute"
														},
														{
															"key": "sdk",
															"value": "cillum veniam"
														},
														{
															"key": "anonymous",
															"value": "Excep"
														},
														{
															"key": "groupby",
															"value": "velit aliqua E"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"pariatura\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate_97\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "de08d766-057b-41f0-a60d-59d6afc6b566",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau?from=v&to=incididunt ut mollit&project=reprehen&environment=nisi incididunt dolor laborum&sdktype=sed occaecat non est aute&sdk=cillum veniam&anonymous=Excep&groupby=velit aliqua E",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "project",
															"value": "reprehen"
														},
														{
															"key": "environment",
															"value": "nisi incididunt dolor laborum"
														},
														{
															"key": "sdktype",
															"value": "sed occaecat non est aute"
														},
														{
															"key": "sdk",
															"value": "cillum veniam"
														},
														{
															"key": "anonymous",
															"value": "Excep"
														},
														{
															"key": "groupby",
															"value": "velit aliqua E"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "a89dbbc6-ce13-4b94-83c8-53d1f8d94af0",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau?from=v&to=incididunt ut mollit&project=reprehen&environment=nisi incididunt dolor laborum&sdktype=sed occaecat non est aute&sdk=cillum veniam&anonymous=Excep&groupby=velit aliqua E",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "project",
															"value": "reprehen"
														},
														{
															"key": "environment",
															"value": "nisi incididunt dolor laborum"
														},
														{
															"key": "sdktype",
															"value": "sed occaecat non est aute"
														},
														{
															"key": "sdk",
															"value": "cillum veniam"
														},
														{
															"key": "anonymous",
															"value": "Excep"
														},
														{
															"key": "groupby",
															"value": "velit aliqua E"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "86a0bc96-7de8-40ff-9fa6-c84aab8cde13",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau?from=v&to=incididunt ut mollit&project=reprehen&environment=nisi incididunt dolor laborum&sdktype=sed occaecat non est aute&sdk=cillum veniam&anonymous=Excep&groupby=velit aliqua E",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "project",
															"value": "reprehen"
														},
														{
															"key": "environment",
															"value": "nisi incididunt dolor laborum"
														},
														{
															"key": "sdktype",
															"value": "sed occaecat non est aute"
														},
														{
															"key": "sdk",
															"value": "cillum veniam"
														},
														{
															"key": "anonymous",
															"value": "Excep"
														},
														{
															"key": "groupby",
															"value": "velit aliqua E"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "c7d3fa06-12bb-467d-bbc5-b6f2ddf7c0e5",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau?from=v&to=incididunt ut mollit&project=reprehen&environment=nisi incididunt dolor laborum&sdktype=sed occaecat non est aute&sdk=cillum veniam&anonymous=Excep&groupby=velit aliqua E",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "project",
															"value": "reprehen"
														},
														{
															"key": "environment",
															"value": "nisi incididunt dolor laborum"
														},
														{
															"key": "sdktype",
															"value": "sed occaecat non est aute"
														},
														{
															"key": "sdk",
															"value": "cillum veniam"
														},
														{
															"key": "anonymous",
															"value": "Excep"
														},
														{
															"key": "groupby",
															"value": "velit aliqua E"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get MAU usage by category",
									"id": "fae955bc-631c-4d2b-a5ad-333a0c174b49",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"mau",
												"bycategory"
											],
											"query": [
												{
													"key": "from",
													"value": "v",
													"description": "The series of data returned starts from this timestamp. Defaults to 30 days ago."
												},
												{
													"key": "to",
													"value": "incididunt ut mollit",
													"description": "The series of data returned ends at this timestamp. Defaults to the current time."
												}
											]
										},
										"description": "Get time-series arrays of the number of monthly active users (MAU) seen by LaunchDarkly from your account, broken down by the category of users. The category is either `browser`, `mobile`, or `backend`.<br/><br/>Endpoints for retrieving monthly active users (MAU) do not return information about active context instances. After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should not rely on this endpoint. Use [Get client-side monthly context instances uage](/tag/Account-usage-(beta)#operation/getCMCIUsage) instead. To learn more, read [Account usage metrics](https://docs.launchdarkly.com/home/billing/usage-metrics)."
									},
									"response": [
										{
											"id": "8b49cb18-2683-4ffd-b9cd-cca9bc8f69d0",
											"name": "Usage response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"bycategory"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"pariatura\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate_97\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "4d58a1f9-3067-4b82-817d-8951f6ee00f5",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"bycategory"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "9116f77e-00f5-40ec-810e-81d43f18e429",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"bycategory"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "58f0feb1-8381-4158-8df3-1d7b76ffcb59",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"bycategory"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "e9300e5e-da57-4893-a54e-5e5953cb73ea",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"bycategory"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "bb06c50f-f372-4870-a01a-510a3ea4fdde",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/bycategory?from=v&to=incididunt ut mollit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"bycategory"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get MAU SDKs by type",
									"id": "274a75d3-7701-4f9a-b046-15a3f86d85a1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/mau/sdks?from=sed occaecat&to=Lorem Excepteur v&sdktype=ea officia esse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"mau",
												"sdks"
											],
											"query": [
												{
													"key": "from",
													"value": "sed occaecat",
													"description": "The data returned starts from this timestamp. Defaults to seven days ago. The timestamp is in Unix milliseconds, for example, 1656694800000."
												},
												{
													"key": "to",
													"value": "Lorem Excepteur v",
													"description": "The data returned ends at this timestamp. Defaults to the current time. The timestamp is in Unix milliseconds, for example, 1657904400000."
												},
												{
													"key": "sdktype",
													"value": "ea officia esse",
													"description": "The type of SDK with monthly active users (MAU) to list. Must be either `client` or `server`."
												}
											]
										},
										"description": "Get a list of SDKs. These are all of the SDKs that have connected to LaunchDarkly by monthly active users (MAU) in the requested time period.<br/><br/>Endpoints for retrieving monthly active users (MAU) do not return information about active context instances. After you have upgraded your LaunchDarkly SDK to use contexts instead of users, you should not rely on this endpoint. Use [Get client-side monthly context instances uage](/tag/Account-usage-(beta)#operation/getCMCIUsage) instead. To learn more, read [Account usage metrics](https://docs.launchdarkly.com/home/billing/usage-metrics)."
									},
									"response": [
										{
											"id": "474622af-8677-471c-a63e-5f7722fb2d25",
											"name": "MAU SDKs response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/sdks?from=sed occaecat&to=Lorem Excepteur v&sdktype=ea officia esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"sdks"
													],
													"query": [
														{
															"key": "from",
															"value": "sed occaecat"
														},
														{
															"key": "to",
															"value": "Lorem Excepteur v"
														},
														{
															"key": "sdktype",
															"value": "ea officia esse"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"dolor_e\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sdks\": [\n    \"Android\",\n    \"Java\",\n    \"Node.js\"\n  ]\n}"
										},
										{
											"id": "d3227c3f-8169-4b9c-bc5a-322ae321420c",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/sdks?from=sed occaecat&to=Lorem Excepteur v&sdktype=ea officia esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"sdks"
													],
													"query": [
														{
															"key": "from",
															"value": "sed occaecat"
														},
														{
															"key": "to",
															"value": "Lorem Excepteur v"
														},
														{
															"key": "sdktype",
															"value": "ea officia esse"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "c90d302c-8622-4d59-8657-6304e09950c3",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/sdks?from=sed occaecat&to=Lorem Excepteur v&sdktype=ea officia esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"sdks"
													],
													"query": [
														{
															"key": "from",
															"value": "sed occaecat"
														},
														{
															"key": "to",
															"value": "Lorem Excepteur v"
														},
														{
															"key": "sdktype",
															"value": "ea officia esse"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "f3533144-d6e8-42ed-b6c0-4886de137d53",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/sdks?from=sed occaecat&to=Lorem Excepteur v&sdktype=ea officia esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"sdks"
													],
													"query": [
														{
															"key": "from",
															"value": "sed occaecat"
														},
														{
															"key": "to",
															"value": "Lorem Excepteur v"
														},
														{
															"key": "sdktype",
															"value": "ea officia esse"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "1feb0196-1d72-419f-89aa-0668c9fca3e3",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/mau/sdks?from=sed occaecat&to=Lorem Excepteur v&sdktype=ea officia esse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"mau",
														"sdks"
													],
													"query": [
														{
															"key": "from",
															"value": "sed occaecat"
														},
														{
															"key": "to",
															"value": "Lorem Excepteur v"
														},
														{
															"key": "sdktype",
															"value": "ea officia esse"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "1f917250-7054-4b77-a023-4357a77c06e3"
						},
						{
							"name": "streams/{source}",
							"item": [
								{
									"name": "Get stream usage",
									"id": "f2176298-f8d5-4de0-895f-85e1442aa9d4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"streams",
												":source"
											],
											"query": [
												{
													"key": "from",
													"value": "v",
													"description": "The series of data returned starts from this timestamp. Defaults to 30 days ago."
												},
												{
													"key": "to",
													"value": "incididunt ut mollit",
													"description": "The series of data returned ends at this timestamp. Defaults to the current time."
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum",
													"description": "The timezone to use for breaks between days when returning daily data."
												}
											],
											"variable": [
												{
													"key": "source",
													"value": "non quis Duis",
													"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
												}
											]
										},
										"description": "Get a time-series array of the number of streaming connections to LaunchDarkly in each time period. The granularity of the data depends on the age of the data requested. If the requested range is within the past two hours, minutely data is returned. If it is within the last two days, hourly data is returned. Otherwise, daily data is returned."
									},
									"response": [
										{
											"id": "74cc4951-22f7-483b-8e6c-7acdd3bdc613",
											"name": "Usage response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"pariatura\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate_97\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "0ec8dd64-a6ff-4c63-9220-98928021a15b",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "8cd75c9e-ba3a-4958-bd6f-005867d042bd",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "07040b63-929a-410d-96b8-c674edbbafc7",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "82fa4dcd-fbd2-49cb-b7a5-46db12f688be",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "b1d07daf-7098-4695-8f47-67d862a82b02",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source"
													],
													"query": [
														{
															"key": "from",
															"value": "v"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get stream usage by SDK version",
									"id": "1789d4da-c75e-40bf-bbba-6a7eaf54b696",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"streams",
												":source",
												"bysdkversion"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate",
													"description": "The series of data returned starts from this timestamp. Defaults to 24 hours ago."
												},
												{
													"key": "to",
													"value": "incididunt ut mollit",
													"description": "The series of data returned ends at this timestamp. Defaults to the current time."
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum",
													"description": "The timezone to use for breaks between days when returning daily data."
												},
												{
													"key": "sdk",
													"value": "ullamco pariatur sit occaecat",
													"description": "If included, this filters the returned series to only those that match this SDK name."
												},
												{
													"key": "version",
													"value": "exercitation ad tempor velit",
													"description": "If included, this filters the returned series to only those that match this SDK version."
												}
											],
											"variable": [
												{
													"key": "source",
													"value": "non quis Duis",
													"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
												}
											]
										},
										"description": "Get multiple series of the number of streaming connections to LaunchDarkly in each time period, separated by SDK type and version. Information about each series is in the metadata array. The granularity of the data depends on the age of the data requested. If the requested range is within the past 2 hours, minutely data is returned. If it is within the last two days, hourly data is returned. Otherwise, daily data is returned."
									},
									"response": [
										{
											"id": "34652ad9-66e2-4fb8-9873-a83d5b4e97b8",
											"name": "Usage response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"bysdkversion"
													],
													"query": [
														{
															"key": "from",
															"value": "reprehenderit voluptate"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														},
														{
															"key": "sdk",
															"value": "ullamco pariatur sit occaecat"
														},
														{
															"key": "version",
															"value": "exercitation ad tempor velit"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"pariatura\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate_97\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "33d42a8e-314d-4323-9fa8-8b3dacb5bdb5",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"bysdkversion"
													],
													"query": [
														{
															"key": "from",
															"value": "reprehenderit voluptate"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														},
														{
															"key": "sdk",
															"value": "ullamco pariatur sit occaecat"
														},
														{
															"key": "version",
															"value": "exercitation ad tempor velit"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "a0c9d431-48e7-4a68-8389-5a7fc530b62a",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"bysdkversion"
													],
													"query": [
														{
															"key": "from",
															"value": "reprehenderit voluptate"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														},
														{
															"key": "sdk",
															"value": "ullamco pariatur sit occaecat"
														},
														{
															"key": "version",
															"value": "exercitation ad tempor velit"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "a830be6c-162e-48f9-99a9-ca4305fd53bf",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"bysdkversion"
													],
													"query": [
														{
															"key": "from",
															"value": "reprehenderit voluptate"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														},
														{
															"key": "sdk",
															"value": "ullamco pariatur sit occaecat"
														},
														{
															"key": "version",
															"value": "exercitation ad tempor velit"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "f65e61f6-c9b5-4af9-8fa2-64d24dcd797d",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"bysdkversion"
													],
													"query": [
														{
															"key": "from",
															"value": "reprehenderit voluptate"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														},
														{
															"key": "sdk",
															"value": "ullamco pariatur sit occaecat"
														},
														{
															"key": "version",
															"value": "exercitation ad tempor velit"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "b85642dc-fd19-4102-8fa9-728d4f62024b",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/bysdkversion?from=reprehenderit voluptate&to=incididunt ut mollit&tz=elit aliquip minim ipsum&sdk=ullamco pariatur sit occaecat&version=exercitation ad tempor velit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"bysdkversion"
													],
													"query": [
														{
															"key": "from",
															"value": "reprehenderit voluptate"
														},
														{
															"key": "to",
															"value": "incididunt ut mollit"
														},
														{
															"key": "tz",
															"value": "elit aliquip minim ipsum"
														},
														{
															"key": "sdk",
															"value": "ullamco pariatur sit occaecat"
														},
														{
															"key": "version",
															"value": "exercitation ad tempor velit"
														}
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Get stream usage SDK versions",
									"id": "d6d7004a-a7e2-4456-b09f-5e48250eebd3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/streams/:source/sdkversions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"streams",
												":source",
												"sdkversions"
											],
											"variable": [
												{
													"key": "source",
													"value": "non quis Duis",
													"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
												}
											]
										},
										"description": "Get a list of SDK version objects, which contain an SDK name and version. These are all of the SDKs that have connected to LaunchDarkly from your account in the past 60 days."
									},
									"response": [
										{
											"id": "dc21d71a-034d-464f-b1eb-14dc1c94bff4",
											"name": "SDK Versions response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/sdkversions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"sdkversions"
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"proident_e3b\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ut_d\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sdkVersions\": [\n    {\n      \"sdk\": \"Android\",\n      \"version\": \"3.1.2\"\n    },\n    {\n      \"sdk\": \"Android\",\n      \"version\": \"3.1.5\"\n    },\n    {\n      \"sdk\": \"C\",\n      \"version\": \"2.4.6\"\n    }\n  ]\n}"
										},
										{
											"id": "e12280d7-c84c-4c06-ba4a-98a7578e59f0",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/sdkversions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"sdkversions"
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "7fab433a-19e0-47bc-9042-76cc47893178",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/sdkversions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"sdkversions"
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "224a7b18-0217-43c3-8aab-cd011c4fdd73",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/usage/streams/:source/sdkversions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"usage",
														"streams",
														":source",
														"sdkversions"
													],
													"variable": [
														{
															"key": "source",
															"value": "non quis Duis",
															"description": "(Required) The source of streaming connections to describe. Must be either `client` or `server`."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "0a2c3477-c706-40e1-976f-846977e4933d"
						},
						{
							"name": "Get evaluations usage",
							"id": "0f5cd3ac-5c09-4ea9-8e86-2df875629022",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"evaluations",
										":projectKey",
										":environmentKey",
										":featureFlagKey"
									],
									"query": [
										{
											"key": "from",
											"value": "v",
											"description": "The series of data returned starts from this timestamp. Defaults to 30 days ago."
										},
										{
											"key": "to",
											"value": "incididunt ut mollit",
											"description": "The series of data returned ends at this timestamp. Defaults to the current time."
										},
										{
											"key": "tz",
											"value": "elit aliquip minim ipsum",
											"description": "The timezone to use for breaks between days when returning daily data."
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								},
								"description": "Get time-series arrays of the number of times a flag is evaluated, broken down by the variation that resulted from that evaluation. The granularity of the data depends on the age of the data requested. If the requested range is within the past two hours, minutely data is returned. If it is within the last two days, hourly data is returned. Otherwise, daily data is returned."
							},
							"response": [
								{
									"id": "a782ba45-9f18-4d46-bce2-464cb48818d8",
									"name": "Usage response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"evaluations",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "from",
													"value": "v"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"adipisicing_a6\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "abe424e9-7734-46d3-be3b-d4a335d186db",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"evaluations",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "from",
													"value": "v"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "a7f1ce7a-0c5a-4a4f-8663-a33ef0bae41b",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"evaluations",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "from",
													"value": "v"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "863e3cbb-4a71-4f0e-b945-2c7cf3295d1e",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"evaluations",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "from",
													"value": "v"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "0278d369-185d-430f-a2ed-9e4eea1deb1f",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"evaluations",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "from",
													"value": "v"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "b1bb4e57-eb18-4bf0-be79-4e6f782d8bac",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/evaluations/:projectKey/:environmentKey/:featureFlagKey?from=v&to=incididunt ut mollit&tz=elit aliquip minim ipsum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"evaluations",
												":projectKey",
												":environmentKey",
												":featureFlagKey"
											],
											"query": [
												{
													"key": "from",
													"value": "v"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												},
												{
													"key": "tz",
													"value": "elit aliquip minim ipsum"
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												},
												{
													"key": "featureFlagKey",
													"value": "nostrud incididunt",
													"description": "(Required) The feature flag key"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Get events usage",
							"id": "ab95bb11-5256-4ec7-b414-7d4147407064",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"events",
										":type"
									],
									"query": [
										{
											"key": "from",
											"value": "reprehenderit voluptate",
											"description": "The series of data returned starts from this timestamp. Defaults to 24 hours ago."
										},
										{
											"key": "to",
											"value": "incididunt ut mollit",
											"description": "The series of data returned ends at this timestamp. Defaults to the current time."
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "laboris in",
											"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
										}
									]
								},
								"description": "Get time-series arrays of the number of times a flag is evaluated, broken down by the variation that resulted from that evaluation. The granularity of the data depends on the age of the data requested. If the requested range is within the past two hours, minutely data is returned. If it is within the last two days, hourly data is returned. Otherwise, daily data is returned."
							},
							"response": [
								{
									"id": "f07fca18-e1ef-4a18-aa73-45a0ab6d57ed",
									"name": "Usage response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"events",
												":type"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "laboris in",
													"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"pariatura\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"voluptate_97\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"metadata\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "b94ccc01-f15c-44ca-b2c4-42276a8ee9a6",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"events",
												":type"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "laboris in",
													"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "3538a294-14a5-4fd9-9341-7f5609adec83",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"events",
												":type"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "laboris in",
													"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "40d7ba16-f9e9-4358-a7d3-594e590330d0",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"events",
												":type"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "laboris in",
													"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "b2cebc60-ea96-4146-8182-9d59dd0bbe2b",
									"name": "Invalid resource identifier",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"events",
												":type"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "laboris in",
													"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
								},
								{
									"id": "7db91c2b-f407-4482-9653-42cf25912ed5",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/events/:type?from=reprehenderit voluptate&to=incididunt ut mollit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"events",
												":type"
											],
											"query": [
												{
													"key": "from",
													"value": "reprehenderit voluptate"
												},
												{
													"key": "to",
													"value": "incididunt ut mollit"
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "laboris in",
													"description": "(Required) The type of event to retrieve. Must be either `received` or `published`."
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Get experimentation keys usage",
							"id": "ea119014-3be9-4db0-a40b-b6c410e7dd9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"usage",
										"experimentation-keys"
									],
									"query": [
										{
											"key": "from",
											"value": "voluptate dolor exercitation",
											"description": "The series of data returned starts from this timestamp (Unix seconds). Defaults to the beginning of the current month."
										},
										{
											"key": "to",
											"value": "culpa qui elit",
											"description": "The series of data returned ends at this timestamp (Unix seconds). Defaults to the current time."
										}
									]
								},
								"description": "Get a time-series array of the number of monthly experimentation keys from your account. The granularity is always daily, with a max of 31 days."
							},
							"response": [
								{
									"id": "5189fc3c-52d8-43e7-bd25-2271f4cbdfa4",
									"name": "Usage response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"experimentation-keys"
											],
											"query": [
												{
													"key": "from",
													"value": "voluptate dolor exercitation"
												},
												{
													"key": "to",
													"value": "culpa qui elit"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"series\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "84a2d460-2b74-403d-af9a-e1c1a74c8c06",
									"name": "Invalid request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"experimentation-keys"
											],
											"query": [
												{
													"key": "from",
													"value": "voluptate dolor exercitation"
												},
												{
													"key": "to",
													"value": "culpa qui elit"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "66c259dc-6fdd-4cf7-b24c-681e4d75c4ac",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"experimentation-keys"
											],
											"query": [
												{
													"key": "from",
													"value": "voluptate dolor exercitation"
												},
												{
													"key": "to",
													"value": "culpa qui elit"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "4eee3e8a-e8eb-47cb-8ec3-892a6a3a3d19",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"experimentation-keys"
											],
											"query": [
												{
													"key": "from",
													"value": "voluptate dolor exercitation"
												},
												{
													"key": "to",
													"value": "culpa qui elit"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "a896a0e8-ff67-4233-960e-c76cfb1b80b3",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"experimentation-keys"
											],
											"query": [
												{
													"key": "from",
													"value": "voluptate dolor exercitation"
												},
												{
													"key": "to",
													"value": "culpa qui elit"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								},
								{
									"id": "a2b944a3-38be-455d-9179-f43870ab2068",
									"name": "Service unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/usage/experimentation-keys?from=voluptate dolor exercitation&to=culpa qui elit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"usage",
												"experimentation-keys"
											],
											"query": [
												{
													"key": "from",
													"value": "voluptate dolor exercitation"
												},
												{
													"key": "to",
													"value": "culpa qui elit"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"service_unavailable\",\n  \"message\": \"Requested service unavailable\"\n}"
								}
							]
						}
					],
					"id": "f64fd7a3-43f0-4d3b-af07-9f6700f7ddc2"
				},
				{
					"name": "users/{projectKey}",
					"item": [
						{
							"name": "{environmentKey}",
							"item": [
								{
									"name": "{userKey}",
									"item": [
										{
											"name": "flags",
											"item": [
												{
													"name": "{featureFlagKey}",
													"item": [
														{
															"name": "Get flag setting for user",
															"id": "aa0bde3e-f578-4844-9eb3-49447b721b51",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags",
																		":featureFlagKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		}
																	]
																},
																"description": "Get a single flag setting for a user by flag key. <br /><br />The `_value` is the flag variation that the user receives. The `setting` indicates whether you've explicitly targeted a user to receive a particular variation. For example, if you have turned off a feature flag for a user, this setting will be `false`. The example response indicates that the user `Abbie_Braun` has the `sort.order` flag enabled."
															},
															"response": [
																{
																	"id": "0cbbc405-0741-4d85-bf29-dc4dc339a037",
																	"name": "User flag settings response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"_links\": {\n    \"sort.order\": {\n      \"href\": \"/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order\",\n      \"type\": \"application/json\"\n    }\n  },\n  \"_value\": {},\n  \"setting\": {},\n  \"reason\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
																},
																{
																	"id": "da746506-cbef-4b44-b0d1-671ef261e068",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "4f6f1c05-bbb9-41cb-a3d0-100d43d1d391",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "7025d227-67ba-4c38-8484-a07d2852c969",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "17caed27-c917-4879-8189-0711e4e47a9d",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "9ed55c7f-f1db-4b26-9228-b81b38b54cc7",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														},
														{
															"name": "Update flag settings for user",
															"id": "6656fe59-2cfe-401b-84e8-df7bd2d35909",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags",
																		":featureFlagKey"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		},
																		{
																			"key": "featureFlagKey",
																			"value": "nostrud incididunt",
																			"description": "(Required) The feature flag key"
																		}
																	]
																},
																"description": "Enable or disable a feature flag for a user based on their key.\n\nOmitting the `setting` attribute from the request body, or including a `setting` of `null`, erases the current setting for a user.\n\nIf you previously patched the flag, and the patch included the user's data, LaunchDarkly continues to use that data. If LaunchDarkly has never encountered the user's key before, it calculates the flag values based on the user key alone.\n"
															},
															"response": [
																{
																	"id": "4aa74e6a-2b8b-4ecc-bee3-5f26edff20cd",
																	"name": "Action succeeded",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"id": "433326fd-f094-4ca5-b435-9f541efb784a",
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
																},
																{
																	"id": "8c41f9c1-b351-4d81-8543-48caa00df84c",
																	"name": "Invalid access token",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
																},
																{
																	"id": "9db7eec9-48f7-499d-8233-d4e5a3acf354",
																	"name": "Forbidden",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
																},
																{
																	"id": "6f4041ee-55d1-4702-9503-c02d07459c56",
																	"name": "Invalid resource identifier",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
																},
																{
																	"id": "b2ca9be9-1875-4aca-8d74-9444ff294705",
																	"name": "Rate limited",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Authorization",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"setting\": {},\n  \"comment\": \"make sure this context experiences a specific variation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags/:featureFlagKey",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":projectKey",
																				":environmentKey",
																				":userKey",
																				"flags",
																				":featureFlagKey"
																			],
																			"variable": [
																				{
																					"key": "projectKey",
																					"value": "et dolor Duis",
																					"description": "(Required) The project key"
																				},
																				{
																					"key": "environmentKey",
																					"value": "consequat veniam dolor elit",
																					"description": "(Required) The environment key"
																				},
																				{
																					"key": "userKey",
																					"value": "pariatur minim e",
																					"description": "(Required) The user key"
																				},
																				{
																					"key": "featureFlagKey",
																					"value": "nostrud incididunt",
																					"description": "(Required) The feature flag key"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
																}
															]
														}
													],
													"id": "bf88ea90-732a-4eca-9640-16eaadc103e9"
												},
												{
													"name": "List flag settings for user",
													"id": "25d73637-1ca1-443e-90dd-e5ef7ffd6a7e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey",
																"flags"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														},
														"description": "Get the current flag settings for a given user. <br /><br />The `_value` is the flag variation that the user receives. The `setting` indicates whether you've explicitly targeted a user to receive a particular variation. For example, if you have turned off a feature flag for a user, this setting will be `false`. The example response indicates that the user `Abbie_Braun` has the `sort.order` flag enabled and the `alternate.page` flag disabled, and that the user has not been explicitly targeted to receive a particular variation."
													},
													"response": [
														{
															"id": "4a645ef5-1d6f-45b6-aa41-cabd0c198bea",
															"name": "User flag settings collection response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": {\n    \"alternate.page\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page\",\n          \"type\": \"application/json\"\n        }\n      },\n      \"_value\": false,\n      \"setting\": null\n    },\n    \"sort.order\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order\",\n          \"type\": \"application/json\"\n        }\n      },\n      \"_value\": true,\n      \"setting\": null\n    }\n  },\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v2/users/lacuna/production/Abbie_Braun/flags\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
														},
														{
															"id": "10f1d610-cd4d-4673-8d00-8f1c45cb872c",
															"name": "Invalid request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
														},
														{
															"id": "fbf02ee7-9a93-4851-8486-bdaf9e9f6ffd",
															"name": "Invalid access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
														},
														{
															"id": "3d026a64-e330-499e-ac1d-8112462e302a",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
														},
														{
															"id": "d3af7dc4-90f9-4c49-80ef-bcec6a0a92eb",
															"name": "Invalid resource identifier",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
														},
														{
															"id": "7c32d52a-19c2-4ff4-ac76-d5d25156ca7f",
															"name": "Rate limited",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey/flags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":projectKey",
																		":environmentKey",
																		":userKey",
																		"flags"
																	],
																	"variable": [
																		{
																			"key": "projectKey",
																			"value": "et dolor Duis",
																			"description": "(Required) The project key"
																		},
																		{
																			"key": "environmentKey",
																			"value": "consequat veniam dolor elit",
																			"description": "(Required) The environment key"
																		},
																		{
																			"key": "userKey",
																			"value": "pariatur minim e",
																			"description": "(Required) The user key"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
														}
													]
												}
											],
											"id": "b5058265-24d7-44ad-94a5-89c2063cf065"
										},
										{
											"name": "Get user",
											"id": "04636361-e106-43dc-b219-f07372d6acd1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey",
														":userKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														}
													]
												},
												"description": "Get a user by key. The `user` object contains all attributes sent in `variation` calls for that key."
											},
											"response": [
												{
													"id": "691c21b8-fc96-44c7-ad6d-c4130cd694c1",
													"name": "User response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"lastPing\": \"2022-06-28T23:21:29.176609596Z\",\n  \"environmentId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ownerId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"user\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sortValue\": {},\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/users/my-project/my-environment\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/users/my-project/my-environment/my-user\",\n      \"type\": \"application/json\"\n    },\n    \"settings\": {\n      \"href\": \"/api/v2/users/my-project/my-environment/my-user/flags\",\n      \"type\": \"text/html\"\n    },\n    \"site\": {\n      \"href\": \"/my-project/my-environment/users/my-user\",\n      \"type\": \"text/html\"\n    }\n  },\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
												},
												{
													"id": "0727576d-2001-4ce8-95c9-68a9e2f71851",
													"name": "Invalid request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
												},
												{
													"id": "fb3d2c22-d464-4d07-b6ac-193ffd21cd95",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "b565bee2-2188-4d27-9269-525fa081e7e6",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "d39a89d0-d4bc-48b9-95d6-914c690e0dc0",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "d39a2e62-17d9-42c6-9264-741bd008d4ef",
													"name": "Rate limited",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										},
										{
											"name": "Delete user",
											"id": "73294a36-31e4-4e51-83ed-5e0a85f440d6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey",
														":userKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														}
													]
												},
												"description": "Delete a user by key."
											},
											"response": [
												{
													"id": "8dd9dbf5-99bc-4494-b4d2-4464acdbca8a",
													"name": "Action succeeded",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"id": "3c306b69-b999-416c-b97d-dbf9fce34b99",
													"name": "Invalid access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
												},
												{
													"id": "60b8eace-01f6-4372-85f6-9605fa5bfd6c",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
												},
												{
													"id": "77e60e6d-96aa-4af5-9292-f6c4677d1c5a",
													"name": "Invalid resource identifier",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
												},
												{
													"id": "3aee3943-0707-4715-bdcd-1ffb2cb42de4",
													"name": "Status conflict",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"optimistic_locking_error\",\n  \"message\": \"Conflict. Optimistic lock error. Try again later.\"\n}"
												},
												{
													"id": "a31f1fcd-4a69-4884-8369-02e1e153fcf3",
													"name": "Rate limited",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey/:userKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":projectKey",
																":environmentKey",
																":userKey"
															],
															"variable": [
																{
																	"key": "projectKey",
																	"value": "et dolor Duis",
																	"description": "(Required) The project key"
																},
																{
																	"key": "environmentKey",
																	"value": "consequat veniam dolor elit",
																	"description": "(Required) The environment key"
																},
																{
																	"key": "userKey",
																	"value": "pariatur minim e",
																	"description": "(Required) The user key"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
												}
											]
										}
									],
									"id": "c502e794-2e9a-4530-94ac-c678813a14d7"
								},
								{
									"name": "List users",
									"id": "47c3eb1e-98aa-4789-bf78-6402867bb162",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":projectKey",
												":environmentKey"
											],
											"query": [
												{
													"key": "limit",
													"value": "-68672009",
													"description": "The number of elements to return per page"
												},
												{
													"key": "searchAfter",
													"value": "aliqua",
													"description": "Limits results to users with sort values after the value you specify. You can use this for pagination, but we recommend using the `next` link we provide instead."
												}
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "List all users in the environment. Includes the total count of users. This is useful for exporting all users in the system for further analysis.\n\nEach page displays users up to a set `limit`. The default is 20. To page through, follow the `next` link in the `_links` object. To learn more, read [Representations](/#section/Representations).\n"
									},
									"response": [
										{
											"id": "28154192-d175-4ed9-8e8a-2e70001642e1",
											"name": "Users collection response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey"
													],
													"query": [
														{
															"key": "limit",
															"value": "-68672009"
														},
														{
															"key": "searchAfter",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 245,\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/api/v2/users/my-project/my-environment?after=1647993600000&limit=20&searchAfter=my-user\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/users/my-project/my-environment?after=1647993600000&limit=20\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
										},
										{
											"id": "3fb4a81b-e688-4168-a630-1ff02a759a1a",
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey"
													],
													"query": [
														{
															"key": "limit",
															"value": "-68672009"
														},
														{
															"key": "searchAfter",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "67f162a5-97d6-48c8-8f64-04e6891e3f2c",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey"
													],
													"query": [
														{
															"key": "limit",
															"value": "-68672009"
														},
														{
															"key": "searchAfter",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "afe7d763-2733-4052-b069-78dc4ea9fa70",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey"
													],
													"query": [
														{
															"key": "limit",
															"value": "-68672009"
														},
														{
															"key": "searchAfter",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "d5e925e9-d485-4002-899c-0361abc174f8",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey"
													],
													"query": [
														{
															"key": "limit",
															"value": "-68672009"
														},
														{
															"key": "searchAfter",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "d7d9ec8f-24ca-48bb-93e9-7a5d81e69b54",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:environmentKey?limit=-68672009&searchAfter=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":environmentKey"
													],
													"query": [
														{
															"key": "limit",
															"value": "-68672009"
														},
														{
															"key": "searchAfter",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "75193615-645d-4c42-8e01-51445b140d30"
						},
						{
							"name": "{userKey}/expiring-user-targets/{environmentKey}",
							"item": [
								{
									"name": "Get expiring dates on flags for user",
									"id": "c235c951-c5d7-49ce-85c8-f3db438afb7f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":projectKey",
												":userKey",
												"expiring-user-targets",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "userKey",
													"value": "pariatur minim e",
													"description": "(Required) The user key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "Get a list of flags for which the given user is scheduled for removal."
									},
									"response": [
										{
											"id": "63443107-63ed-4a9d-94f3-82673620e71c",
											"name": "Expiring user target response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"exercitation_2\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"temporde\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"magna_a0\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
										},
										{
											"id": "2b6a5417-c6fb-430c-9da8-0b094d16911d",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "fcce9fd0-4a9e-40fc-9019-9295a0495bbc",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "4a094ad7-0bea-4c6f-bd39-f07ff9e67ff6",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "8e7a0892-cb27-4216-a25a-e524e587d2a1",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update expiring user target for flags",
									"id": "ef9fcbae-05e5-413c-9450-f040e4d877e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users",
												":projectKey",
												":userKey",
												"expiring-user-targets",
												":environmentKey"
											],
											"variable": [
												{
													"key": "projectKey",
													"value": "et dolor Duis",
													"description": "(Required) The project key"
												},
												{
													"key": "userKey",
													"value": "pariatur minim e",
													"description": "(Required) The user key"
												},
												{
													"key": "environmentKey",
													"value": "consequat veniam dolor elit",
													"description": "(Required) The environment key"
												}
											]
										},
										"description": "Schedule the specified user for removal from individual targeting on one or more flags. The user must already be individually targeted for each flag.\n\nYou can add, update, or remove a scheduled removal date. You can only schedule a user for removal on a single variation per flag.\n\nThis request only supports semantic patches. To make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\n#### addExpireUserTargetDate\n\nAdds a date and time that LaunchDarkly will remove the user from the flag's individual targeting.\n\n##### Parameters\n\n* `value`: The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag.\n\n#### updateExpireUserTargetDate\n\nUpdates the date and time that LaunchDarkly will remove the user from the flag's individual targeting.\n\n##### Parameters\n\n* `value`: The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag.\n* `version`: The version of the flag variation to update. You can retrieve this by making a GET request for the flag.\n\n#### removeExpireUserTargetDate\n\nRemoves the scheduled removal of the user from the flag's individual targeting. The user will remain part of the flag's individual targeting until explicitly removed, or until another removal is scheduled.\n"
									},
									"response": [
										{
											"id": "62f2ecda-e7c9-4e94-a120-be3feaf85926",
											"name": "Expiring user target response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"occaecat_a37\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"nisi_ab\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"enim2c\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"aute4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalInstructions\": 1,\n  \"successfulInstructions\": 1,\n  \"failedInstructions\": 0,\n  \"errors\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
										},
										{
											"id": "086e4a2e-ec32-4b27-b312-4af837866568",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "3ad661be-c57d-43fb-b77f-6064195d5d2b",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "c43aa2ee-3b40-483f-a0e2-38f24120f57c",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "d7ecfe97-8e19-43fd-b44f-c751167e93a1",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "e6fb8e65-9b52-46e2-a6d8-ce731c169ac8",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"instructions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"comment\": \"optional comment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:projectKey/:userKey/expiring-user-targets/:environmentKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":projectKey",
														":userKey",
														"expiring-user-targets",
														":environmentKey"
													],
													"variable": [
														{
															"key": "projectKey",
															"value": "et dolor Duis",
															"description": "(Required) The project key"
														},
														{
															"key": "userKey",
															"value": "pariatur minim e",
															"description": "(Required) The user key"
														},
														{
															"key": "environmentKey",
															"value": "consequat veniam dolor elit",
															"description": "(Required) The environment key"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "5adf3235-40fc-4ce3-a6c3-70c8985da497"
						}
					],
					"id": "05d14be3-0aed-43d0-b45c-7c2dcc08f574"
				},
				{
					"name": "webhooks",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get webhook",
									"id": "f4c9ae17-8ebe-46a1-b513-05d332cfec8c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "id quis",
													"description": "(Required) The ID of the webhook"
												}
											]
										},
										"description": "Get a single webhook by ID."
									},
									"response": [
										{
											"id": "c7ec4a21-f9c8-404c-ab19-4124d48f2ecc",
											"name": "Webhook response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "id quis",
															"description": "(Required) The ID of the webhook"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"officia4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occaecat0a5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"url\": \"http://www.example.com\",\n  \"on\": true,\n  \"tags\": [\n    \"examples\"\n  ],\n  \"name\": \"Example hook\",\n  \"secret\": \"frobozz\",\n  \"statements\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "ac86251d-91db-4c57-809a-6120cfdbdbff",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "id quis",
															"description": "(Required) The ID of the webhook"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "b60a7d4f-f856-4d34-b4dd-0902d850aaa7",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "id quis",
															"description": "(Required) The ID of the webhook"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "9da232a3-9cd7-4b42-a4ec-f0aa40196a9f",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "id quis",
															"description": "(Required) The ID of the webhook"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "6e486037-b27b-471b-aca1-485f5c958a87",
											"name": "Rate limited",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "id quis",
															"description": "(Required) The ID of the webhook"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Update webhook",
									"id": "144cddde-98d6-4450-aec2-1fb03b4328b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "ad dolor aliqua",
													"description": "(Required) The ID of the webhook to update"
												}
											]
										},
										"description": "Update a webhook's settings. The request should be a valid JSON Patch document describing the changes to be made to the webhook."
									},
									"response": [
										{
											"id": "7e5df1f6-44ff-476e-b1ae-d9b7c1ed40e7",
											"name": "Webhook response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ad dolor aliqua",
															"description": "(Required) The ID of the webhook to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"_links\": {\n    \"officia4\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"occaecat0a5\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"url\": \"http://www.example.com\",\n  \"on\": true,\n  \"tags\": [\n    \"examples\"\n  ],\n  \"name\": \"Example hook\",\n  \"secret\": \"frobozz\",\n  \"statements\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
										},
										{
											"id": "c39f0349-7ea5-4cf3-a6ee-575b073cb9b3",
											"name": "Invalid request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ad dolor aliqua",
															"description": "(Required) The ID of the webhook to update"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
										},
										{
											"id": "6c03860e-3b77-45ff-b510-5e66d67315a4",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ad dolor aliqua",
															"description": "(Required) The ID of the webhook to update"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "93d98f7a-798c-4586-9d64-675ec5eaa0b0",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ad dolor aliqua",
															"description": "(Required) The ID of the webhook to update"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "51c9fa37-c88f-47d4-b064-810ccc7e76b3",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ad dolor aliqua",
															"description": "(Required) The ID of the webhook to update"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "f97878ff-3216-4a10-8d19-973d88c550bf",
											"name": "Rate limited",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"/on\",\n    \"value\": false\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ad dolor aliqua",
															"description": "(Required) The ID of the webhook to update"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								},
								{
									"name": "Delete webhook",
									"id": "9dd5238e-4417-4d58-931e-9212bde3a786",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "quis dolore sit sunt veli",
													"description": "(Required) The ID of the webhook to delete"
												}
											]
										},
										"description": "Delete a webhook by ID."
									},
									"response": [
										{
											"id": "364e9ae5-1000-4c3d-aef5-ecd9f8e14049",
											"name": "Action succeeded",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "quis dolore sit sunt veli",
															"description": "(Required) The ID of the webhook to delete"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "9d0d78c0-1a72-486b-a43f-0d36ee5072b1",
											"name": "Invalid access token",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "quis dolore sit sunt veli",
															"description": "(Required) The ID of the webhook to delete"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
										},
										{
											"id": "8e8b0845-1f1a-44e2-9350-15caca47a7c8",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "quis dolore sit sunt veli",
															"description": "(Required) The ID of the webhook to delete"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
										},
										{
											"id": "af0a4fbb-f168-438a-9063-e6a5a93a367e",
											"name": "Invalid resource identifier",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "quis dolore sit sunt veli",
															"description": "(Required) The ID of the webhook to delete"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
										},
										{
											"id": "3ce9b189-d2a9-407d-a8b2-1892730db344",
											"name": "Rate limited",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/webhooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"webhooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "quis dolore sit sunt veli",
															"description": "(Required) The ID of the webhook to delete"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
										}
									]
								}
							],
							"id": "e6977eca-08bc-4a58-873a-3a9fbf7005b9"
						},
						{
							"name": "List webhooks",
							"id": "c54f963a-eb7e-4bb4-a377-27aa35b7c73d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"webhooks"
									]
								},
								"description": "Fetch a list of all webhooks."
							},
							"response": [
								{
									"id": "e468870e-c9ac-4ee0-9268-2ea0702f9414",
									"name": "Webhooks response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"aliqua_45\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ]\n}"
								},
								{
									"id": "cae6b3eb-6828-4325-9267-b132492fa974",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "2321b8e7-8fba-4317-93ef-5f749268c26b",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "f0d8ec73-aed5-4993-b6f7-476436d4aab4",
									"name": "Rate limited",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						},
						{
							"name": "Creates a webhook",
							"id": "8b947aac-d194-4a6a-9b97-b15760c003c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"apidocs test webhook\",\n  \"on\": true,\n  \"sign\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/test\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"url\": \"https://example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"webhooks"
									]
								},
								"description": "Create a new webhook."
							},
							"response": [
								{
									"id": "ba57fb0a-b992-48e0-9ede-3ea87bbca89e",
									"name": "Webhook response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"apidocs test webhook\",\n  \"on\": true,\n  \"sign\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/test\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"url\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"_links\": {\n    \"commodo_f46\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"_id\": \"57be1db38b75bf0772d11384\",\n  \"url\": \"http://www.example.com\",\n  \"on\": true,\n  \"tags\": [\n    \"examples\"\n  ],\n  \"name\": \"Example hook\",\n  \"secret\": \"frobozz\",\n  \"statements\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_access\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
								},
								{
									"id": "74b3ea4a-fa41-4893-94d5-3328b126329f",
									"name": "Invalid request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"apidocs test webhook\",\n  \"on\": true,\n  \"sign\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/test\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"url\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
								},
								{
									"id": "9f8dcc70-1259-41cf-af38-225470e16bf4",
									"name": "Invalid access token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"apidocs test webhook\",\n  \"on\": true,\n  \"sign\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/test\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"url\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
								},
								{
									"id": "2a234dd3-04e9-40b4-a83c-794d30f6f6e4",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"apidocs test webhook\",\n  \"on\": true,\n  \"sign\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/test\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"url\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
								},
								{
									"id": "27c2a9f7-089a-4760-8bdf-9e2279379136",
									"name": "Rate limited",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"apidocs test webhook\",\n  \"on\": true,\n  \"sign\": false,\n  \"statements\": [\n    {\n      \"actions\": [\n        \"*\"\n      ],\n      \"effect\": \"allow\",\n      \"resources\": [\n        \"proj/test\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"example-tag\"\n  ],\n  \"url\": \"https://example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"webhooks"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
								}
							]
						}
					],
					"id": "1a27c76d-506d-46fe-9ab8-a8cb8bc4af7f"
				},
				{
					"name": "Root resource",
					"id": "b14f411d-8977-488e-bea0-773124343be0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2"
							]
						},
						"description": "Get all of the resource categories the API supports. In the sandbox, click 'Try it' and enter any string in the 'Authorization' field to test this endpoint."
					},
					"response": [
						{
							"id": "d0795827-70cc-4535-8a06-b6c63f25aef1",
							"name": "Root response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ea_5\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"ea__60\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"incididunt_44a\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get flag status across environments",
					"id": "36285997-f800-4976-8624-9fd7360cc260",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/flag-status/:projectKey/:featureFlagKey?env=id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"flag-status",
								":projectKey",
								":featureFlagKey"
							],
							"query": [
								{
									"key": "env",
									"value": "id",
									"description": "Optional environment filter"
								}
							],
							"variable": [
								{
									"key": "projectKey",
									"value": "et dolor Duis",
									"description": "(Required) The project key"
								},
								{
									"key": "featureFlagKey",
									"value": "nostrud incididunt",
									"description": "(Required) The feature flag key"
								}
							]
						},
						"description": "Get the status for a particular feature flag across environments."
					},
					"response": [
						{
							"id": "d21c969d-c16f-4b0d-b9e5-5907acf71c3c",
							"name": "Flag status across environments response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-status/:projectKey/:featureFlagKey?env=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-status",
										":projectKey",
										":featureFlagKey"
									],
									"query": [
										{
											"key": "env",
											"value": "id"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"environments\": {\n    \"production\": {\n      \"lastRequested\": \"2020-02-05T18:17:01.514Z\",\n      \"name\": \"inactive\"\n    }\n  },\n  \"key\": \"my-flag\",\n  \"_links\": {\n    \"parent\": {\n      \"href\": \"/api/v2/flag-status\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/flag-status/my-project/my-flag\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
						},
						{
							"id": "593b483f-1a53-4f9e-bbde-e5552322369a",
							"name": "Invalid access token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-status/:projectKey/:featureFlagKey?env=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-status",
										":projectKey",
										":featureFlagKey"
									],
									"query": [
										{
											"key": "env",
											"value": "id"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
						},
						{
							"id": "d833c0bd-441c-47ea-a71a-896bd9e0d6a2",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-status/:projectKey/:featureFlagKey?env=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-status",
										":projectKey",
										":featureFlagKey"
									],
									"query": [
										{
											"key": "env",
											"value": "id"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
						},
						{
							"id": "b86d0c10-9e90-48a2-8ecc-c4243034f00a",
							"name": "Invalid resource identifier",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-status/:projectKey/:featureFlagKey?env=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-status",
										":projectKey",
										":featureFlagKey"
									],
									"query": [
										{
											"key": "env",
											"value": "id"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
						},
						{
							"id": "516fae06-4a3a-4e2d-865a-cf9efc23690e",
							"name": "Rate limited",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/flag-status/:projectKey/:featureFlagKey?env=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"flag-status",
										":projectKey",
										":featureFlagKey"
									],
									"query": [
										{
											"key": "env",
											"value": "id"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "featureFlagKey",
											"value": "nostrud incididunt",
											"description": "(Required) The feature flag key"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
						}
					]
				},
				{
					"name": "Gets the OpenAPI spec in json",
					"id": "f1831f4e-3171-4337-8712-d9476ed1cf4f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/openapi.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"openapi.json"
							]
						},
						"description": "Get the latest version of the OpenAPI specification for LaunchDarkly's API in JSON format. In the sandbox, click 'Try it' and enter any string in the 'Authorization' field to test this endpoint."
					},
					"response": [
						{
							"id": "96dfc00f-f0b2-4cfc-b240-82af5b77dbd0",
							"name": "OpenAPI Spec",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/openapi.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"openapi.json"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets the public IP list",
					"id": "8786a608-2bb1-4893-a939-95ba38126ff3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/public-ip-list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"public-ip-list"
							]
						},
						"description": "Get a list of IP ranges the LaunchDarkly service uses. You can use this list to allow LaunchDarkly through your firewall. We post upcoming changes to this list in advance on our [status page](https://status.launchdarkly.com/). <br /><br />In the sandbox, click 'Try it' and enter any string in the 'Authorization' field to test this endpoint."
					},
					"response": [
						{
							"id": "0115ed56-e6b0-4534-b3b6-73cb4c4a7a43",
							"name": "Public IP response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/public-ip-list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"public-ip-list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"addresses\": [\n    \"104.156.80.0/20\",\n    \"151.101.0.0/16\"\n  ],\n  \"outboundAddresses\": [\n    \"52.21.152.96/32\"\n  ]\n}"
						}
					]
				},
				{
					"name": "List tags",
					"id": "cc4f394d-fd9b-4fd3-b486-25a919ea8cde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/tags?kind=mollit laborum ad veniam&pre=commodo deserunt aute elit&archived=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"tags"
							],
							"query": [
								{
									"key": "kind",
									"value": "mollit laborum ad veniam",
									"description": "Fetch tags associated with the specified resource type. Options are `flag`, `project`, `environment`, `segment`. Returns all types by default."
								},
								{
									"key": "pre",
									"value": "commodo deserunt aute elit",
									"description": "Return tags with the specified prefix"
								},
								{
									"key": "archived",
									"value": "true",
									"description": "Whether or not to return archived flags"
								}
							]
						},
						"description": "Get a list of tags."
					},
					"response": [
						{
							"id": "d2b78aea-c735-49d3-b2dd-746fbb3a97e7",
							"name": "Tag collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/tags?kind=mollit laborum ad veniam&pre=commodo deserunt aute elit&archived=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tags"
									],
									"query": [
										{
											"key": "kind",
											"value": "mollit laborum ad veniam"
										},
										{
											"key": "pre",
											"value": "commodo deserunt aute elit"
										},
										{
											"key": "archived",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"items\": [\n    \"ops\",\n    \"pro\"\n  ],\n  \"_links\": {\n    \"culpae\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"dolore__8\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"totalCount\": 103\n}"
						},
						{
							"id": "5197ebb8-68ed-4dac-961d-f3a4e9105fb6",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/tags?kind=mollit laborum ad veniam&pre=commodo deserunt aute elit&archived=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tags"
									],
									"query": [
										{
											"key": "kind",
											"value": "mollit laborum ad veniam"
										},
										{
											"key": "pre",
											"value": "commodo deserunt aute elit"
										},
										{
											"key": "archived",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
						},
						{
							"id": "b5892e06-c10c-4733-acd3-ee26cf776cba",
							"name": "Invalid access token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/tags?kind=mollit laborum ad veniam&pre=commodo deserunt aute elit&archived=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tags"
									],
									"query": [
										{
											"key": "kind",
											"value": "mollit laborum ad veniam"
										},
										{
											"key": "pre",
											"value": "commodo deserunt aute elit"
										},
										{
											"key": "archived",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
						},
						{
							"id": "086886c3-5643-4527-a063-5443e3307808",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/tags?kind=mollit laborum ad veniam&pre=commodo deserunt aute elit&archived=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tags"
									],
									"query": [
										{
											"key": "kind",
											"value": "mollit laborum ad veniam"
										},
										{
											"key": "pre",
											"value": "commodo deserunt aute elit"
										},
										{
											"key": "archived",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
						},
						{
							"id": "f6cc0df3-d1f5-40f1-baaf-3b7ec09a1153",
							"name": "Rate limited",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/tags?kind=mollit laborum ad veniam&pre=commodo deserunt aute elit&archived=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"tags"
									],
									"query": [
										{
											"key": "kind",
											"value": "mollit laborum ad veniam"
										},
										{
											"key": "pre",
											"value": "commodo deserunt aute elit"
										},
										{
											"key": "archived",
											"value": "true"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
						}
					]
				},
				{
					"name": "Get user attribute names",
					"id": "796f16a7-7b3b-46d3-924c-5873b4914551",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/user-attributes/:projectKey/:environmentKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"user-attributes",
								":projectKey",
								":environmentKey"
							],
							"variable": [
								{
									"key": "projectKey",
									"value": "et dolor Duis",
									"description": "(Required) The project key"
								},
								{
									"key": "environmentKey",
									"value": "consequat veniam dolor elit",
									"description": "(Required) The environment key"
								}
							]
						},
						"description": "Get all in-use user attributes in the specified environment. The set of in-use attributes typically consists of all attributes seen within the past 30 days."
					},
					"response": [
						{
							"id": "5f4ff69f-50ca-4ca4-a9f0-24908f1fe1ec",
							"name": "User attribute names response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-attributes/:projectKey/:environmentKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-attributes",
										":projectKey",
										":environmentKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"private\": [\n    \"SSN\",\n    \"credit_card_number\"\n  ],\n  \"custom\": [\n    \"Age\",\n    \"FavoriteFood\",\n    \"FavoriteColor\"\n  ],\n  \"standard\": [\n    \"key\",\n    \"ip\",\n    \"firstName\",\n    \"lastName\",\n    \"country\",\n    \"anonymous\"\n  ]\n}"
						},
						{
							"id": "50580cb2-705a-4fd1-8840-123d677b4ff8",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-attributes/:projectKey/:environmentKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-attributes",
										":projectKey",
										":environmentKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
						},
						{
							"id": "eef195a8-cdac-4638-bf1e-1ee172871467",
							"name": "Invalid access token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-attributes/:projectKey/:environmentKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-attributes",
										":projectKey",
										":environmentKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
						},
						{
							"id": "f4d9e5b2-7b9a-4ef5-a290-22e138897d86",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-attributes/:projectKey/:environmentKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-attributes",
										":projectKey",
										":environmentKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
						},
						{
							"id": "97138c7c-8ff5-42e5-8faa-53212fc457bb",
							"name": "Invalid resource identifier",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-attributes/:projectKey/:environmentKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-attributes",
										":projectKey",
										":environmentKey"
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
						}
					]
				},
				{
					"name": "Find users",
					"id": "9e82071b-91e0-4105-8f02-aaea8c58a208",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"user-search",
								":projectKey",
								":environmentKey"
							],
							"query": [
								{
									"key": "q",
									"value": "dolor non ex",
									"description": "Full-text search for users based on name, first name, last name, e-mail address, or key"
								},
								{
									"key": "limit",
									"value": "-57934563",
									"description": "Specifies the maximum number of items in the collection to return (max: 50, default: 20)"
								},
								{
									"key": "offset",
									"value": "4359603",
									"description": "Specifies the first item to return in the collection"
								},
								{
									"key": "after",
									"value": "-27369419",
									"description": "A Unix epoch time in milliseconds specifying the maximum last time a user requested a feature flag from LaunchDarkly"
								},
								{
									"key": "sort",
									"value": "officia quis",
									"description": "Specifies a field by which to sort. LaunchDarkly supports the `userKey` and `lastSeen` fields. Fields prefixed by a dash ( - ) sort in descending order."
								},
								{
									"key": "searchAfter",
									"value": "aliqua",
									"description": "Limits results to users with sort values after the value you specify. You can use this for pagination, but we recommend using the `next` link we provide instead."
								},
								{
									"key": "filter",
									"value": "consequat Duis amet mollit",
									"description": "A comma-separated list of user attribute filters. Each filter is in the form of attributeKey:attributeValue"
								}
							],
							"variable": [
								{
									"key": "projectKey",
									"value": "et dolor Duis",
									"description": "(Required) The project key"
								},
								{
									"key": "environmentKey",
									"value": "consequat veniam dolor elit",
									"description": "(Required) The environment key"
								}
							]
						},
						"description": "Search users in LaunchDarkly based on their last active date, a user attribute filter set, or a search query.\n\nAn example user attribute filter set is `filter=firstName:Anna,activeTrial:false`. This matches users that have the user attribute `firstName` set to `Anna`, that also have the attribute `activeTrial` set to `false`.\n\nTo paginate through results, follow the `next` link in the `_links` object. To learn more, read [Representations](/#section/Representations).\n\n> ### `offset` is deprecated\n>\n> `offset` is deprecated and will be removed in a future API version. You can still use `offset` and `limit` for pagination, but we recommend you use `sort` and `searchAfter` instead. `searchAfter` allows you to page through more than 10,000 users, but `offset` and `limit` do not.\n"
					},
					"response": [
						{
							"id": "53013896-ee40-4758-9342-fa6cad3c412d",
							"name": "Users collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-search",
										":projectKey",
										":environmentKey"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor non ex"
										},
										{
											"key": "limit",
											"value": "-57934563"
										},
										{
											"key": "offset",
											"value": "4359603"
										},
										{
											"key": "after",
											"value": "-27369419"
										},
										{
											"key": "sort",
											"value": "officia quis"
										},
										{
											"key": "searchAfter",
											"value": "aliqua"
										},
										{
											"key": "filter",
											"value": "consequat Duis amet mollit"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 245,\n  \"items\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"_links\": {\n    \"next\": {\n      \"href\": \"/api/v2/user-search/my-project/my-environment?after=1647993600000&limit=20&searchAfter=my-user&sort=userKey\",\n      \"type\": \"application/json\"\n    },\n    \"self\": {\n      \"href\": \"/api/v2/user-search/my-project/my-environment?after=1647993600000&limit=20&sort=userKey\",\n      \"type\": \"application/json\"\n    }\n  }\n}"
						},
						{
							"id": "75555b6b-eaff-4eac-9def-fecf72e107cf",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-search",
										":projectKey",
										":environmentKey"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor non ex"
										},
										{
											"key": "limit",
											"value": "-57934563"
										},
										{
											"key": "offset",
											"value": "4359603"
										},
										{
											"key": "after",
											"value": "-27369419"
										},
										{
											"key": "sort",
											"value": "officia quis"
										},
										{
											"key": "searchAfter",
											"value": "aliqua"
										},
										{
											"key": "filter",
											"value": "consequat Duis amet mollit"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"invalid_request\",\n  \"message\": \"Invalid request body\"\n}"
						},
						{
							"id": "9e5c4be1-701e-477c-b357-7ce4c52b56ed",
							"name": "Invalid access token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-search",
										":projectKey",
										":environmentKey"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor non ex"
										},
										{
											"key": "limit",
											"value": "-57934563"
										},
										{
											"key": "offset",
											"value": "4359603"
										},
										{
											"key": "after",
											"value": "-27369419"
										},
										{
											"key": "sort",
											"value": "officia quis"
										},
										{
											"key": "searchAfter",
											"value": "aliqua"
										},
										{
											"key": "filter",
											"value": "consequat Duis amet mollit"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
						},
						{
							"id": "209c2408-919c-4d2a-b748-c00523d9c315",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-search",
										":projectKey",
										":environmentKey"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor non ex"
										},
										{
											"key": "limit",
											"value": "-57934563"
										},
										{
											"key": "offset",
											"value": "4359603"
										},
										{
											"key": "after",
											"value": "-27369419"
										},
										{
											"key": "sort",
											"value": "officia quis"
										},
										{
											"key": "searchAfter",
											"value": "aliqua"
										},
										{
											"key": "filter",
											"value": "consequat Duis amet mollit"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
						},
						{
							"id": "d0b94d4c-923a-4117-b5c6-38c2beae825d",
							"name": "Invalid resource identifier",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-search",
										":projectKey",
										":environmentKey"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor non ex"
										},
										{
											"key": "limit",
											"value": "-57934563"
										},
										{
											"key": "offset",
											"value": "4359603"
										},
										{
											"key": "after",
											"value": "-27369419"
										},
										{
											"key": "sort",
											"value": "officia quis"
										},
										{
											"key": "searchAfter",
											"value": "aliqua"
										},
										{
											"key": "filter",
											"value": "consequat Duis amet mollit"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"not_found\",\n  \"message\": \"Invalid resource identifier\"\n}"
						},
						{
							"id": "730d7802-df0c-4656-a6ed-f0ea9d52c59e",
							"name": "Rate limited",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user-search/:projectKey/:environmentKey?q=dolor non ex&limit=-57934563&offset=4359603&after=-27369419&sort=officia quis&searchAfter=aliqua&filter=consequat Duis amet mollit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user-search",
										":projectKey",
										":environmentKey"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor non ex"
										},
										{
											"key": "limit",
											"value": "-57934563"
										},
										{
											"key": "offset",
											"value": "4359603"
										},
										{
											"key": "after",
											"value": "-27369419"
										},
										{
											"key": "sort",
											"value": "officia quis"
										},
										{
											"key": "searchAfter",
											"value": "aliqua"
										},
										{
											"key": "filter",
											"value": "consequat Duis amet mollit"
										}
									],
									"variable": [
										{
											"key": "projectKey",
											"value": "et dolor Duis",
											"description": "(Required) The project key"
										},
										{
											"key": "environmentKey",
											"value": "consequat veniam dolor elit",
											"description": "(Required) The environment key"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
						}
					]
				},
				{
					"name": "Get version information",
					"id": "aecdb9cf-ca87-47ce-bf9c-5cc25e90b61b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v2/versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"versions"
							]
						},
						"description": "Get the latest API version, the list of valid API versions in ascending order, and the version being used for this request. These are all in the external, date-based format."
					},
					"response": [
						{
							"id": "dbd098b6-1ad0-498c-a220-ccbe98be7671",
							"name": "Versions information response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"versions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"validVersions\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"latestVersion\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"currentVersion\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"beta\": false\n}"
						},
						{
							"id": "161abeab-681f-4b4a-9719-3df101e8e1f4",
							"name": "Invalid access token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"versions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"unauthorized\",\n  \"message\": \"Invalid access token\"\n}"
						},
						{
							"id": "a38b6d65-c9d9-491c-b6bc-a27099fde8e9",
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"versions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"forbidden\",\n  \"message\": \"Forbidden. Access to the requested resource was denied.\"\n}"
						},
						{
							"id": "3461cafb-0b5f-43f9-af41-27104fe9444d",
							"name": "Rate limited",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"versions"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"rate_limited\",\n  \"message\": \"You've exceeded the API rate limit. Try again later.\"\n}"
						}
					]
				}
			],
			"id": "46c3571b-29b3-47e7-9dc5-235ee9e83f4e"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "65b33eb1-dc3c-452e-a26e-415c3b98a814",
			"key": "baseUrl",
			"value": "https://app.launchdarkly.com",
			"type": "string"
		}
	]
}